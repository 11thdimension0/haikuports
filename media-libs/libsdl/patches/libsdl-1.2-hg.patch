--- libsdl-1.2-hg/src/audio/baudio/SDL_beaudio.cc   dim. nov. 04 19:07:49 2012 +0100
+++ b/src/audio/baudio/SDL_beaudio.cc   mar. janv. 01 22:41:22 2013 +0100
@@ -199,11 +199,11 @@
        return (-1);
    }

-    format.buffer_size = spec->samples;
-
	/* Calculate the final parameters for this audio specification */
	SDL_CalculateAudioSpec(spec);

+    format.buffer_size = spec->size;
+
	/* Subscribe to the audio stream (creates a new thread) */
	{ sigset_t omask;
		SDL_MaskSignals(&omask);
         return (-1);
     }
diff -r 9cff1c7c0fff src/video/bwindow/SDL_sysvideo.cc
--- libsdl-1.2-hg/src/video/bwindow/SDL_sysvideo.cc	dim. juin 03 05:03:45 2012 -0400
+++ b/src/video/bwindow/SDL_sysvideo.cc	sam. juin 09 11:01:28 2012 +0200
@@ -456,14 +456,6 @@
 		// printf("Going windowed\n"); 
 	SDL_Win->SetFullScreen(fullscreen);
 	
-	// Calculate offsets for centering the window (in window mode) and for
-	// dentering the bitmap (in full screen mode).
-	BRect bounds = bscreen.Frame();
-	bounds.PrintToStream();
-	int32 cx = (bounds.IntegerWidth() - width)/2;
-	int32 cy = (bounds.IntegerHeight() - height)/2;
-	
-	// printf ("cx = %d, cy = %d\n", cx, cy);
 	if (!SDL_Win->IsFullScreen()) {
 		// printf("Doing not fullscreen stuff.\n");
 		// We are not in full screen mode, so we want to change the window
@@ -471,9 +463,13 @@
 		SDL_Win->ResizeTo(width, height);
 		
 		// And also center the window and reset the drawing offset.
-		SDL_Win->MoveTo(cx, cy);
 		SDL_Win->SetXYOffset(0, 0);
 	} else {
+		// Calculate offsets for centering the bitmap
+		BRect bounds = bscreen.Frame();
+		int32 cx = (bounds.IntegerWidth() - width)/2;
+		int32 cy = (bounds.IntegerHeight() - height)/2;
+	
 		// printf("Doing fullscreen stuff.");
 		// Center the bitmap whenever we are in full screen mode.
 		SDL_Win->SetXYOffset(cx, cy);
