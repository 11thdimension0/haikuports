From 5cca79ee50fbf704e67d337a16adf66877a976cd Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Sat, 9 Nov 2013 02:30:27 +0100
Subject: Defs-haiku.gmk: Fix Haiku specific *_PATH variables

* /boot/common has been removed in Haiku.
* USRBIN_PATH is /system/bin.
* UNIXCCS_PATH: The installation directory for binutils/gcc has
  changed.
* DEVTOOLS_PATH: Match the comment. Tools like zip etc. live in
  /system/bin.

diff --git a/make/common/shared/Defs-haiku.gmk b/make/common/shared/Defs-haiku.gmk
index c1cc440..134e128 100644
--- a/make/common/shared/Defs-haiku.gmk
+++ b/make/common/shared/Defs-haiku.gmk
@@ -54,11 +54,10 @@ $(shell if [ "$1" != "" -a -d "$1" ]; then (cd $1 && pwd); else echo "$1"; fi)
 endef
 
 BOOTSYSTEMBIN_PATH = $(shell finddir B_SYSTEM_BIN_DIRECTORY)/
-BOOTCOMMONBIN_PATH = $(shell finddir B_COMMON_BIN_DIRECTORY)/
 BOOTSYSTEMDEVELOP_PATH = $(shell finddir B_SYSTEM_DEVELOP_DIRECTORY)/
 
 # Location on system where jdk installs might be
-USRJDKINSTANCES_PATH =$(BOOTCOMMONBIN_PATH)/java
+USRJDKINSTANCES_PATH =$(BOOTSYSTEMBIN_PATH)/java
 
 # UNIXCOMMAND_PATH: path to where the most common Unix commands are.
 #  NOTE: Must end with / so that it could be empty, allowing PATH usage.
@@ -73,7 +72,7 @@ endif
 ifneq "$(origin ALT_USRBIN_PATH)" "undefined"
   USRBIN_PATH :=$(call PrefixPath,$(ALT_USRBIN_PATH))
 else
-  USRBIN_PATH  = $(BOOTCOMMONBIN_PATH)
+  USRBIN_PATH  = $(BOOTSYSTEMBIN_PATH)
 endif
 
 # UNIXCCS_PATH: path to where the Solaris ported UNIX commands can be found
@@ -81,7 +80,7 @@ endif
 ifneq "$(origin ALT_UNIXCCS_PATH)" "undefined"
   UNIXCCS_PATH :=$(call PrefixPath,$(ALT_UNIXCCS_PATH))
 else
-  UNIXCCS_PATH = $(BOOTSYSTEMDEVELOP_PATH)/tools/gnupro/
+  UNIXCCS_PATH = $(BOOTSYSTEMDEVELOP_PATH)/tools/
 endif
 
 # SLASH_JAVA: location of all network accessable files
@@ -103,7 +102,7 @@ endif
 ifneq "$(origin ALT_COMPILER_PATH)" "undefined"
   COMPILER_PATH :=$(call PrefixPath,$(ALT_COMPILER_PATH))
 else
-  COMPILER_PATH  = $(BOOTSYSTEMDEVELOP_PATH)/tools/gnupro/bin/
+  COMPILER_PATH  = $(BOOTSYSTEMBIN_PATH)
 endif
 
 # OPENWIN_HOME: path to where the X11 environment is installed.
@@ -119,7 +118,7 @@ endif
 ifneq "$(origin ALT_DEVTOOLS_PATH)" "undefined"
   DEVTOOLS_PATH :=$(call PrefixPath,$(ALT_DEVTOOLS_PATH))
 else
-  DEVTOOLS_PATH =$(BOOTSYSTEMDEVELOP_PATH)/tools/gnupro/bin/
+  DEVTOOLS_PATH =$(BOOTSYSTEMBIN_PATH)
 endif
 
 # _BOOTDIR1: First choice for a Bootstrap JDK, previous released JDK.
-- 
1.8.3.4


From cab8b76a94407e51e0a9c665b53f28588e003a8b Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Sat, 9 Nov 2013 02:35:20 +0100
Subject: PLATFORM_API_HaikuOS_PCM.cpp: Fix SoundConsumer include

It's a private system header, so specify its path explicitly.

diff --git a/src/solaris/native/com/sun/media/sound/PLATFORM_API_HaikuOS_PCM.cpp b/src/solaris/native/com/sun/media/sound/PLATFORM_API_HaikuOS_PCM.cpp
index ec111fc..d69c6a9 100644
--- a/src/solaris/native/com/sun/media/sound/PLATFORM_API_HaikuOS_PCM.cpp
+++ b/src/solaris/native/com/sun/media/sound/PLATFORM_API_HaikuOS_PCM.cpp
@@ -35,7 +35,7 @@ extern "C" {
 #include <MediaDefs.h>
 #include <MediaNode.h>
 #include <MediaRoster.h>
-#include <SoundConsumer.h>
+#include <private/media/SoundConsumer.h>
 #include <SoundPlayer.h>
 #include <TimeSource.h>
 
-- 
1.8.3.4


From f8a888057bba2123556300ca7cb200ff6b0f3186 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Sat, 9 Nov 2013 14:52:36 +0100
Subject: Fix freetype paths for Haiku


diff --git a/make/common/Defs.gmk b/make/common/Defs.gmk
index a478f97..c0dc0d0 100644
--- a/make/common/Defs.gmk
+++ b/make/common/Defs.gmk
@@ -170,8 +170,8 @@ ifeq ($(PLATFORM), solaris)
   DEVTOOLS_FT_DIR=$(JDK_DEVTOOLS_DIR)/$(ARCH_FAMILY)/freetype-$(ARCH)
 endif
 ifeq ($(PLATFORM), haiku)
-  ALT_FREETYPE_HEADERS_PATH=$(shell finddir B_SYSTEM_HEADERS_DIRECTORY)/3rdparty/freetype2
-  ALT_FREETYPE_LIB_PATH=$(shell finddir B_SYSTEM_LIB_DIRECTORY)/gcc4
+  ALT_FREETYPE_HEADERS_PATH=$(shell finddir B_SYSTEM_HEADERS_DIRECTORY)
+  ALT_FREETYPE_LIB_PATH=$(shell finddir B_SYSTEM_DEVELOP_DIRECTORY)/lib
 endif
 
 DEVTOOLS_FT_DIR_EXISTS = $(shell \
-- 
1.8.3.4


From aad23df8dd37db1f0b5c3cd82cb90bb3f23e303f Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Sat, 9 Nov 2013 14:53:56 +0100
Subject: HaikuFontManager: Use BPathFinder API to find font dirs


diff --git a/src/solaris/native/sun/hawt/HaikuFontManager.cpp b/src/solaris/native/sun/hawt/HaikuFontManager.cpp
index a645d00..66af9ab 100644
--- a/src/solaris/native/sun/hawt/HaikuFontManager.cpp
+++ b/src/solaris/native/sun/hawt/HaikuFontManager.cpp
@@ -25,9 +25,8 @@
 
 #include <jni.h>
 
-#include <FindDirectory.h>
-#include <Path.h>
-#include <String.h>
+#include <PathFinder.h>
+#include <StringList.h>
 
 extern "C" {
 
@@ -40,19 +39,9 @@ JNIEXPORT jstring JNICALL
 Java_sun_hawt_HaikuFontManager_nativeGetFontPath
   (JNIEnv *env, jobject thiz)
 {
-	BPath systemFontsDirectory;
-	BPath commonFontsDirectory;
-	BPath userFontsDirectory;
-	
-	find_directory(B_SYSTEM_FONTS_DIRECTORY, &systemFontsDirectory);
-	find_directory(B_COMMON_FONTS_DIRECTORY, &commonFontsDirectory);
-	find_directory(B_USER_FONTS_DIRECTORY, &userFontsDirectory);
-	
-	BString path;
-	path << systemFontsDirectory.Path() << "/ttfonts:"
-		<< commonFontsDirectory.Path() << "/ttfonts:"
-		<< userFontsDirectory.Path() << "/ttfonts";
-	return env->NewStringUTF(path.String());
+	BStringList paths;
+	BPathFinder().FindPaths(B_FIND_PATH_FONTS_DIRECTORY, "ttfonts", paths);
+	return env->NewStringUTF(paths.Join(":").String());
 }
 
 }
-- 
1.8.3.4


From dcfb77462ec97c8b72c746dcb3d18bf2d488fe62 Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Tue, 26 Nov 2013 17:50:46 +0100
Subject: Make use of $ORIGIN in rpath now supported in Haiku


diff --git a/make/common/Defs-haiku.gmk b/make/common/Defs-haiku.gmk
index 7375327..70ae24b 100644
--- a/make/common/Defs-haiku.gmk
+++ b/make/common/Defs-haiku.gmk
@@ -219,15 +219,6 @@ ifdef LIBRARY
   #   The environment variable LD_LIBRARY_PATH will over-ride these runpaths.
   #   Try: 'readelf -d lib*.so' to see these settings in a library.
   #
-  #   On Haiku, %A is sort of like $ORIGIN except that it's relative to the
-  #   program's directory rather than the library's. This causes problems
-  #   with some of the libraries (like nio for one) so you should add the
-  #   library directory to your LIBRARY_PATH if you need those.
-  #
-  #   I plan to see if I can add a %B or some such to the runtime loader
-  #   for proper relative-to-the-library rpaths. At the moment %A gets the
-  #   basics done for the launchers.
-  #
   Z_ORIGIN_FLAG/sparc = -Xlinker -z -Xlinker origin
   Z_ORIGIN_FLAG/i586  = -Xlinker -z -Xlinker origin
   Z_ORIGIN_FLAG/amd64 = -Xlinker -z -Xlinker origin
@@ -238,8 +229,8 @@ ifdef LIBRARY
 
   LDFLAG_Z_ORIGIN = $(Z_ORIGIN_FLAG/$(ARCH_FAMILY))
 
-  LDFLAGS_COMMON += $(LDFLAG_Z_ORIGIN) -Xlinker -rpath -Xlinker \%A
-  LDFLAGS_COMMON += $(LD_RUNPATH_EXTRAS:%=$(LDFLAG_Z_ORIGIN) -Xlinker -rpath -Xlinker \%A/%)
+  LDFLAGS_COMMON += $(LDFLAG_Z_ORIGIN) -Xlinker -rpath -Xlinker \$$ORIGIN
+  LDFLAGS_COMMON += $(LD_RUNPATH_EXTRAS:%=$(LDFLAG_Z_ORIGIN) -Xlinker -rpath -Xlinker \$$ORIGIN/%)
 
 endif
 
diff --git a/make/common/Program.gmk b/make/common/Program.gmk
index 87e9d00..ec0a555 100644
--- a/make/common/Program.gmk
+++ b/make/common/Program.gmk
@@ -99,8 +99,8 @@ ifneq (,$(findstring $(PLATFORM), linux solaris haiku))	# UNIX systems
     ifeq ($(PLATFORM), haiku)
 	LDFLAGS += $(LDFLAG_Z_ORIGIN)
 	LDFLAGS += -Wl,--allow-shlib-undefined
-	LDFLAGS += -Wl,-rpath -Wl,\%A/../lib/$(LIBARCH)/jli
-	LDFLAGS += -Wl,-rpath -Wl,\%A/../jre/lib/$(LIBARCH)/jli
+	LDFLAGS += -Wl,-rpath -Wl,\$$ORIGIN/../lib/$(LIBARCH)/jli
+	LDFLAGS += -Wl,-rpath -Wl,\$$ORIGIN/../jre/lib/$(LIBARCH)/jli
     endif
 endif
 ifeq ($(PLATFORM), windows)
diff --git a/make/java/instrument/Makefile b/make/java/instrument/Makefile
index bb0db1e..74e744e 100644
--- a/make/java/instrument/Makefile
+++ b/make/java/instrument/Makefile
@@ -120,7 +120,7 @@ else
   ifeq ($(PLATFORM), haiku)
     LDFLAGS += $(LDFLAG_Z_ORIGIN)
     LDFLAGS += -Wl,--allow-shlib-undefined
-    LDFLAGS += -Wl,-rpath -Wl,\%A/jli
+    LDFLAGS += -Wl,-rpath -Wl,\$$ORIGIN/jli
   endif
 endif
 
-- 
1.8.3.4


From d71b1d303b0b6681b76c7557eec6e581734e0a7c Mon Sep 17 00:00:00 2001
From: Ingo Weinhold <ingo_weinhold@gmx.de>
Date: Wed, 4 Dec 2013 03:23:53 +0100
Subject: make/java/java/Makefile: Missing generated classes

Add AUTO_FILES_JAVA_DIRS, so that the auto-generated classes are
picked up.

diff --git a/make/java/java/Makefile b/make/java/java/Makefile
index 93878e6..bd94e8f 100644
--- a/make/java/java/Makefile
+++ b/make/java/java/Makefile
@@ -59,6 +59,7 @@ endif
 include FILES_c.gmk
 include FILES_java.gmk
 include Exportedfiles.gmk
+AUTO_FILES_JAVA_DIRS = java/lang
 
 ifeq ($(PLATFORM),windows)
 FILES_java += 	java/io/Win32FileSystem.java \
-- 
1.8.3.4

