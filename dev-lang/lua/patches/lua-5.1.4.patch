diff -urN lua-5.1.4/Makefile lua-5.1.4-haiku/Makefile
--- lua-5.1.4/Makefile	2008-08-12 00:40:48.066322432 +0000
+++ lua-5.1.4-haiku/Makefile	2011-05-03 22:29:07.568328192 +0000
@@ -13,11 +13,11 @@
 INSTALL_BIN= $(INSTALL_TOP)/bin
 INSTALL_INC= $(INSTALL_TOP)/include
 INSTALL_LIB= $(INSTALL_TOP)/lib
-INSTALL_MAN= $(INSTALL_TOP)/man/man1
+INSTALL_MAN= `finddir B_COMMON_DOCUMENTATION_DIRECTORY`/man/man1
 #
 # You probably want to make INSTALL_LMOD and INSTALL_CMOD consistent with
 # LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h (and also with etc/lua.pc).
-INSTALL_LMOD= $(INSTALL_TOP)/share/lua/$V
+INSTALL_LMOD= `finddir B_COMMON_DATA_DIRECTORY`/lua/$V
 INSTALL_CMOD= $(INSTALL_TOP)/lib/lua/$V
 
 # How to install. If your install program does not support "-p", then you
@@ -38,12 +38,12 @@
 # == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========
 
 # Convenience platforms targets.
-PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris
+PLATS= aix ansi bsd freebsd generic haiku linux macosx mingw posix solaris
 
 # What to install.
 TO_BIN= lua luac
 TO_INC= lua.h luaconf.h lualib.h lauxlib.h ../etc/lua.hpp
-TO_LIB= liblua.a
+TO_LIB= liblua.a liblua.so
 TO_MAN= lua.1 luac.1
 
 # Lua version and release.
diff -urN lua-5.1.4/src/Makefile lua-5.1.4-haiku/src/Makefile
--- lua-5.1.4/src/Makefile	2008-01-19 19:37:58.066584576 +0000
+++ lua-5.1.4-haiku/src/Makefile	2011-05-03 22:08:17.191627264 +0000
@@ -20,9 +20,10 @@
 
 # == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========
 
-PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris
+PLATS= aix ansi bsd freebsd generic haiku linux macosx mingw posix solaris
 
 LUA_A=	liblua.a
+LUA_SO=	liblua.so
 CORE_O=	lapi.o lcode.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o lmem.o \
 	lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o ltm.o  \
 	lundump.o lvm.o lzio.o
@@ -36,7 +37,7 @@
 LUAC_O=	luac.o print.o
 
 ALL_O= $(CORE_O) $(LIB_O) $(LUA_O) $(LUAC_O)
-ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)
+ALL_T= $(LUA_A) $(LUA_T) $(LUAC_T) $(LUA_SO)
 ALL_A= $(LUA_A)
 
 default: $(PLAT)
@@ -57,6 +58,9 @@
 $(LUAC_T): $(LUAC_O) $(LUA_A)
 	$(CC) -o $@ $(MYLDFLAGS) $(LUAC_O) $(LUA_A) $(LIBS)
 
+$(LUA_SO): $(CORE_O) $(LIB_O)
+	$(CC) -o $@ -shared -fPIC $(MYLDFLAGS) $? $(LIBS)
+
 clean:
 	$(RM) $(ALL_T) $(ALL_O)
 
@@ -95,6 +99,9 @@
 generic:
 	$(MAKE) all MYCFLAGS=
 
+haiku:
+	$(MAKE) all MYCFLAGS=-DLUA_USE_HAIKU LIBS=
+
 linux:
 	$(MAKE) all MYCFLAGS=-DLUA_USE_LINUX MYLIBS="-Wl,-E -ldl -lreadline -lhistory -lncurses"
 
diff -urN lua-5.1.4/src/lcode.c lua-5.1.4-haiku/src/lcode.c
--- lua-5.1.4/src/lcode.c	2007-12-28 15:32:23.000262144 +0000
+++ lua-5.1.4-haiku/src/lcode.c	2011-05-03 22:06:13.312999936 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: lcode.c,v 2.25.1.3 2007/12/28 15:32:23 roberto Exp $
+** $Id: lcode.c,v 2.25.1.5 2011/01/31 14:53:16 roberto Exp $
 ** Code generator for Lua
 ** See Copyright Notice in lua.h
 */
@@ -544,10 +544,6 @@
       pc = NO_JUMP;  /* always true; do nothing */
       break;
     }
-    case VFALSE: {
-      pc = luaK_jump(fs);  /* always jump */
-      break;
-    }
     case VJMP: {
       invertjump(fs, e);
       pc = e->u.s.info;
@@ -572,10 +568,6 @@
       pc = NO_JUMP;  /* always false; do nothing */
       break;
     }
-    case VTRUE: {
-      pc = luaK_jump(fs);  /* always jump */
-      break;
-    }
     case VJMP: {
       pc = e->u.s.info;
       break;
diff -urN lua-5.1.4/src/ldblib.c lua-5.1.4-haiku/src/ldblib.c
--- lua-5.1.4/src/ldblib.c	2008-01-21 13:11:21.000262144 +0000
+++ lua-5.1.4-haiku/src/ldblib.c	2011-05-03 22:06:13.322699264 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: ldblib.c,v 1.104.1.3 2008/01/21 13:11:21 roberto Exp $
+** $Id: ldblib.c,v 1.104.1.4 2009/08/04 18:50:18 roberto Exp $
 ** Interface from Lua to its debug API
 ** See Copyright Notice in lua.h
 */
@@ -45,6 +45,7 @@
 
 
 static int db_getfenv (lua_State *L) {
+  luaL_checkany(L, 1);
   lua_getfenv(L, 1);
   return 1;
 }
diff -urN lua-5.1.4/src/liolib.c lua-5.1.4-haiku/src/liolib.c
--- lua-5.1.4/src/liolib.c	2008-01-18 17:47:43.001572864 +0000
+++ lua-5.1.4-haiku/src/liolib.c	2011-05-03 22:06:13.346292224 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: liolib.c,v 2.73.1.3 2008/01/18 17:47:43 roberto Exp $
+** $Id: liolib.c,v 2.73.1.4 2010/05/14 15:33:51 roberto Exp $
 ** Standard I/O (and system) library
 ** See Copyright Notice in lua.h
 */
@@ -276,7 +276,10 @@
     lua_pushnumber(L, d);
     return 1;
   }
-  else return 0;  /* read fails */
+  else {
+    lua_pushnil(L);  /* "result" to be removed */
+    return 0;  /* read fails */
+  }
 }
 
 
diff -urN lua-5.1.4/src/llex.c lua-5.1.4-haiku/src/llex.c
--- lua-5.1.4/src/llex.c	2007-12-27 13:02:25.001835008 +0000
+++ lua-5.1.4-haiku/src/llex.c	2011-05-03 22:06:13.368050176 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: llex.c,v 2.20.1.1 2007/12/27 13:02:25 roberto Exp $
+** $Id: llex.c,v 2.20.1.2 2009/11/23 14:58:22 roberto Exp $
 ** Lexical Analyzer
 ** See Copyright Notice in lua.h
 */
@@ -118,8 +118,10 @@
   lua_State *L = ls->L;
   TString *ts = luaS_newlstr(L, str, l);
   TValue *o = luaH_setstr(L, ls->fs->h, ts);  /* entry for `str' */
-  if (ttisnil(o))
+  if (ttisnil(o)) {
     setbvalue(o, 1);  /* make sure `str' will not be collected */
+    luaC_checkGC(L);
+  }
   return ts;
 }
 
diff -urN lua-5.1.4/src/loadlib.c lua-5.1.4-haiku/src/loadlib.c
--- lua-5.1.4/src/loadlib.c	2008-08-06 13:29:28.002621440 +0000
+++ lua-5.1.4-haiku/src/loadlib.c	2011-05-03 22:06:13.391380992 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: loadlib.c,v 1.52.1.3 2008/08/06 13:29:28 roberto Exp $
+** $Id: loadlib.c,v 1.52.1.4 2009/09/09 13:17:16 roberto Exp $
 ** Dynamic library loader for Lua
 ** See Copyright Notice in lua.h
 **
@@ -639,7 +639,7 @@
   lua_pushvalue(L, -1);
   lua_replace(L, LUA_ENVIRONINDEX);
   /* create `loaders' table */
-  lua_createtable(L, 0, sizeof(loaders)/sizeof(loaders[0]) - 1);
+  lua_createtable(L, sizeof(loaders)/sizeof(loaders[0]) - 1, 0);
   /* fill it with pre-defined loaders */
   for (i=0; loaders[i] != NULL; i++) {
     lua_pushcfunction(L, loaders[i]);
diff -urN lua-5.1.4/src/lstrlib.c lua-5.1.4-haiku/src/lstrlib.c
--- lua-5.1.4/src/lstrlib.c	2008-07-11 17:27:21.004194304 +0000
+++ lua-5.1.4-haiku/src/lstrlib.c	2011-05-03 22:06:13.411303936 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: lstrlib.c,v 1.132.1.4 2008/07/11 17:27:21 roberto Exp $
+** $Id: lstrlib.c,v 1.132.1.5 2010/05/14 15:34:19 roberto Exp $
 ** Standard library for string operations and pattern-matching
 ** See Copyright Notice in lua.h
 */
@@ -754,6 +754,7 @@
 
 
 static int str_format (lua_State *L) {
+  int top = lua_gettop(L);
   int arg = 1;
   size_t sfl;
   const char *strfrmt = luaL_checklstring(L, arg, &sfl);
@@ -768,7 +769,8 @@
     else { /* format item */
       char form[MAX_FORMAT];  /* to store the format (`%...') */
       char buff[MAX_ITEM];  /* to store the formatted item */
-      arg++;
+      if (++arg > top)
+        luaL_argerror(L, arg, "no value");
       strfrmt = scanformat(L, strfrmt, form);
       switch (*strfrmt++) {
         case 'c': {
diff -urN lua-5.1.4/src/luaconf.h lua-5.1.4-haiku/src/luaconf.h
--- lua-5.1.4/src/luaconf.h	2008-02-11 16:25:08.004980736 +0000
+++ lua-5.1.4-haiku/src/luaconf.h	2011-05-03 22:08:17.243793920 +0000
@@ -33,6 +33,13 @@
 #define LUA_WIN
 #endif
 
+#if defined(LUA_USE_HAIKU)
+#define LUA_USE_MKSTEMP
+#define LUA_USE_ISATTY
+#define LUA_USE_POPEN
+#define LUA_USE_DLOPEN
+#endif
+
 #if defined(LUA_USE_LINUX)
 #define LUA_USE_POSIX
 #define LUA_USE_DLOPEN		/* needs an extra library: -ldl */
@@ -94,7 +101,11 @@
 	".\\?.dll;"  LUA_CDIR"?.dll;" LUA_CDIR"loadall.dll"
 
 #else
-#define LUA_ROOT	"/usr/local/"
+# if defined(LUA_USE_HAIKU)
+#  define LUA_ROOT	"/boot/common/"
+# else
+#  define LUA_ROOT	"/usr/local/"
+# endif
 #define LUA_LDIR	LUA_ROOT "share/lua/5.1/"
 #define LUA_CDIR	LUA_ROOT "lib/lua/5.1/"
 #define LUA_PATH_DEFAULT  \
diff -urN lua-5.1.4/src/lvm.c lua-5.1.4-haiku/src/lvm.c
--- lua-5.1.4/src/lvm.c	2007-12-28 15:32:23.005242880 +0000
+++ lua-5.1.4-haiku/src/lvm.c	2011-05-03 22:06:13.432537600 +0000
@@ -1,5 +1,5 @@
 /*
-** $Id: lvm.c,v 2.63.1.3 2007/12/28 15:32:23 roberto Exp $
+** $Id: lvm.c,v 2.63.1.4 2009/07/01 21:10:33 roberto Exp $
 ** Lua virtual machine
 ** See Copyright Notice in lua.h
 */
@@ -133,6 +133,7 @@
 
 void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {
   int loop;
+  TValue temp;
   for (loop = 0; loop < MAXTAGLOOP; loop++) {
     const TValue *tm;
     if (ttistable(t)) {  /* `t' is a table? */
@@ -152,7 +153,9 @@
       callTM(L, tm, t, key, val);
       return;
     }
-    t = tm;  /* else repeat with `tm' */ 
+    /* else repeat with `tm' */
+    setobj(L, &temp, tm);  /* avoid pointing inside table (may rehash) */
+    t = &temp;
   }
   luaG_runerror(L, "loop in settable");
 }
