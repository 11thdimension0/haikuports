SUMMARY="Simplified Wrapper and Interface Generator"
DESCRIPTION="
SWIG is a software development tool that connects programs written in C and \
C++ with a variety of high-level programming languages. SWIG is used with \
different types of target languages including common scripting languages such \
as Perl, PHP, Python, Tcl and Ruby. The list of supported languages also \
includes non-scripting languages such as C#, Common Lisp (CLISP, Allegro CL, \
CFFI, UFFI), D, Go language, Java including Android, Lua, Modula-3, OCAML, \
Octave and R. Also several interpreted and compiled Scheme implementations \
(Guile, MzScheme/Racket, Chicken) are supported. SWIG is most commonly used to \
create high-level interpreted or compiled programming environments, user \
interfaces, and as a tool for testing and prototyping C/C++ software. SWIG is \
typically used to parse C/C++ interfaces and generate the 'glue code' required \
for the above target languages to call into the C/C++ code. SWIG can also \
export its parse tree in the form of XML and Lisp s-expressions. SWIG is free \
software and the code that SWIG generates is compatible with both commercial \
and non-commercial projects.
"
LICENSE="SWIG"
COPYRIGHT="1995-1998 University of Utah and the Regents of the University of California
		1998-2005 University of Chicago
		2005-2006 Arizona Board of Regents (University of Arizona)
		1995-2013 The SWIG Developers"
HOMEPAGE="http://www.swig.org/"
SRC_URI="http://sourceforge.net/projects/swig/files/swig/swig-2.0.11/swig-2.0.11.tar.gz"
CHECKSUM_MD5="291ba57c0acd218da0b0916c280dcbae"
REVISION="1"
ARCHITECTURES="?x86 ?x86_gcc2"


PROVIDES="
	swig = $portVersion
	cmd:swig = $portVersion
	cmd:ccache_swig = $portVersion
	"

REQUIRES="
	haiku >= $haikuVersion
	lib:libpcre
	"

#TODO add ruby and chicken when they get updated recipes
#TODO fix lua and tcl detection
BUILD_REQUIRES="
	devel:libtclstub8.5
	devel:libpython2.6
	devel:liblua
	"

BUILD_PREREQUIRES="
	haiku_devel >= $haikuVersion
	cmd:libtoolize
	cmd:make
	cmd:gcc
	cmd:g++
	cmd:ld
	cmd:pcre_config
	cmd:bison
	cmd:python
	cmd:perl
	cmd:lua
	"

BUILD()
{
	runConfigure ./configure
	make
}

INSTALL()
{
	make install
}
