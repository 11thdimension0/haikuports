--- gettext-0.17/gettext-runtime/intl/vasnprintf.c	2009-03-03 02:29:54.000000000 +0000
+++ work-gettext/gettext-runtime/intl/vasnprintf.c	2009-03-03 02:27:36.000000000 +0000
@@ -186,7 +186,7 @@
 # /* Use snprintf if it exists under the name 'snprintf' or '_snprintf'.
      But don't use it on BeOS, since BeOS snprintf produces no output if the
      size argument is >= 0x3000000.  */
-# if (HAVE_DECL__SNPRINTF || HAVE_SNPRINTF) && !defined __BEOS__
+# if (HAVE_DECL__SNPRINTF || HAVE_SNPRINTF) && !defined __HAIKU__
 #  define USE_SNPRINTF 1
 # else
 #  define USE_SNPRINTF 0

--- gettext-0.17/gettext-runtime/libasprintf/vasnprintf.c	2009-03-03 02:29:54.000000000 +0000
+++ work-gettext/gettext-runtime/libasprintf/vasnprintf.c	2009-03-03 02:27:52.000000000 +0000
@@ -186,7 +186,7 @@
 # /* Use snprintf if it exists under the name 'snprintf' or '_snprintf'.
      But don't use it on BeOS, since BeOS snprintf produces no output if the
      size argument is >= 0x3000000.  */
-# if (HAVE_DECL__SNPRINTF || HAVE_SNPRINTF) && !defined __BEOS__
+# if (HAVE_DECL__SNPRINTF || HAVE_SNPRINTF) && !defined __HAIKU__
 #  define USE_SNPRINTF 1
 # else
 #  define USE_SNPRINTF 0

--- gettext-0.17/gettext-tools/gnulib-lib/float.in.h	2009-03-03 02:29:57.000000000 +0000
+++ work-gettext/gettext-tools/gnulib-lib/float.in.h	2009-03-03 02:28:19.000000000 +0000
@@ -24,7 +24,7 @@
 #define _GL_FLOAT_H
 
 /* 'long double' properties.  */
-#if defined __i386__ && defined __BEOS__
+#if defined __i386__ && defined __HAIKU__
 /* Number of mantissa units, in base FLT_RADIX.  */
 # undef LDBL_MANT_DIG
 # define LDBL_MANT_DIG   64

--- gettext-0.17/gettext-tools/gnulib-lib/term-ostream.c	2009-03-03 02:29:57.000000000 +0000
+++ work-gettext/gettext-tools/gnulib-lib/term-ostream.c	2009-03-03 02:28:43.000000000 +0000
@@ -1780,7 +1780,7 @@
 	  stream->exit_underline_mode = xstrdup0 (tgetstr ("ue", TEBP));
 	  stream->exit_attribute_mode = xstrdup0 (tgetstr ("me", TEBP));
 
-# ifdef __BEOS__
+# ifdef __HAIKU__
 	  /* The BeOS termcap entry for "beterm" is broken: For "AF" and "AB"
 	     it contains balues in terminfo syntax but the system's tparam()
 	     function understands only the termcap syntax.  */

--- gettext-0.17/gettext-tools/tests/gettext-4-prg.c	2009-03-03 02:29:58.000000000 +0000
+++ work-gettext/gettext-tools/tests/gettext-4-prg.c	2009-03-03 02:29:26.000000000 +0000
@@ -53,7 +53,7 @@
   /* Here we expect output in ISO-8859-1.
      Except on Darwin 7 or newer and on BeOS, for which locale_charset ()
      always returns "UTF-8" (see config.charset).  */
-#if !((defined __APPLE__ && defined __MACH__) || defined __BEOS__)
+#if !((defined __APPLE__ && defined __MACH__) || defined __HAIKU__)
   s = gettext ("cheese");
   if (strcmp (s, "K\344se"))
     {

--- gettext-0.17/gnulib-local/lib/term-ostream.oo.c	2009-03-03 02:29:53.000000000 +0000
+++ work-gettext/gnulib-local/lib/term-ostream.oo.c	2009-03-03 02:29:43.000000000 +0000
@@ -1803,7 +1803,7 @@
 	  stream->exit_underline_mode = xstrdup0 (tgetstr ("ue", TEBP));
 	  stream->exit_attribute_mode = xstrdup0 (tgetstr ("me", TEBP));
 
-# ifdef __BEOS__
+# ifdef __HAIKU__
 	  /* The BeOS termcap entry for "beterm" is broken: For "AF" and "AB"
 	     it contains balues in terminfo syntax but the system's tparam()
 	     function understands only the termcap syntax.  */

--- gettext-0.17/gettext-tools/gnulib-lib/libxml/encoding.c	2009-03-05 02:09:23.000000000 +0000
+++ work-gettext/gettext-tools/gnulib-lib/libxml/encoding.c	2009-03-05 02:16:35.000000000 +0000
@@ -1611,20 +1611,20 @@
 
 #ifdef LIBXML_ICONV_ENABLED
     /* check whether iconv can handle this */
-    icv_in = iconv_open("UTF-8", name);
-    icv_out = iconv_open(name, "UTF-8");
+    icv_in = libiconv_open("UTF-8", name);
+    icv_out = libiconv_open(name, "UTF-8");
     if (icv_in == (iconv_t) -1) {
-        icv_in = iconv_open("UTF-8", upper);
+        icv_in = libiconv_open("UTF-8", upper);
     }
     if (icv_out == (iconv_t) -1) {
-	icv_out = iconv_open(upper, "UTF-8");
+	icv_out = libiconv_open(upper, "UTF-8");
     }
     if ((icv_in != (iconv_t) -1) && (icv_out != (iconv_t) -1)) {
 	    enc = (xmlCharEncodingHandlerPtr)
 	          xmlMalloc(sizeof(xmlCharEncodingHandler));
 	    if (enc == NULL) {
-	        iconv_close(icv_in);
-	        iconv_close(icv_out);
+	        libiconv_close(icv_in);
+	        libiconv_close(icv_out);
 		return(NULL);
 	    }
 	    enc->name = xmlMemStrdup(name);
@@ -1703,7 +1703,7 @@
     }
     icv_inlen = *inlen;
     icv_outlen = *outlen;
-    ret = iconv(cd, (char **) &icv_in, &icv_inlen, &icv_out, &icv_outlen);
+    ret = libiconv(cd, (char **) &icv_in, &icv_inlen, &icv_out, &icv_outlen);
     *inlen -= icv_inlen;
     *outlen -= icv_outlen;
     if ((icv_inlen != 0) || (ret == -1)) {
@@ -2121,12 +2121,12 @@
 	    xmlFree(handler->name);
 	handler->name = NULL;
 	if (handler->iconv_out != NULL) {
-	    if (iconv_close(handler->iconv_out))
+	    if (libiconv_close(handler->iconv_out))
 		ret = -1;
 	    handler->iconv_out = NULL;
 	}
 	if (handler->iconv_in != NULL) {
-	    if (iconv_close(handler->iconv_in))
+	    if (libiconv_close(handler->iconv_in))
 		ret = -1;
 	    handler->iconv_in = NULL;
 	}
