SUMMARY="A yacc-compatible parser generator"
DESCRIPTION="
Bison is a general-purpose parser generator that converts an annotated \
context-free grammar into an LALR(1) or GLR parser for that grammar. Once you \
are proficient with Bison, you can use it to develop a wide range of language \
parsers, from those used in simple desk calculators to complex programming \
languages.
Bison is upward compatible with Yacc: all properly-written Yacc grammars ought \
to work with Bison with no change. Anyone familiar with Yacc should be able to \
use Bison with little trouble. You need to be fluent in C or C++ programming \
in order to use Bison.
"
HOMEPAGE="http://www.gnu.org/software/bison/bison.html" 
COPYRIGHT="1992-2011 Free Software Foundation, Inc."
LICENSE="GNU GPL v3"
SRC_URI="http://ftp.gnu.org/gnu/bison/bison-2.5.tar.gz"
CHECKSUM_MD5="687e1dcd29452789d34eaeea4c25abe4"
CHECKSUM_SIZE="2703110"
CHECKSUM_RMD160="17639a434ac00eb16252850ea8ebd06a356504aa"
CHECKSUM_SHA512="af7f1f569e2bd2915e807cf5065cea49675f98ddabb201e771a3d48bbe156c2427a4c4e46fcd70fd3328bf7a5d84c45aa1894e99ce27c7a24c59c4aa69d2252a"
REVISION="1"

ARCHITECTURES="?x86 x86_64"
if [ $effectiveTargetArchitecture != x86_gcc2 ]; then
	# x86_gcc2 is fine as primary target architecture as long as we're building
	# for a different secondary architecture.
	ARCHITECTURES="$ARCHITECTURES x86_gcc2"
fi
SECONDARY_ARCHITECTURES="x86"

PATCHES="bison-${portVersion}.patch"

PROVIDES="
	bison$secondaryArchSuffix = $portVersion compat >= 2.5
	cmd:bison$secondaryArchSuffix = $portVersion compat >= 2.5
	cmd:yacc$secondaryArchSuffix
	devel:liby$secondaryArchSuffix = $portVersion compat >= 2.5
	"

REQUIRES="
	haiku$secondaryArchSuffix >= $haikuVersion
	cmd:m4
	"

BUILD_REQUIRES="
	"

BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel >= $haikuVersion
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:awk
	cmd:m4
	cmd:make
	cmd:sed
	"

BUILD()
{
	runConfigure ./configure
	make $jobArgs
}

INSTALL()
{
	make install

	prepareInstalledDevelLibs liby

	rm $libDir/charset.alias
	rmdir $libDir
}

TEST()
{
	make check
}
