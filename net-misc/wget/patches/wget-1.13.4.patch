diff -urN wget-1.13.4/src/http.c wget-1.13.4-haiku/src/http.c
--- wget-1.13.4/src/http.c	2011-09-07 03:58:01.006291456 -0700
+++ wget-1.13.4-haiku/src/http.c	2012-03-17 12:20:29.000000000 -0700
@@ -1046,6 +1046,7 @@
                char separator)
 {
   const char *p = *source;
+  int param_type;
 
   while (c_isspace (*p)) ++p;
   if (!*p)
@@ -1101,7 +1102,7 @@
     }
   *source = p;
 
-  int param_type = modify_param_name(name);
+  param_type = modify_param_name(name);
   if (NOT_RFC2231 != param_type)
     {
       modify_param_value(value, param_type);
diff -urN wget-1.13.4/src/main.c wget-1.13.4-haiku/src/main.c
--- wget-1.13.4/src/main.c	2011-09-06 06:50:11.004456448 -0700
+++ wget-1.13.4-haiku/src/main.c	2012-03-17 12:23:37.000000000 -0700
@@ -913,14 +913,16 @@
   int i, ret, longindex;
   int nurl;
   bool append_to_log = false;
-
-  total_downloaded_bytes = 0;
-
-  program_name = argv[0];
+  int retconf;
+  bool use_userconfig = false;
 
   struct ptimer *timer = ptimer_new ();
   double start_time = ptimer_measure (timer);
 
+  total_downloaded_bytes = 0;
+
+  program_name = argv[0];
+  
   i18n_initialize ();
 
   /* Construct the name of the executable, without the directory part.  */
@@ -948,8 +950,6 @@
   /* This seperate getopt_long is needed to find the user config
      and parse it before the other user options. */
   longindex = -1;
-  int retconf;
-  bool use_userconfig = false;
 
   while ((retconf = getopt_long (argc, argv,
                                 short_options, long_options, &longindex)) != -1)
@@ -1432,11 +1432,14 @@
       &&
       total_downloaded_bytes != 0)
     {
+      char *wall_time;
+      char *download_time;
       double end_time = ptimer_measure (timer);
       ptimer_destroy (timer);
-
-      char *wall_time = xstrdup (secs_to_human_time (end_time - start_time));
-      char *download_time = xstrdup (secs_to_human_time (total_download_time));
+      
+      wall_time = xstrdup (secs_to_human_time (end_time - start_time));
+      download_time = xstrdup (secs_to_human_time (total_download_time));
+      
       logprintf (LOG_NOTQUIET,
 		 _("FINISHED --%s--\nTotal wall clock time: %s\n"
 		   "Downloaded: %d files, %s in %s (%s)\n"),
