SUMMARY="Transmission is a cross-platform open source BitTorrent client"
DESCRIPTION="Transmission is a cross-platform BitTorrent client that is:

Open Source.

Transmission is an open source, volunteer-based project. Unlike some BitTorrent clients, Transmission doesn't play games with its users to make money:

Transmission doesn't bundle toolbars, pop-up ads, flash ads, twitter tools, or anything else.
It doesn't hold some feaures back for a payware version.
Its source code is available for anyone to review.
We don't track our users, and our website and forums have no third-party ads or analytics.

Easy.

Transmission is designed for easy, powerful use. We've set the defaults to Just Work and it only takes a few clicks to configure advanced features like watch directories, bad peer blocklists, and the web interface.

Lean.

In separate benchmarks, Linux Format and Lacrocivious both found Transmission to use less CPU than any other GUI client. It even used less CPU than some non-GUI clients.

Transmission also has the lowest memory footprint of any major BitTorrent client.

Imageshack chose Transmission for its BitTorrent farms because the competition requires amounts of memory several times greater than Transmission.

Transmission's small footprint is one reason why many home device manufacturers, such as FON, Belkin, and Networked Media Tank ship with Transmission. When Belkin and Vuze Inc. partnered to write a Torrent Genie to let people who ran Vuze and owned a Belkin router keep sharing files even when Vuze wasn't running, they decided to use Transmission -- not Vuze's own BitTorrent client -- on the router.

Native.

Unlike many cross-platform applications, Transmission integrates seamlessly with your operating system.

Powerful.

Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, ÂµTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more."

HOMEPAGE="http://www.transmissionbt.com/"
SRC_URI="https://transmission.cachefly.net/transmission-2.82.tar.xz"
CHECKSUM_MD5="a5ef870c0410b12d10449c2d36fa4661"

REVISION="1"

ARCHITECTURES="x86 ?x86_64"
if [ $effectiveTargetArchitecture != x86_gcc2 ]; then
	# x86_gcc2 is fine as primary target architecture as long as we're building
	# for a different secondary architecture.
	ARCHITECTURES="$ARCHITECTURES x86_gcc2"
else
	ARCHITECTURES="$ARCHITECTURES !x86_gcc2"
fi
SECONDARY_ARCHITECTURES="!x86_gcc2 x86"

PROVIDES="
    transmission = $portVersion
    cmd:transmission_cli$secondaryArchSuffix
    cmd:transmission_create$secondaryArchSuffix
    cmd:transmission_daemon$secondaryArchSuffix
    cmd:transmission_edit$secondaryArchSuffix
    cmd:transmission_remote$secondaryArchSuffix
    cmd:transmission_show$secondaryArchSuffix
    "
REQUIRES="
    haiku$secondaryArchSuffix >= $haikuVersion
    lib:libssl$secondaryArchSuffix
    lib:libcrypto$secondaryArchSuffix
    lib:libcurl$secondaryArchSuffix
    lib:libevent$secondaryArchSuffix
    lib:libiconv$secondaryArchSuffix
    lib:libintl$secondaryArchSuffix
    lib:libz$secondaryArchSuffix
    "
BUILD_REQUIRES="
    haiku${secondaryArchSuffix}_devel >= $haikuVersion
    devel:libssl$secondaryArchSuffix
    devel:libcurl$secondaryArchSuffix
    devel:libz$secondaryArchSuffix
    devel:libevent$secondaryArchSuffix
    devel:libiconv$secondaryArchSuffix
    devel:libgettextlib$secondaryArchSuffix >= 0.14.1
    intltool >= 0.40
    "
BUILD_PREREQUIRES="
    cmd:gcc$secondaryArchSuffix
    cmd:ld$secondaryArchSuffix
    cmd:pkg_config$secondaryArchSuffix
    cmd:make
    "

LICENSE="Transmission
        MIT
        GNU GPL v2
        "
COPYRIGHT="2005-2013. All code is copyrighted by the respective authors."

PATCHES="transmission-2.82.patch"

BUILD()
{
    runConfigure ./configure --without-gtk --datadir=$dataDir
    make
}

INSTALL()
{
    make install
}
