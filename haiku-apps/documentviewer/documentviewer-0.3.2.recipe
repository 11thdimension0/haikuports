SUMMARY="A viewer supporting PDF and DJVU Files"
DESCRIPTION="
DocumentViewer is a Viewer supporting PDF and DJVU Files.
"
LICENSE="MIT"
COPYRIGHT="2010-2012 Haiku, Inc"
HOMEPAGE="http://haiku.bplaced.net/" 
SRC_URI="http://haiku.bplaced.net/DocumentViewer/sources/documentviewer-0.3.2.zip"
CHECKSUM_SHA256="92449ddaa6013443bb97920a373e07b7cc43786ce25780d94b02cb9d5f3dd7d3"
REVISION="2"
PATCHES="documentviewer-0.3.2.patchset"
ARCHITECTURES="x86 x86_64"
if [ $effectiveTargetArchitecture != x86_gcc2 ]; then
	# x86_gcc2 is fine as primary target architecture as long as we're building
	# for a different secondary architecture.
	ARCHITECTURES="$ARCHITECTURES x86_gcc2"
else
	ARCHITECTURES="$ARCHITECTURES !x86_gcc2"
fi
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	documentviewer$secondaryArchSuffix = $portVersion
	app:documentviewer = $portVersion
	"

REQUIRES="
	haiku$secondaryArchSuffix >= $haikuVersion
	lib:libdjvulibre
	lib:libfreetype
	lib:libz
	lib:libjpeg
	lib:libopenjpeg
	lib:libjbig2dec
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel >= $haikuVersion
	devel:libdjvulibre
	devel:libfitz
	devel:libfreetype
	devel:libz
	devel:libjpeg
	devel:libopenjpeg
	devel:libjbig2dec
	"

BUILD_PREREQUIRES="
	cmd:find
	cmd:g++$secondaryArchSuffix
	cmd:jam
	"

SOURCE_DIR="documentviewer-0.3.2"

BUILD()
{
	# Yes, the source package actually contains binaries...
	find . \( -name '*.o' -or -name '*.a' \) -delete
	jam -q
}

INSTALL()
{
	mkdir -p $appsDir
	cp application/DocumentViewer $appsDir
	addAppDeskbarSymlink $appsDir/DocumentViewer
}
