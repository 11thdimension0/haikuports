From 4cb54a3442189136cb5e304a376dd17faf2930b0 Mon Sep 17 00:00:00 2001
From: Sergei Reznikov <diver@gelios.net>
Date: Sat, 14 Nov 2015 01:47:24 +0300
Subject: Replace outdated makefiles and RSRC file


diff --git a/BeSANE.h b/BeSANE.h
index 47a666a..5866790 100644
--- a/BeSANE.h
+++ b/BeSANE.h
@@ -5,7 +5,7 @@
 extern "C" {
 #endif
 
-#include "sane.h"
+#include <sane/sane.h>
 
 #ifdef __cplusplus
 }
diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..d8b80ed
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,140 @@
+## Haiku Generic Makefile v2.6 ## 
+
+## Fill in this file to specify the project being created, and the referenced
+## Makefile-Engine will do all of the hard work for you. This handles any
+## architecture of Haiku.
+
+# The name of the binary.
+NAME = Sanity
+
+# The type of binary, must be one of:
+#	APP:	Application
+#	SHARED:	Shared library or add-on
+#	STATIC:	Static library archive
+#	DRIVER: Kernel driver
+TYPE = APP
+
+# 	If you plan to use localization, specify the application's MIME signature.
+APP_MIME_SIG = application/x-vnd.prds-Sanity
+
+#	The following lines tell Pe and Eddie where the SRCS, RDEFS, and RSRCS are
+#	so that Pe and Eddie can fill them in for you.
+#%{
+# @src->@ 
+
+#	Specify the source files to use. Full paths or paths relative to the 
+#	Makefile can be included. All files, regardless of directory, will have
+#	their object files created in the common object directory. Note that this
+#	means this Makefile will not work correctly if two source files with the
+#	same name (source.c or source.cpp) are included from different directories.
+#	Also note that spaces in folder names do not work well with this Makefile.
+SRCS= \
+Sanity.cpp \
+ScannerWindow.cpp \
+ScannerOptionView.cpp \
+ScannerInfoView.cpp \
+PreviewView.cpp \
+CheckerBitmap.cpp \
+TranslatorSavePanel.cpp \
+ToolTip.cpp \
+SpinControl.cpp \
+SpinButton.cpp \
+CollapsableBox.cpp \
+StackView.cpp \
+SANETranslator.cpp
+#	Specify the resource definition files to use. Full or relative paths can be
+#	used.
+RDEFS = Resource.rdef
+
+#	Specify the resource files to use. Full or relative paths can be used.
+#	Both RDEFS and RSRCS can be utilized in the same Makefile.
+RSRCS = 
+
+# End Pe/Eddie support.
+# @<-src@ 
+#%}
+
+#	Specify libraries to link against.
+#	There are two acceptable forms of library specifications:
+#	-	if your library follows the naming pattern of libXXX.so or libXXX.a,
+#		you can simply specify XXX for the library. (e.g. the entry for
+#		"libtracker.so" would be "tracker")
+#
+#	-	for GCC-independent linking of standard C++ libraries, you can use
+#		$(STDCPPLIBS) instead of the raw "stdc++[.r4] [supc++]" library names.
+#
+#	- 	if your library does not follow the standard library naming scheme,
+#		you need to specify the path to the library and it's name.
+#		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
+LIBS= be tracker translation sane
+
+#	Specify additional paths to directories following the standard libXXX.so
+#	or libXXX.a naming scheme. You can specify full paths or paths relative
+#	to the Makefile. The paths included are not parsed recursively, so
+#	include all of the paths where libraries must be found. Directories where
+#	source files were specified are	automatically included.
+LIBPATHS = 
+
+#	Additional paths to look for system headers. These use the form
+#	"#include <header>". Directories that contain the files in SRCS are
+#	NOT auto-included here.
+SYSTEM_INCLUDE_PATHS = 
+
+#	Additional paths paths to look for local headers. These use the form
+#	#include "header". Directories that contain the files in SRCS are
+#	automatically included.
+LOCAL_INCLUDE_PATHS = 
+
+#	Specify the level of optimization that you want. Specify either NONE (O0),
+#	SOME (O1), FULL (O2), or leave blank (for the default optimization level).
+OPTIMIZE := 
+
+# 	Specify the codes for languages you are going to support in this
+# 	application. The default "en" one must be provided too. "make catkeys"
+# 	will recreate only the "locales/en.catkeys" file. Use it as a template
+# 	for creating catkeys for other languages. All localization files must be
+# 	placed in the "locales" subdirectory.
+LOCALES = 
+
+#	Specify all the preprocessor symbols to be defined. The symbols will not
+#	have their values set automatically; you must supply the value (if any) to
+#	use. For example, setting DEFINES to "DEBUG=1" will cause the compiler
+#	option "-DDEBUG=1" to be used. Setting DEFINES to "DEBUG" would pass
+#	"-DDEBUG" on the compiler's command line.
+DEFINES = 
+
+#	Specify the warning level. Either NONE (suppress all warnings),
+#	ALL (enable all warnings), or leave blank (enable default warnings).
+WARNINGS = 
+
+#	With image symbols, stack crawls in the debugger are meaningful.
+#	If set to "TRUE", symbols will be created.
+SYMBOLS := 
+
+#	Includes debug information, which allows the binary to be debugged easily.
+#	If set to "TRUE", debug info will be created.
+DEBUGGER := 
+
+#	Specify any additional compiler flags to be used.
+COMPILER_FLAGS = 
+
+#	Specify any additional linker flags to be used.
+LINKER_FLAGS = 
+
+#	Specify the version of this binary. Example:
+#		-app 3 4 0 d 0 -short 340 -long "340 "`echo -n -e '\302\251'`"1999 GNU GPL"
+#	This may also be specified in a resource.
+APP_VERSION := 
+
+#	(Only used when "TYPE" is "DRIVER"). Specify the desired driver install
+#	location in the /dev hierarchy. Example:
+#		DRIVER_PATH = video/usb
+#	will instruct the "driverinstall" rule to place a symlink to your driver's
+#	binary in ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will
+#	appear at /dev/video/usb when loaded. The default is "misc".
+DRIVER_PATH = 
+
+## Include the Makefile-Engine
+DEVEL_DIRECTORY := \
+	$(shell findpaths -r "makefile_engine" B_FIND_PATH_DEVELOP_DIRECTORY)
+include $(DEVEL_DIRECTORY)/etc/makefile-engine
diff --git a/Resource.rdef b/Resource.rdef
new file mode 100644
index 0000000..49a64cf
--- /dev/null
+++ b/Resource.rdef
@@ -0,0 +1,416 @@
+
+resource app_flags B_SINGLE_LAUNCH;
+
+resource app_version {
+	major  = 0,
+	middle = 5,
+	minor  = 0,
+
+	variety = B_APPV_DEVELOPMENT,
+	internal = 0,
+
+	short_info = "SANE frontend",
+	long_info = "A tiny SANE BeOS frontend"
+};
+
+resource(1, "resolution") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000FFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000FFFFFF00000000FFFF0C000CFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00000000000000FF0C000000000CFF000000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00000000000000FFFF00000000FFFF0C000CFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00000000000000FFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF000000FFFFFFFFFF0000FFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFF000000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0000FFFFFFFFFF00000000FFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF00000000FFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0C000000000CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF00000000FFFFFFFFFF0000FFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0000FFFFFFFFFF0C00000CFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0C00000CFFFFFFFFFF0000FFFFFFFF00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0000FFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(2, "brightness") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF000CFFFFFFFF0000FFFFFFFF0C00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0C000CFFFFFF0000FFFFFF0C000CFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0C000C0000000000000C000CFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0C0000F9F9F9F900000CFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0000F9F9F9F9F9F90000FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF00F9F9F9F9F9F9F9F900FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF000000000000F9F9F9F9F9F9F9F9000000000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFF000000000000F9F9F9F9F9F9F9F9000000000000FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF00F9F9F9F9F9F9F9F900FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0000F9F9F9F9F9F90000FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0C0000F9F9F9F900000CFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0C000C0000000000000C000CFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0C000CFFFFFF0000FFFFFF0C000CFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF000CFFFFFFFF0000FFFFFFFF0C00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(3, "contrast") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF00000000003F3F0C0000FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0000000000003F3F3F3F0C00FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF000000000000003F3F3F3F3F0C00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00000000000000003F3F3F3F3F3F0C00FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00000000000000003F3F3F3F3F3F3F00FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000000000003F3F3F3F3F3F3F0C00FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000000000003F3F3F3F3F3F3F3F00FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000000000003F3F3F3F3F3F3F3F00FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000000000003F3F3F3F3F3F3F3F00FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000000000003F3F3F3F3F3F3F3F00FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000000000000000003F3F3F3F3F3F3F0C00FFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00000000000000003F3F3F3F3F3F3F00FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00000000000000003F3F3F3F3F3F0C00FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF000000000000003F3F3F3F3F0C00FFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0000000000003F3F3F3F0C00FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF00000000003F3F0C0000FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(4, "mode") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F00000000000000002D2D2D2D2D2D2D2DFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F00000000000000002D2D2D2D2D2D2D2DFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F07070707070707072A2A2A2A2A2A2A2AFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F07070707070707072A2A2A2A2A2A2A2AFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0A0A0A0A0A0A0A0A5D5D5D5D5D5D5D5DFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0A0A0A0A0A0A0A0A5D5D5D5D5D5D5D5DFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0B0B0B0B0B0B0B0B6565656565656565FFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0B0B0B0B0B0B0B0B6565656565656565FFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0C0C0C0C0C0C0C0C4545454545454545FFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0C0C0C0C0C0C0C0C4545454545454545FFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0E0E0E0E0E0E0E0E4B4B4B4B4B4B4B4BFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F0E0E0E0E0E0E0E0E4B4B4B4B4B4B4B4BFFFFFFFF"
+	$"FFFFFFFF3F3F3F3F3F3F3F3F11111111111111113434343434343434FFFFFFFF"
+	$"FFFFFFFF000000000000000011111111111111113434343434343434FFFFFFFF"
+	$"FFFFFFFF000000000000000013131313131313135454545454545454FFFFFFFF"
+	$"FFFFFFFF000000000000000013131313131313135454545454545454FFFFFFFF"
+	$"FFFFFFFF000000000000000015151515151515157373737373737373FFFFFFFF"
+	$"FFFFFFFF000000000000000015151515151515157373737373737373FFFFFFFF"
+	$"FFFFFFFF000000000000000017171717171717179393939393939393FFFFFFFF"
+	$"FFFFFFFF000000000000000017171717171717179393939393939393FFFFFFFF"
+	$"FFFFFFFF00000000000000001B1B1B1B1B1B1B1BB3B3B3B3B3B3B3B3FFFFFFFF"
+	$"FFFFFFFF00000000000000001B1B1B1B1B1B1B1BB3B3B3B3B3B3B3B3FFFFFFFF"
+	$"FFFFFFFF00000000000000001D1D1D1D1D1D1D1D2222222222222222FFFFFFFF"
+	$"FFFFFFFF00000000000000001D1D1D1D1D1D1D1D2222222222222222FFFFFFFF"
+	$"FFFFFFFF00000000000000003F3F3F3F3F3F3F3F2525252525252525FFFFFFFF"
+	$"FFFFFFFF00000000000000003F3F3F3F3F3F3F3F2525252525252525FFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(5, "filename") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF0060600000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0060606060600000FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF00603F603F603F603F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00603F603F603F603F603F600000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF00603F3F3F3F3F3F3F3F3F3F3F3F3F0000FFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00603F603F603F603F603F603F603F603F3F0000FFFFFFFFFFFF"
+	$"FFFFFFFFFF00603F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F0000FFFFFFFF"
+	$"FFFFFFFF00603F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F0000FFFF"
+	$"FFFFFF00603F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F603F00FF"
+	$"FFFF00603F603F603F603F603F603F603F603F603F603F603F603F603F00FFFF"
+	$"FF00603F603F603F603F603F603F603F603F603F603F603F603F603F00AEAEAE"
+	$"00003F603F603F603F603F603F603F603F603F603F603F603F603F0000AEAEFF"
+	$"FFAE0000603F603F603F603F603F603F603F603F603F603F603F00AE8700AEFF"
+	$"FFFFAE0000006060606060606060606060601B60606060606000AE87870100AE"
+	$"FFFFFFAE00AE00006060606060606060606060601B60606000AE870000AEAEAE"
+	$"FFFFFFFFAE00AEAE00006087608760876087608760871B29AE0000AEAEFFFFFF"
+	$"FFFFFFFFFFAE0087AEAE000087878787878787878787010000AEAEFFFFFFFFFF"
+	$"FFFFFFFFFFFFAE008787AEAE0000878787878787870100AEAEFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFAE00608787AEAE0000AEAEAEAE00AEAEFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFAE0060608787AEAE0000AE00AEAEFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFAE00606060870000AE00AEAEFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFAE00600000AEAEAEAEAEFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFAE00AEAEFFFFFFAEFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFAEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(6, "device_info") #'ICON' array {
+	$"FFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0000252525250000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00252521212325252500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF002020BE202122232500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF002521BE3FBE212123232500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF00252120BE21212223242500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF002523212121212223242500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF002525222121232224242500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF00252323232324242500FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF000025252424242425250000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF00BEBE000025252525000025BE00FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF009292BEBE000000002525255E00FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF0021219292BE25252525BE5E2500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF000021219292BEBEBE5E252500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF002121212192925E25252500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF002121212121212525252500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF002121212121212525252500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF002121212121212525252500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF00002121212121212525252500FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF00BE0021212121212125252525000EFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF00BEBE0021212121212125252525000E0E0EFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFF009292BE002121212121212525252500000E0E0E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFF002121920021212121212125252525BEBE00000E0E0E0EFFFFFFFFFFFFFF"
+	$"FFFF0021212121212121212121252525BEBEBEBE25000E0E0E0E0EFFFFFFFFFF"
+	$"FFFF00212121212121212121212525BEBEBEBE2525000E0E0E0E0E0E0EFFFFFF"
+	$"FFFFFF0000212121212121212125BEBEBEBE252525000E0E0E0E0E0EFFFFFFFF"
+	$"FFFFFFFFFF00002121212121219292BEBE25252525000E0E0E0E0EFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF00002121212121219225252525000E0E0E0E0EFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF00002121212121252525000E0E0E0E0EFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF00002121212525000E0E0E0E0EFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFF00002125000E0E0E0E0EFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000E0E0E0E0EFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource large_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFF000FFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0000000013171A1100FFFFFFFFFFFFFF000FFFFFFFFF"
+	$"FFFFFFFFFFFF0000000013171A1E1E1E1E1E1500FFFFFFFFFF000FFFFFFFFFFF"
+	$"FFFFFFFFFFFF0013171A1E1E1E1E1E1E1E1E1E1500FFFFFFFF00FFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF00151E1E1E1E1E1E1E1E1E1E1E1500FFFFFFFF00FFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00151E1E1E1E1E1E1E1E1E1E1E1500FFFFFFFF00FFFFFFFF"
+	$"FFFFFFFFFFFFFFFF0000151C1E1E1E1E1E1E1E1E1E1C1500FFFF000FFFFFFFFF"
+	$"FFFFFFFFFFFFFF001E1E00151C1C1C1C1C1C1C1C1C1C1A1500000FFFFFFFFFFF"
+	$"FFFFFFFFFFFF001E1E1E1100151C1C1C1C1C1C1C1C1C1C1A1500FFFFFFFFFFFF"
+	$"FFFFFFFFFF001E1E1E11176C00151A1C1C1C1C1C1C1C1C1C1A1500FFFFFFFFFF"
+	$"FFFFFFFF001E1E1E11176C6C6C00151A1A1A1A1A1A1A1A1A1A1A1500FFFFFFFF"
+	$"FFFFFF001E1E1E11176C6C6C6C6600151A1A1A1A1A1A1A1A1A1A1A1300FFFFFF"
+	$"FFFF001E1E1E11176C6C6C6C66666600151A1A1A1A1A1A1A1A1A1A1A1300FFFF"
+	$"FF001E1E1E11176C6C6C6C666666666600151919191919191919191300000FFF"
+	$"001E1E1E11176C6C6C6C66666666664646001319191919191919130009000F0F"
+	$"051E1E1E116C6C6C6C6666666666664640400013191919191913000909000F0F"
+	$"000E1C1C1C116C6C6666666666464640404040001319191911000909000F0F0F"
+	$"001A0E1C1C1C116666666666464640404040464600111911000A09000E0F0FFF"
+	$"001A1A0E1C1C1C116666664646404040404646111A0011000A0A000E0E0FFFFF"
+	$"FF001A190E1C1A1A11664646404040404646111A1A1A000A0A000E0E0FFFFFFF"
+	$"FFFF0019190D1A1A1A1146404040404646111A1A1A000A0A000E0E0FFFFFFFFF"
+	$"FFFFFF0019190D1A1A1A114040404646111A1919000C0C000E0E0FFFFFFFFFFF"
+	$"FFFFFFFF0019170C1A1A1A1140464611191919000C0C000E0E0FFFFFFFFFFFFF"
+	$"FFFFFFFFFF0017170C1A1A1A114611191919000C0C000E0E0FFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF0017170A19191911191919000D0D000E0E0FFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF0015150A1919191919000D0D000E0E0FFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFF00151509191919000E0D000E0E0FFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFF0015340915000E0E000E0E0FFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0015150E0E0E000F0F0FFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF00150F0E000F0F0FFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFF000F000F0F0FFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFF000F0F0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(1, "New Icon") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(2, "New Icon") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(3, "New Icon") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(4, "New Icon") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(5, "New Icon") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource(6, "New Icon") #'MICN' array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+};
+
+resource vector_icon {
+	$"6E63696613050004006A020016023C71D03DD41EBD9EBA3C4FB94B895245C4AB"
+	$"178CFFAC020016023F42000000000000004060004A6000C640001047FFA50200"
+	$"16023E5AC23BF014BB16033DB0BE4B8AC5440AA15C6BFEBF020016023B77D73A"
+	$"60C0BAD3D43C0FD6491A314A959D00D4FFA6020016023C800000000000000040"
+	$"000048400000000000FFFFD3020006063A48E8BD5BD13D13AE3A17D54BCFE84A"
+	$"259B00BDD0DA27ABCBDA6891CAE980FFFFFFA6A3DDFBE8859EAA03F186610200"
+	$"16023A29083877E6BE1B773FB0444A62DFC61A665960DD84020116023EE46F3E"
+	$"11B1BEB1813FC3D44A35F5C48B20238AC8D4020016023E8905BE27123E96C63F"
+	$"0C94C88B834A4A3F8568E5B103A7FF0003BAFF00020014020001FFB805DA05A4"
+	$"05CC0200140200FFFFC013000000000A065C42BF80CC8CC23DCC8CC9434ECC66"
+	$"4E5E43060DFEAAAA02552AC521B609C5AEB626C475B5E6C263B465C3ADB4A4C0"
+	$"D8B418BF99B48BC072B48BBEF8B48B3722BBD0B43EBF0DBC43B3FFC36FB3F2C5"
+	$"93405ECA0FC1E45A405B3F0A04BEB4BC765A4040C8D0B3FFC3890802BEB4BC76"
+	$"224A0802BECD3CC639C0650A04BFCCCBCDC9F5C1F15A4040C8C30A04B40BC37C"
+	$"40C8C340CBA7B3F2C5AD0A04552A542B5A405B3F060AFEFA0B3623BF33B517BE"
+	$"57B4DEBF68B525C1B1B4E4C0BFB4C8C2FCB50AC514B6A2C323B623C5C1B6CF54"
+	$"2B552AC56D28C606B6624CB5E3C230B47E49B4BEC11AB441BF4DB47EBF80B48B"
+	$"BE8CB44C37220607EA2F3E38CA42C00C542BC415B63CC4E1B67CC378B60BC217"
+	$"B4E4C36FB524C101B4B1BF73B50AC01FB538BEECB4E63623080239C91F3C5906"
+	$"04EEBFE6B557C197B6D5C125B708C229B694C1E4B4E4C0A5B4BEC171B471BFD9"
+	$"B50A02044030C34530BC3A30304030BC3A30C3454050BC3A50C34550504050C3"
+	$"4550BC3A0A04BECDBD35BECDC019B715C646B708C2C90A04BECDBD42C76BBFD9"
+	$"C75EC296BECD410A04BECDC019B72F50BF40C97653C2960A04BF99BDA8C91DC0"
+	$"BF5ABFF3BEC1BC9C0F0A010102023FFF00B6D3CC36D3CC3FFF00C262BE40DF2A"
+	$"0A000103123FFF00B6D3CC36D3CC3FFF00C262BE40DF2A01178400040A060104"
+	$"023FFF00B6D3CC36D3CC3FFF00C262BE40DF2A0A120112023FFF00B6D3CC36D3"
+	$"CC3FFF00C262BE40DF2A0A0E0106123FFF00B6D3CC36D3CC3FFF00C262BE40DF"
+	$"2A01178200040A070104023EAEDEB5CBF335CBF33EAEDE460BFC4738500A0B01"
+	$"05123EAEDEB5CBF335CBF33EAEDE460BFC47385001178200040A030107023FFF"
+	$"00B6D3CC36D3CC3FFF00C262BE40DF2A0A040109023FFF00B6D3CC36D3CC3FFF"
+	$"00C262BE40DF2A0A05010A023FFF00B6D3CC36D3CC3FFF00C262BE40DF2A0A02"
+	$"010B023FFF00B6D3CC36D3CC3FFF00C262BE40DF2A0A050108023FFF00B6D3CC"
+	$"36D3CC3FFF00C262BE40DF2A0A09010D023FE54D2E34363074893F9F0CB7F7C8"
+	$"403EB60A0C010E0237FF00AED3CC2ED3CC37FF00491F644B66750A0D010E0A37"
+	$"FF00AED3CC2ED3CC37FF00491F644B6675003F"
+};
+
+
+resource app_signature "application/x-vnd.prds-Sanity";
+
+resource file_types message;
diff --git a/makefile b/makefile
deleted file mode 100644
index 8603317..0000000
--- a/makefile
+++ /dev/null
@@ -1,231 +0,0 @@
-## ****************************************** ## 
-## BeOS Generic Makefile v2.9.0.Zeta-internal ## 
-
-## Fill in this file to specify the project being created, and the referenced 
-## makefile-engine will do all of the hard work for you.  This handles both 
-## Intel and PowerPC builds of the BeOS. 
-
-## Application Specific Settings --------------------------------------------- 
-
-# specify the name of the binary 
-NAME := Sanity
-
-# specify the type of binary 
-#       APP:    Application 
-#       SHARED: Shared library 
-#		ADDON:  An add-on
-#       STATIC: Static library archive 
-#       DRIVER: Kernel Driver 
-#		MODULE: Kernel Module
-#		DECOR:	A window decorator project
-TYPE := APP
-
-#       add support for new Pe and Eddie features 
-#       to fill in generic makefile 
-
-#%{ 
-# @src->@ 
-
-#       specify the source files to use 
-#       full paths or paths relative to the makefile can be included 
-#       all files, regardless of directory, will have their object 
-#       files created in the common object directory. 
-#       Note that this means this makefile will not work correctly 
-#       if two source files with the same name (source.c or source.cpp) 
-#       are included from different directories.  Also note that spaces 
-#       in folder names do not work well with this makefile. 
-SRCS :=	\
-Sanity.cpp \
-ScannerWindow.cpp \
-ScannerOptionView.cpp \
-ScannerInfoView.cpp \
-PreviewView.cpp \
-CheckerBitmap.cpp \
-TranslatorSavePanel.cpp \
-ToolTip.cpp \
-SpinControl.cpp \
-SpinButton.cpp \
-CollapsableBox.cpp \
-StackView.cpp \
-SANETranslator.cpp
-
-#       specify the resource files to use 
-#       full path or a relative path to the resource file can be used. 
-RSRCS :=	Resource.rsrc
-
-#       Specify your RDEF files, if any. 
-RDEFS :=
-
-# @<-src@ 
-#%} 
-
-#       end support for Pe and Eddie 
-
-#       specify additional libraries to link against 
-#       there are two acceptable forms of library specifications 
-#       -       if your library follows the naming pattern of: 
-#               libXXX.so or libXXX.a you can simply specify XXX 
-#               library: libbe.so entry: be 
-#               
-#       -       if your library does not follow the standard library 
-#               naming scheme you need to specify the path to the library 
-#               and it's name 
-#               library: my_lib.a entry: my_lib.a or path/my_lib.a 
-LIBS := be tracker translation sane
-
-#       specify additional paths to directories following the standard 
-#       libXXX.so or libXXX.a naming scheme.  You can specify full paths 
-#       or paths relative to the makefile.  The paths included may not 
-#       be recursive, so include all of the paths where libraries can 
-#       be found.  Directories where source files are found are 
-#       automatically included. 
-LIBPATHS :=
-
-#       additional paths to look for system headers 
-#       these use the form: #include <header.h> 
-#       source file directories are NOT auto-included here 
-SYSTEM_INCLUDE_PATHS :=
-
-#       additional paths to look for local headers 
-#       thes use the form: #include "header.h" 
-#       source file directories are automatically included 
-LOCAL_INCLUDE_PATHS := /boot/develop/headers/sane/
-
-#       specify the level of optimization that you desire 
-#       NONE, SOME, FULL 
-OPTIMIZE :=
-
-#       specify any preprocessor symbols to be defined.  The symbols will not 
-#       have their values set automatically; you must supply the value (if any) 
-#       to use.  For example, setting DEFINES to "DEBUG=1" will cause the 
-#       compiler option "-DDEBUG=1" to be used.  Setting DEFINES to "DEBUG" 
-#       would pass "-DDEBUG" on the compiler's command line. 
-DEFINES :=
-
-#       specify special warning levels 
-#       if unspecified default warnings will be used 
-#       NONE = supress all warnings 
-#       ALL = enable all warnings 
-WARNINGS :=
-
-#       specify whether image symbols will be created 
-#       so that stack crawls in the debugger are meaningful 
-#       if TRUE symbols will be created 
-SYMBOLS :=
-
-#       specify debug settings 
-#       if TRUE will allow application to be run from a source-level 
-#       debugger.  Note that this will disable all optimzation. 
-DEBUGGER :=
-
-#       specify additional compiler flags for all files 
-COMPILER_FLAGS :=
-
-#       specify additional linker flags 
-LINKER_FLAGS :=
-
-#       specify additional flex flags 
-FLEX_FLAGS =
-
-#       specify additional bison flags 
-BISON_FLAGS =
-
-#       specify the version of this particular item 
-#       (for example, -app 3 4 0 d 0 -short 340 -long "340 "`echo -n -e '\302\251'`"1999 GNU GPL") 
-#       This may also be specified in a resource. 
-APP_VERSION :=
-
-#       (for TYPE == DRIVER only) Specify desired location of driver in the /dev 
-#       hierarchy. Used by the driverinstall rule. E.g., DRIVER_PATH = video/usb will 
-#       instruct the driverinstall rule to place a symlink to your driver's binary in 
-#       ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will appear at 
-#       /dev/video/usb when loaded. Default is "misc". 
-DRIVER_PATH     :=
-
-#       Specify if you want the object files to be somewhere besides the default location. 
-OBJ_DIR         :=
-
-#       Specify a non default placement for the target 
-TARGET_DIR      :=
-
-#       If you want to see the complete build line for every file, then set this to 'true', 
-#       otherwise it will tell you at the end what the build flags were. 
-#CHATTY          :=
-
-#       Special Zeta build system var 
-BOOTREL_INSTALL_DIR     := apps/Graphics/Sanity
-
-#       Specify a directory for the 'install' target. 
-INSTALL_DIR     := /boot/$(BOOTREL_INSTALL_DIR)
-
-#       Specify the name of this makefile. 
-#       If you leave this blank, the makefile will not be considered as part of the 
-#       dependenies for the project, and the project will not be rebuilt when the makefile 
-#       is changed 
-MAKEFILE        :=
-
-#       Specify TRUE if you want the install target to create links in the BeMenu 
-MENU_LINKS      := TRUE
-
-#       Related to MENU_LINKS, specify the name of the direcotry in the BeMenu 
-#       you wish the link to go in. If the directory does not exist, it will be 
-#       created. 
-APP_MENU        := Software/Graphics
-
-#       If, for some reason, you don't want to use the dependencies (flex and yacc seem to choke 
-#       on them), set this to false 
-DODEPS          := 
-
-#	Set this variable if you have an svg text file you wish to use as 
-#   your target's icon.
-SVG_ICON	:= 
-
-#	If you have some fancy custom build steps to do, specify them here
-EXTRA_BUILD_STEPS	=
-
-
-#	If you have some other files that should trigger a re-link, such as libs in the same
-#	project that may get rebuilt, specify the full path to them here.
-EXTRA_DEPS :=
-
-
-################################################################################################## 
-# 
-##                                  Z E T A  S p e c i f i c 
-# 
-################################################################################################## 
-
-#       Specify the path to the Screenshot file. If this is not specified, then the SCREENSHOT default 
-#       will be $(PWD)/$(NAME).png 
-#       If this application is not to have a screenshot, use NONE 
-SCREENSHOT      := Sanity.png
-
-#       Specify the category that this zeta component belongs in 
-ZETA_CATEGORY   := Graphics
-
-#       The .zip package that this file will be included in. If this is left blank, then 
-#       $(NAME).zip will be used. 
-#       This feature is meant for having multiple items included in the a single .zip package 
-PACKAGE         :=
-
-#       If this target is a component of another target. That is, if this is part of a package 
-#       but not the 'main' part. Typically the main app will have the screenshot, and set 
-#       the relevant attributes. If this is set to 'true' then this makefile will not attempt to set 
-#       attributes or a screenshot or a description. 
-IS_COMPONENT    := 
-
-#       If this is a mandatory component, set this to 'false'. The default is true. 
-#       Optional components will be zipped up with thier attribs and everything. 
-#       Non-Optional (mandatory) components will just be copied to the directory structure and 
-#       added to the manifest for copying during install 
-OPTIONAL		:=
-
-#       Specify the names of the Language files here. (ie: AboutWindow.de AboutWindow.en) 
-LANG_FILES		:=
-
-#       If your language files are in a different directory, specify the relative directory here. 
-#       ie: Language/Dictionaries 
-LANG_FILES_DIR  :=
-
-
-include $(BUILD_SCRIPT_DIR)/makefile-engine.zeta
diff --git a/makefile.local b/makefile.local
deleted file mode 100644
index dd7b18c..0000000
--- a/makefile.local
+++ /dev/null
@@ -1,136 +0,0 @@
-## BeOS Generic Makefile v2.2 ##
-
-## Fill in this file to specify the project being created, and the referenced
-## makefile-engine will do all of the hard work for you.  This handles both
-## Intel and PowerPC builds of the BeOS.
-
-## Application Specific Settings ---------------------------------------------
-
-# specify the name of the binary
-NAME= Sanity
-
-# specify the type of binary
-#	APP:	Application
-#	SHARED:	Shared library or add-on
-#	STATIC:	Static library archive
-#	DRIVER: Kernel Driver
-TYPE= APP
-
-#	add support for new Pe and Eddie features
-#	to fill in generic makefile
-
-#%{
-# @src->@ 
-
-#	specify the source files to use
-#	full paths or paths relative to the makefile can be included
-# 	all files, regardless of directory, will have their object
-#	files created in the common object directory.
-#	Note that this means this makefile will not work correctly
-#	if two source files with the same name (source.c or source.cpp)
-#	are included from different directories.  Also note that spaces
-#	in folder names do not work well with this makefile.
-SRCS= \
-Sanity.cpp \
-ScannerWindow.cpp \
-ScannerOptionView.cpp \
-ScannerInfoView.cpp \
-PreviewView.cpp \
-CheckerBitmap.cpp \
-TranslatorSavePanel.cpp \
-ToolTip.cpp \
-SpinControl.cpp \
-SpinButton.cpp \
-CollapsableBox.cpp \
-StackView.cpp \
-SANETranslator.cpp
-
-#BitmapView.cpp \
-
-
-#	specify the resource files to use
-#	full path or a relative path to the resource file can be used.
-RSRCS= $(wildcard *.rsrc)
-
-# @<-src@ 
-#%}
-
-#	end support for Pe and Eddie
-
-#	specify additional libraries to link against
-#	there are two acceptable forms of library specifications
-#	-	if your library follows the naming pattern of:
-#		libXXX.so or libXXX.a you can simply specify XXX
-#		library: libbe.so entry: be
-#		
-#	- 	if your library does not follow the standard library
-#		naming scheme you need to specify the path to the library
-#		and it's name
-#		library: my_lib.a entry: my_lib.a or path/my_lib.a
-LIBS= be tracker translation sane 
-
-#	specify additional paths to directories following the standard
-#	libXXX.so or libXXX.a naming scheme.  You can specify full paths
-#	or paths relative to the makefile.  The paths included may not
-#	be recursive, so include all of the paths where libraries can
-#	be found.  Directories where source files are found are
-#	automatically included.
-LIBPATHS= /boot/home/Apps/BeSANE/libSANE/
-
-#	additional paths to look for system headers
-#	thes use the form: #include <header>
-#	source file directories are NOT auto-included here
-SYSTEM_INCLUDE_PATHS = 
-
-#	additional paths to look for local headers
-#	thes use the form: #include "header"
-#	source file directories are automatically included
-LOCAL_INCLUDE_PATHS = /boot/home/Apps/BeSANE/include/sane/ /boot/develop/headers/sane/
-
-#	specify the level of optimization that you desire
-#	NONE, SOME, FULL
-OPTIMIZE= 
-
-#	specify any preprocessor symbols to be defined.  The symbols will not
-#	have their values set automatically; you must supply the value (if any)
-#	to use.  For example, setting DEFINES to "DEBUG=1" will cause the
-#	compiler option "-DDEBUG=1" to be used.  Setting DEFINES to "DEBUG"
-#	would pass "-DDEBUG" on the compiler's command line.
-DEFINES= 
-
-#	specify special warning levels
-#	if unspecified default warnings will be used
-#	NONE = supress all warnings
-#	ALL = enable all warnings
-WARNINGS = 
-
-#	specify whether image symbols will be created
-#	so that stack crawls in the debugger are meaningful
-#	if TRUE symbols will be created
-SYMBOLS = 
-
-#	specify debug settings
-#	if TRUE will allow application to be run from a source-level
-#	debugger.  Note that this will disable all optimzation.
-DEBUGGER = 
-
-#	specify additional compiler flags for all files
-COMPILER_FLAGS =
-
-#	specify additional linker flags
-LINKER_FLAGS =
-
-#	specify the version of this particular item
-#	(for example, -app 3 4 0 d 0 -short 340 -long "340 "`echo -n -e '\302\251'`"1999 GNU GPL") 
-#	This may also be specified in a resource.
-APP_VERSION = 
-
-#	(for TYPE == DRIVER only) Specify desired location of driver in the /dev
-#	hierarchy. Used by the driverinstall rule. E.g., DRIVER_PATH = video/usb will
-#	instruct the driverinstall rule to place a symlink to your driver's binary in
-#	~/add-ons/kernel/drivers/dev/video/usb, so that your driver will appear at
-#	/dev/video/usb when loaded. Default is "misc".
-DRIVER_PATH = 
-
-## include the makefile-engine
-include $(BUILDHOME)/etc/makefile-engine
diff --git a/makefile_ b/makefile_
deleted file mode 100644
index 49fcc4b..0000000
--- a/makefile_
+++ /dev/null
@@ -1,231 +0,0 @@
-## ****************************************** ## 
-## BeOS Generic Makefile v2.9.0.Zeta-internal ## 
-
-## Fill in this file to specify the project being created, and the referenced 
-## makefile-engine will do all of the hard work for you.  This handles both 
-## Intel and PowerPC builds of the BeOS. 
-
-## Application Specific Settings --------------------------------------------- 
-
-# specify the name of the binary 
-NAME := Sanity
-
-# specify the type of binary 
-#       APP:    Application 
-#       SHARED: Shared library 
-#		ADDON:  An add-on
-#       STATIC: Static library archive 
-#       DRIVER: Kernel Driver 
-#		MODULE: Kernel Module
-#		DECOR:	A window decorator project
-TYPE := APP
-
-#       add support for new Pe and Eddie features 
-#       to fill in generic makefile 
-
-#%{ 
-# @src->@ 
-
-#       specify the source files to use 
-#       full paths or paths relative to the makefile can be included 
-#       all files, regardless of directory, will have their object 
-#       files created in the common object directory. 
-#       Note that this means this makefile will not work correctly 
-#       if two source files with the same name (source.c or source.cpp) 
-#       are included from different directories.  Also note that spaces 
-#       in folder names do not work well with this makefile. 
-SRCS :=	\
-Sanity.cpp \
-ScannerWindow.cpp \
-ScannerOptionView.cpp \
-ScannerInfoView.cpp \
-PreviewView.cpp \
-CheckerBitmap.cpp \
-TranslatorSavePanel.cpp \
-ToolTip.cpp \
-SpinControl.cpp \
-SpinButton.cpp \
-CollapsableBox.cpp \
-StackView.cpp \
-SANETranslator.cpp
-
-#       specify the resource files to use 
-#       full path or a relative path to the resource file can be used. 
-RSRCS :=	Resource.rsrc
-
-#       Specify your RDEF files, if any. 
-RDEFS :=
-
-# @<-src@ 
-#%} 
-
-#       end support for Pe and Eddie 
-
-#       specify additional libraries to link against 
-#       there are two acceptable forms of library specifications 
-#       -       if your library follows the naming pattern of: 
-#               libXXX.so or libXXX.a you can simply specify XXX 
-#               library: libbe.so entry: be 
-#               
-#       -       if your library does not follow the standard library 
-#               naming scheme you need to specify the path to the library 
-#               and it's name 
-#               library: my_lib.a entry: my_lib.a or path/my_lib.a 
-LIBS := be tracker translation sane
-
-#       specify additional paths to directories following the standard 
-#       libXXX.so or libXXX.a naming scheme.  You can specify full paths 
-#       or paths relative to the makefile.  The paths included may not 
-#       be recursive, so include all of the paths where libraries can 
-#       be found.  Directories where source files are found are 
-#       automatically included. 
-LIBPATHS :=
-
-#       additional paths to look for system headers 
-#       these use the form: #include <header.h> 
-#       source file directories are NOT auto-included here 
-SYSTEM_INCLUDE_PATHS :=
-
-#       additional paths to look for local headers 
-#       thes use the form: #include "header.h" 
-#       source file directories are automatically included 
-LOCAL_INCLUDE_PATHS := /boot/develop/headers/sane/
-
-#       specify the level of optimization that you desire 
-#       NONE, SOME, FULL 
-OPTIMIZE :=
-
-#       specify any preprocessor symbols to be defined.  The symbols will not 
-#       have their values set automatically; you must supply the value (if any) 
-#       to use.  For example, setting DEFINES to "DEBUG=1" will cause the 
-#       compiler option "-DDEBUG=1" to be used.  Setting DEFINES to "DEBUG" 
-#       would pass "-DDEBUG" on the compiler's command line. 
-DEFINES :=
-
-#       specify special warning levels 
-#       if unspecified default warnings will be used 
-#       NONE = supress all warnings 
-#       ALL = enable all warnings 
-WARNINGS :=
-
-#       specify whether image symbols will be created 
-#       so that stack crawls in the debugger are meaningful 
-#       if TRUE symbols will be created 
-SYMBOLS :=
-
-#       specify debug settings 
-#       if TRUE will allow application to be run from a source-level 
-#       debugger.  Note that this will disable all optimzation. 
-DEBUGGER :=
-
-#       specify additional compiler flags for all files 
-COMPILER_FLAGS :=
-
-#       specify additional linker flags 
-LINKER_FLAGS :=
-
-#       specify additional flex flags 
-FLEX_FLAGS =
-
-#       specify additional bison flags 
-BISON_FLAGS =
-
-#       specify the version of this particular item 
-#       (for example, -app 3 4 0 d 0 -short 340 -long "340 "`echo -n -e '\302\251'`"1999 GNU GPL") 
-#       This may also be specified in a resource. 
-APP_VERSION :=
-
-#       (for TYPE == DRIVER only) Specify desired location of driver in the /dev 
-#       hierarchy. Used by the driverinstall rule. E.g., DRIVER_PATH = video/usb will 
-#       instruct the driverinstall rule to place a symlink to your driver's binary in 
-#       ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will appear at 
-#       /dev/video/usb when loaded. Default is "misc". 
-DRIVER_PATH     :=
-
-#       Specify if you want the object files to be somewhere besides the default location. 
-OBJ_DIR         :=
-
-#       Specify a non default placement for the target 
-TARGET_DIR      :=
-
-#       If you want to see the complete build line for every file, then set this to 'true', 
-#       otherwise it will tell you at the end what the build flags were. 
-#CHATTY          :=
-
-#       Special Zeta build system var 
-BOOTREL_INSTALL_DIR     := apps/Graphics/Sanity
-
-#       Specify a directory for the 'install' target. 
-INSTALL_DIR     := /boot/$(BOOTREL_INSTALL_DIR)
-
-#       Specify the name of this makefile. 
-#       If you leave this blank, the makefile will not be considered as part of the 
-#       dependenies for the project, and the project will not be rebuilt when the makefile 
-#       is changed 
-MAKEFILE        :=
-
-#       Specify TRUE if you want the install target to create links in the BeMenu 
-MENU_LINKS      := TRUE
-
-#       Related to MENU_LINKS, specify the name of the direcotry in the BeMenu 
-#       you wish the link to go in. If the directory does not exist, it will be 
-#       created. 
-APP_MENU        := Software/Graphics
-
-#       If, for some reason, you don't want to use the dependencies (flex and yacc seem to choke 
-#       on them), set this to false 
-DODEPS          := 
-
-#	Set this variable if you have an svg text file you wish to use as 
-#   your target's icon.
-SVG_ICON	:= #Sanity.svg
-
-#	If you have some fancy custom build steps to do, specify them here
-EXTRA_BUILD_STEPS	=
-
-
-#	If you have some other files that should trigger a re-link, such as libs in the same
-#	project that may get rebuilt, specify the full path to them here.
-EXTRA_DEPS :=
-
-
-################################################################################################## 
-# 
-##                                  Z E T A  S p e c i f i c 
-# 
-################################################################################################## 
-
-#       Specify the path to the Screenshot file. If this is not specified, then the SCREENSHOT default 
-#       will be $(PWD)/$(NAME).png 
-#       If this application is not to have a screenshot, use NONE 
-SCREENSHOT      := Sanity.png
-
-#       Specify the category that this zeta component belongs in 
-ZETA_CATEGORY   := Graphics
-
-#       The .zip package that this file will be included in. If this is left blank, then 
-#       $(NAME).zip will be used. 
-#       This feature is meant for having multiple items included in the a single .zip package 
-PACKAGE         :=
-
-#       If this target is a component of another target. That is, if this is part of a package 
-#       but not the 'main' part. Typically the main app will have the screenshot, and set 
-#       the relevant attributes. If this is set to 'true' then this makefile will not attempt to set 
-#       attributes or a screenshot or a description. 
-IS_COMPONENT    := true
-
-#       If this is a mandatory component, set this to 'false'. The default is true. 
-#       Optional components will be zipped up with thier attribs and everything. 
-#       Non-Optional (mandatory) components will just be copied to the directory structure and 
-#       added to the manifest for copying during install 
-OPTIONAL		:=
-
-#       Specify the names of the Language files here. (ie: AboutWindow.de AboutWindow.en) 
-LANG_FILES		:=
-
-#       If your language files are in a different directory, specify the relative directory here. 
-#       ie: Language/Dictionaries 
-LANG_FILES_DIR  :=
-
-
-include $(BUILD_SCRIPT_DIR)/makefile-engine.zeta
-- 
2.2.2

