From 9c4c954831ab5388dfc2bd18b1a220ca8b6e3b47 Mon Sep 17 00:00:00 2001
From: Chris Roberts <cpr420@gmail.com>
Date: Mon, 2 Dec 2013 18:52:50 -0700
Subject: applying patch organizer-0.1.patch


diff --git a/Source/App/Secret/glView.cpp b/Source/App/Secret/glView.cpp
index 96ef6c5..931e9a6 100644
--- a/Source/App/Secret/glView.cpp
+++ b/Source/App/Secret/glView.cpp
@@ -22,7 +22,7 @@
 // Constructor/destructor
 TutGLView::TutGLView( Wind *owner_wind, BRect frame, const char *name, 
 					  int32 mode, int32 flags )
-	: BGLView( frame, const_cast<char *>( name ), mode, flags, 
+	: BGLView( frame, name, mode, flags,
 			   BGL_RGB | BGL_DOUBLE | BGL_DEPTH ),
 	  pad_x( 1.0 ),
 	  pad_y(-2.0),
@@ -131,7 +131,7 @@ void TutGLView::ErrorCallback( GLenum err )
 	// out.  You'll have to run the application from a Terminal to see
 	// these.
 	fprintf( stderr, "Unexpected error occured (%ld):\n", err );
-	fprintf( stderr, "\t%s\n", gluErrorString( err ) );
+	//fprintf( stderr, "\t%s\n", gluErrorString( err ) );
 }
 
 void TutGLView::Render( void )
@@ -164,7 +164,7 @@ void TutGLView::gInit( void )
 	glMatrixMode( GL_PROJECTION );
 	glLoadIdentity();
 	BRect r = Bounds();
-	gluPerspective( 45.0, r.Width() / r.Height(), 0.1, 100.0 );
+	//gluPerspective( 45.0, r.Width() / r.Height(), 0.1, 100.0 );
 	glMatrixMode( GL_MODELVIEW );
 }
 
@@ -178,7 +178,7 @@ void TutGLView::gReshape( int width, int height )
 	glViewport( 0, 0, width, height );
 	glMatrixMode( GL_PROJECTION );
 	glLoadIdentity();
-	gluPerspective( 45.0, (float)width/(float)height, 0.1, 100.0 );
+	//gluPerspective( 45.0, (float)width/(float)height, 0.1, 100.0 );
 	glMatrixMode( GL_MODELVIEW );
 }
 
diff --git a/Source/App/calenderView.cpp b/Source/App/calenderView.cpp
index 54f6930..d72b47e 100644
--- a/Source/App/calenderView.cpp
+++ b/Source/App/calenderView.cpp
@@ -55,7 +55,7 @@ mCalender->SetDay(mCalender->ThisDay());
 //Load Settings
 MSave load("load");
 
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 String.SetTo(Path.Path());
 String.Append(SAVE_SETTINGS_PATH);
 Path.SetTo(String.String());
diff --git a/Source/App/editScriptView.cpp b/Source/App/editScriptView.cpp
index a4df6d3..70a2cd4 100644
--- a/Source/App/editScriptView.cpp
+++ b/Source/App/editScriptView.cpp
@@ -145,7 +145,7 @@ BString tempString2;
 BString tempString3;
 BString FilePath;
 
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &fPath);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &fPath);
 tempString.SetTo(fPath.Path());
 tempString.Append(SAVE_HISTORY_PATH);
 fPath = tempString.String();
@@ -183,7 +183,7 @@ BPath Path;
 int ItemNumber = 1;
 MSave Save("Save");
 
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 tempString.SetTo(Path.Path());
 tempString.Append(SAVE_HISTORY_PATH);
 	for (int a = 1; a <= INT_MAXFILES; a++)
diff --git a/Source/App/editWindow.cpp b/Source/App/editWindow.cpp
index 6684829..1feb57e 100644
--- a/Source/App/editWindow.cpp
+++ b/Source/App/editWindow.cpp
@@ -302,7 +302,7 @@ BString FilePath;
 	MSave Save("save");
 		if(!strcmp(fPath.String(), ""))
 		{
-		find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+		find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 		fPath.SetTo(Path.Path());
 		fPath.Append(SAVE_NOTE_PATH);
 		Path = fPath.String();
@@ -359,7 +359,7 @@ BEntry Entry("/boot/home");
 	MSave Save("save");
 		if(!strcmp(fPath.String(), ""))
 		{
-		find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+		find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 		fPath.SetTo(Path.Path());
 		fPath.Append(SAVE_NOTE_PATH);
 		Path = fPath.String();
@@ -430,7 +430,7 @@ BEntry Entry("/boot/home");
 	MSave Save("save");
 		if(!strcmp(fPath.String(), ""))
 		{
-		find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+		find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 		fPath.SetTo(Path.Path());
 		fPath.Append(SAVE_HISTORY_PATH);
 		Path = fPath.String();
@@ -509,7 +509,7 @@ BString FilePath;
 	MSave Save("save");
 		if(!strcmp(fPath.String(), ""))
 		{
-		find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+		find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 		fPath.SetTo(Path.Path());
 		fPath.Append(SAVE_NOTE_PATH);
 		Path = fPath.String();
diff --git a/Source/App/exportWindow.cpp b/Source/App/exportWindow.cpp
index 1ed3d33..0db456b 100644
--- a/Source/App/exportWindow.cpp
+++ b/Source/App/exportWindow.cpp
@@ -114,7 +114,7 @@ BPath Path;
 BEntry Entry("/boot/home");
 MSave Load("Load");
 
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 fFolderPath.SetTo(Path.Path());
 fFolderPath.Append(SAVE_NOTE_PATH);
 
diff --git a/Source/App/mWindow.cpp b/Source/App/mWindow.cpp
index 597f4ad..426bf83 100644
--- a/Source/App/mWindow.cpp
+++ b/Source/App/mWindow.cpp
@@ -339,7 +339,7 @@ void mWindow::GetSettingsPath(BPath *path)
 {
 BPath Path;
 BString string;
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 string.SetTo(Path.Path());
 string.Append(SAVE_SETTINGS_PATH);
 path->SetTo(string.String());
@@ -358,7 +358,7 @@ BString tempString4;
 BString FilePath;
 BEntry Entry("/boot/home");
 
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &fPath);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &fPath);
 tempString.SetTo(fPath.Path());
 tempString.Append(SAVE_NOTE_PATH);
 fPath = tempString.String();
diff --git a/Source/App/main.cpp b/Source/App/main.cpp
index 88a0269..aaf47e6 100644
--- a/Source/App/main.cpp
+++ b/Source/App/main.cpp
@@ -11,7 +11,7 @@ int main(int32 argc, char** argv)
 BPath path;
 BString tmp;
 MSave savefile("savefile");
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &path);
 tmp.SetTo(path.Path());
 tmp.Append(SAVE_SETTINGS_PATH);
 path.SetTo(tmp.String());
@@ -62,7 +62,7 @@ RunNotification = true;
 								\Notes
 *********************************************/
 //Make sure all the folders are there
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &path);
 //Make fSub folder
 tmp.SetTo("mkdir ");
 tmp.Append(path.Path());
@@ -364,7 +364,7 @@ void mApp::MessageReceived(BMessage *message)
 					BString tempString;
 					BString tempString2;
 					BPath Path;
-					find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+					find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 					tempString.SetTo(path.Path());
 					tempString.Append(SAVE_SETTINGS_PATH);
 					save.FindString(tempString.String(), SAVE_FILE_NAME, NAME_EXEC_DIR, &tempString2, "M_ERROR");
@@ -476,7 +476,7 @@ int32
 mApp::CheckForUpdateThread_static(void *data)
 {
 	mApp *check4updates = (mApp *)data;
-	check4updates->CheckForUpdateThread();
+	//check4updates->CheckForUpdateThread();
 	return 0;
 }
 
@@ -577,7 +577,7 @@ BEntry Entry("/boot/home");
 	tmpString << _mWindow->_CalenderView->mCalender->ThisYear();
 	_mWindow->Unlock();
 	
-	find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+	find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 	FolderPath.SetTo(Path.Path());
 	FolderPath << SAVE_NOTE_PATH;
 		for (int a = 1; a <= INT_MAXFILES; a++)
@@ -631,7 +631,7 @@ BEntry Entry("/boot/home");
 					if (NowMinute == TodayMinute && NowHour == TodayHour)
 					{
 					Save.FindString(FolderPath.String(), FileName.String(), SAVE_FILE_NOTE, &tmpString, "M_ERROR");
-					find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+					find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 					FolderPath.SetTo(Path.Path());
 					FolderPath << SAVE_PATH_PART_1 << SAVE_PATH_PART_2;
 					FileName.SetTo("TempRunScript");
diff --git a/Source/App/makefile b/Source/App/makefile
index 40cc7b6..dd0b811 100644
--- a/Source/App/makefile
+++ b/Source/App/makefile
@@ -29,7 +29,7 @@ LIBS= root \
 	translation \
 	fSub
 DEFINES= 
-LIBPATHS= ../../lib
+LIBPATHS= ../lib
 
 SYSTEM_INCLUDE_PATHS = 
 LOCAL_INCLUDE_PATHS = 
diff --git a/Source/App/obsolete/Language.cpp b/Source/App/obsolete/Language.cpp
index 0c23228..89aa24b 100644
--- a/Source/App/obsolete/Language.cpp
+++ b/Source/App/obsolete/Language.cpp
@@ -201,7 +201,7 @@ void mWindow::SetSettingsPath(BPath *path)
 {
 BPath Path;
 BString string;
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 string.SetTo(Path.Path());
 string.Append(SAVE_SETTINGS_PATH);
 path->SetTo(string.String());
diff --git a/Source/App/preferencesView.cpp b/Source/App/preferencesView.cpp
index 4b45894..e5ad788 100644
--- a/Source/App/preferencesView.cpp
+++ b/Source/App/preferencesView.cpp
@@ -49,7 +49,7 @@ AddChild(mSettingsBox);
 
 MSave load("load");
 
-find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 String.SetTo(Path.Path());
 String.Append(SAVE_SETTINGS_PATH);
 Path.SetTo(String.String());
diff --git a/Source/App/preferencesWindow.cpp b/Source/App/preferencesWindow.cpp
index f93ebfa..7b0f391 100644
--- a/Source/App/preferencesWindow.cpp
+++ b/Source/App/preferencesWindow.cpp
@@ -39,7 +39,7 @@ void PreferencesWindow::MessageReceived(BMessage *message)
 		BPath Path;
 		BString String;
 		
-		find_directory(B_COMMON_SETTINGS_DIRECTORY, &Path);
+		find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &Path);
 		String.SetTo(Path.Path());
 		String.Append(SAVE_SETTINGS_PATH);
 		String.Append(SAVE_FILE_NAME);
diff --git a/Source/lib/makefile b/Source/lib/makefile
index 0e9b9fb..0758c08 100644
--- a/Source/lib/makefile
+++ b/Source/lib/makefile
@@ -1,4 +1,4 @@
-NAME= ../../../lib/libfSub.so
+NAME= ../libfSub.so
 TYPE= SHARED
 SRCS= Bitmap.cpp \
 	Bubble.cpp \
-- 
1.8.3.4


From f6aca393df0895574cec3aac1c03cda254085b84 Mon Sep 17 00:00:00 2001
From: Chris Roberts <cpr420@gmail.com>
Date: Mon, 2 Dec 2013 19:16:30 -0700
Subject: Misc fixes


diff --git a/Source/App/Constants.h b/Source/App/Constants.h
index 3e709f9..6d1172e 100644
--- a/Source/App/Constants.h
+++ b/Source/App/Constants.h
@@ -6,7 +6,7 @@
 #include <SupportKit.h>
 #include <InterfaceKit.h>
 #include <StorageKit.h>
-#include <iostream.h>
+#include <iostream>
 #include <stdio.h>
 #include <stdlib.h>
 #include <OS.h>
diff --git a/Source/App/Secret/glView.cpp b/Source/App/Secret/glView.cpp
index 931e9a6..11cb5e7 100644
--- a/Source/App/Secret/glView.cpp
+++ b/Source/App/Secret/glView.cpp
@@ -7,7 +7,7 @@
 #include "glWindow.h"
 
 #include <opengl/GL/gl.h>
-#include <opengl/GL/glu.h>
+//#include <opengl/GL/glu.h>
 #include <app/Application.h>
 #include <interface/InterfaceDefs.h>
 #include <interface/Bitmap.h>
diff --git a/Source/App/exportWindow.cpp b/Source/App/exportWindow.cpp
index 0db456b..5971456 100644
--- a/Source/App/exportWindow.cpp
+++ b/Source/App/exportWindow.cpp
@@ -210,7 +210,7 @@ fContent << "</body>\n</html>";
 fSaveTo.Append("/");
 fSaveTo.Append(_ExportView->mFileNameControl->Text());
 FILE* file = fopen(fSaveTo.String(), "w");
-cout << fSaveTo.String() << endl;
+std::cout << fSaveTo.String() << std::endl;
 fprintf(file, fContent.String());
 fclose(file);
 }
diff --git a/Source/App/main.cpp b/Source/App/main.cpp
index aaf47e6..aa6d86d 100644
--- a/Source/App/main.cpp
+++ b/Source/App/main.cpp
@@ -409,16 +409,16 @@ void mApp::MessageReceived(BMessage *message)
 //-----------------------------------------------------------------
 void mApp::RefsReceived(BMessage *message)
 {
-cout << "REFS RECIEVED!! " << endl;
+std::cout << "REFS RECIEVED!! " << std::endl;
 //Get Filepanelpath
 int32	count = 0;
 uint32	type = 0;
 message->GetInfo("refs", &type, &count);
-cout << "type is " << type << "count is " << count << endl;
+std::cout << "type is " << type << "count is " << count << std::endl;
 	for (int32 i = 0; i < count; i++) 
 	{
 	entry_ref	ref;
-	cout << " asd its " << i << endl;
+	std::cout << " asd its " << i <<std::endl;
 		if (message->FindRef("refs", i, &ref) == B_NO_ERROR) 
 		{
 		BEntry entry(&ref);
@@ -432,12 +432,12 @@ cout << "type is " << type << "count is " << count << endl;
 			}
 			else
 			{
-			cout << "2_" << endl;
+			std::cout << "2_" << std::endl;
 			}
 		}
 		else
 		{
-		cout << "1_" << endl;
+		std::cout << "1_" << std::endl;
 		}
 	}
 }
diff --git a/Source/App/makefile b/Source/App/makefile
index dd0b811..7db6791 100644
--- a/Source/App/makefile
+++ b/Source/App/makefile
@@ -20,9 +20,8 @@ SRCS=aboutWindow.cpp \
 	Secret/glView.cpp \
 	Secret/glWindow.cpp
 RSRCS= Project.rsrc
-LIBS= root \
-	be \
-	stdc++.r4 \
+LIBS= be \
+	$(STDCPPLIBS) \
 	game \
 	GL \
 	tracker \
@@ -38,7 +37,7 @@ DRIVER_PATH =
 APP_VERSION = 
 DEBUGGER = 
 LINKER_FLAGS = 
-COMPILER_FLAGS = 
+CFLAGS= -fpermissive
 SYMBOLS = 
 WARNINGS = 
 
diff --git a/Source/lib/Alert.cpp b/Source/lib/Alert.cpp
index b079d5e..1de9b04 100644
--- a/Source/lib/Alert.cpp
+++ b/Source/lib/Alert.cpp
@@ -52,7 +52,7 @@ Button1_Text.SetTo(button1_text);
 	
 
 _SetupEverything();	
-cout << "Setup everything" << endl;
+std::cout << "Setup everything" << std::endl;
 }
 
 //-----------------------------------------------------------------
@@ -124,7 +124,7 @@ SetTitle(Alert_Name.String());
 		}
 		else
 		{
-		cout << "only one button" << endl;
+		std::cout << "only one button" << std::endl;
 		TempFrame.Set(ButtonPostItsFrame3.left, ButtonPostItsFrame3.top, ButtonPostItsFrame3.right, ButtonPostItsFrame3.bottom);
 		}
 		if (fButton3Enabled)
@@ -143,7 +143,7 @@ SetTitle(Alert_Name.String());
 			}
 			else
 			{
-			cout << "Only two buttons" << endl;
+			std::cout << "Only two buttons" << std::endl;
 			TempFrame.Set(ButtonPostItsFrame3.left, ButtonPostItsFrame3.top, ButtonPostItsFrame3.right, ButtonPostItsFrame3.bottom);
 			}
 		AlertButton2 = new BButton(TempFrame, "AlertButton2", Button2_Text.String(), new BMessage(MSG_BUTTON2));
@@ -153,7 +153,7 @@ SetTitle(Alert_Name.String());
 	//3
 		if (fButton3Enabled)
 		{
-		cout << "OMG, three buttons" << endl;
+		std::cout << "OMG, three buttons" << std::endl;
 		TempFrame.Set(ButtonPostItsFrame3.left, ButtonPostItsFrame3.top, ButtonPostItsFrame3.right, ButtonPostItsFrame3.bottom);
 		AlertButton3 = new BButton(TempFrame, "AlertButton3", Button3_Text.String(), new BMessage(MSG_BUTTON3));
 		AlertButton3->MakeDefault(true);
diff --git a/Source/lib/Alert.h b/Source/lib/Alert.h
index ae91d88..8b87263 100644
--- a/Source/lib/Alert.h
+++ b/Source/lib/Alert.h
@@ -6,7 +6,7 @@
 #include <StorageKit.h>
 #include <SupportKit.h>
 #include <TranslationKit.h>
-#include <iostream.h>
+#include <iostream>
 
 #define MSG_BUTTON1		'1001'
 #define MSG_BUTTON2		'1002'
diff --git a/Source/lib/Bubble.h b/Source/lib/Bubble.h
index 6c0e3e9..7b13a91 100644
--- a/Source/lib/Bubble.h
+++ b/Source/lib/Bubble.h
@@ -6,7 +6,7 @@
 #include <StorageKit.h>
 #include <SupportKit.h>
 #include <TranslationKit.h>
-#include <iostream.h>
+#include <iostream>
 
 
 class _EXPORT MBubble	
diff --git a/Source/lib/Calender.cpp b/Source/lib/Calender.cpp
index 2918439..5d2a89f 100644
--- a/Source/lib/Calender.cpp
+++ b/Source/lib/Calender.cpp
@@ -266,7 +266,7 @@ _SetBoxBounds();
 	//We dont take your false dates around here
 	if (fYear < 2000 || fMonthNumber > 12 || fMonthNumber < 1 || fDayNumber > 31 || fDayNumber < 1)
 	{
-	cout << "Date doesnt exist" << endl;
+	std::cout << "Date doesnt exist" << std::endl;
 	}
 	//If American style, add one more day (they are stupid and begin the week with a sunday)
 	if (fCalenderIsAmericaStyle)
diff --git a/Source/lib/Calender.h b/Source/lib/Calender.h
index c9aacb1..0c62dc5 100644
--- a/Source/lib/Calender.h
+++ b/Source/lib/Calender.h
@@ -9,7 +9,7 @@
 #include <StorageKit.h>
 #include <SupportKit.h>
 #include <TranslationKit.h>
-#include <iostream.h>
+#include <iostream>
 
 // Project Includes ------------------------------------------------------------
 
@@ -122,4 +122,4 @@ BString						fDayNumberString;
 
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/Source/lib/CustomListItem.h b/Source/lib/CustomListItem.h
index d252ad1..9609697 100644
--- a/Source/lib/CustomListItem.h
+++ b/Source/lib/CustomListItem.h
@@ -9,7 +9,7 @@
 #include <StorageKit.h>
 #include <SupportKit.h>
 #include <TranslationKit.h>
-#include <iostream.h>
+#include <iostream>
 
 //----------------------- Global includes  ----------------------
 
diff --git a/Source/lib/Postit.h b/Source/lib/Postit.h
index 84a9650..2eb8c58 100644
--- a/Source/lib/Postit.h
+++ b/Source/lib/Postit.h
@@ -6,7 +6,7 @@
 #include <StorageKit.h>
 #include <SupportKit.h>
 #include <TranslationKit.h>
-#include <iostream.h>
+#include <iostream>
 
 #define MSG_BUTTON1		'1001'
 #define MSG_BUTTON2		'1002'
diff --git a/Source/lib/Save.h b/Source/lib/Save.h
index c3604a8..a7770b3 100644
--- a/Source/lib/Save.h
+++ b/Source/lib/Save.h
@@ -6,7 +6,7 @@
 #include <StorageKit.h>
 #include <SupportKit.h>
 #include <TranslationKit.h>
-#include <iostream.h>
+#include <iostream>
 
 
 class _EXPORT MSave	: public BMessage	{
@@ -130,4 +130,4 @@ class _EXPORT MSave	: public BMessage	{
 
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/Source/lib/makefile b/Source/lib/makefile
index 0758c08..04c355e 100644
--- a/Source/lib/makefile
+++ b/Source/lib/makefile
@@ -7,9 +7,8 @@ SRCS= Bitmap.cpp \
 	FlickerFreeStringView.cpp \
 	Postit.cpp \
 	Save.cpp
-LIBS= root \
-	be \
-	stdc++.r4
+LIBS= be \
+	$(STDCPPLIBS)
 RSRCS= 
 DEFINES= 
 LIBPATHS= 
@@ -21,7 +20,7 @@ DRIVER_PATH =
 APP_VERSION = 
 DEBUGGER = 
 LINKER_FLAGS = 
-COMPILER_FLAGS = 
+CFLAGS= -fpermissive
 SYMBOLS = 
 WARNINGS = 
 
-- 
1.8.3.4

