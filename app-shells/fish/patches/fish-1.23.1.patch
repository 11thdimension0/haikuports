diff --git a/configure.ac b/configure.ac
index 377ab5e..672d34b 100644
--- a/configure.ac
+++ b/configure.ac
@@ -105,7 +105,7 @@ fi
 # tree and doesn't update CFLAGS.
 #
 
-for i in /usr/pkg /sw /opt /opt/local; do
+for i in /usr/pkg /sw /opt /opt/local /boot/common; do
 
 	AC_MSG_CHECKING([for $i/include include directory])
 	if test -d $i/include; then
@@ -119,7 +119,8 @@ for i in /usr/pkg /sw /opt /opt/local; do
 	AC_MSG_CHECKING([for $i/lib library directory])
 	if test -d $i/lib; then
 		AC_MSG_RESULT(yes)
-		LDFLAGS="$LDFLAGS -L$i/lib/ -R$i/lib/"
+		LDFLAGS="$LDFLAGS -L$i/lib/"
+		#LDFLAGS="$LDFLAGS -R$i/lib/"
 	else
 		AC_MSG_RESULT(no)
 	fi
@@ -142,6 +143,12 @@ AC_CONFIG_HEADERS(config.h)
 
 
 #
+# Ask autoconf to detect the platform type
+#
+AC_CANONICAL_TARGET
+
+
+#
 # This adds markup to the code that results in a few extra compile
 # time checks on recent GCC versions. It helps stop a few common bugs.
 #
@@ -306,7 +313,13 @@ if test "$GCC" = yes; then
 	# bug has been verified to not exist on Linux using GCC 3.3.3.
 	#
 
-	CFLAGS="$CFLAGS -fno-optimize-sibling-calls"
+	case $target_os in
+		beos*|haiku*)
+			;;
+		*) 
+			CFLAGS="$CFLAGS -fno-optimize-sibling-calls"
+			;;
+	esac
 
 
 	#
@@ -319,7 +332,13 @@ if test "$GCC" = yes; then
 	# This is needed in order to get the really cool backtraces
 	#
 
-	LDFLAGS_FISH="$LDFLAGS_FISH -rdynamic"
+	case $target_os in
+		beos*|haiku*)
+			;;
+		*) 
+			LDFLAGS_FISH="$LDFLAGS_FISH -rdynamic"
+			;;
+	esac
 
 fi
 
@@ -378,8 +397,6 @@ fi
 # seems that tputs is never really needed.
 #
 
-AC_CANONICAL_TARGET
-
 if test $target_cpu = powerpc; then
 	AC_DEFINE([TPUTS_KLUDGE],[1],[Evil kludge to get Power based machines to work])
 fi
@@ -510,7 +527,7 @@ AC_DEFINE(
 # Check for os dependant libraries for all binaries.
 LIBS_COMMON=$LIBS
 LIBS=""
-AC_SEARCH_LIBS( connect, socket, , [AC_MSG_ERROR([Cannot find the socket library, needed to build this package.] )] )
+AC_SEARCH_LIBS( connect, network socket, , [AC_MSG_ERROR([Cannot find the socket library, needed to build this package.] )] )
 AC_SEARCH_LIBS( nanosleep, rt, , [AC_MSG_ERROR([Cannot find the rt library, needed to build this package.] )] )
 AC_SEARCH_LIBS( setupterm, [ncurses curses], , [AC_MSG_ERROR([Could not find a curses implementation, needed to build fish])] )
 AC_SEARCH_LIBS( [nan], [m], [AC_DEFINE( [HAVE_NAN], [1], [Define to 1 if you have the nan function])] )
@@ -555,7 +572,7 @@ LIBS="$LIBS_SHARED"
 if test x$local_gettext != xno; then
 	AC_SEARCH_LIBS( gettext, intl,,)
 fi
-AC_SEARCH_LIBS( iconv_open, iconv, , [AC_MSG_ERROR([Could not find an iconv implementation, needed to build fish])] )
+AC_SEARCH_LIBS( iconv_open, iconv, , [AC_SEARCH_LIBS( libiconv_open, iconv, , [AC_MSG_ERROR([Could not find an iconv implementation, needed to build fish])] )] )
 LIBS_FISH_PAGER=$LIBS
 LIBS=$LIBS_COMMON
 
@@ -568,7 +585,7 @@ LIBS="$LIBS_SHARED"
 if test x$local_gettext != xno; then
 	AC_SEARCH_LIBS( gettext, intl,,)
 fi
-AC_SEARCH_LIBS( iconv_open, iconv, , [AC_MSG_ERROR([Could not find an iconv implementation, needed to build fish])] )
+AC_SEARCH_LIBS( iconv_open, iconv, , [AC_SEARCH_LIBS( libiconv_open, iconv, , [AC_MSG_ERROR([Could not find an iconv implementation, needed to build fish])] )] )
 LIBS_FISHD=$LIBS
 LIBS=$LIBS_COMMON
 
diff --git a/proc.c b/proc.c
index edcc7c6..30dd96f 100644
--- a/proc.c
+++ b/proc.c
@@ -482,8 +482,11 @@ static void handle_child_status( pid_t pid, int status )
 	return;
 }
 
-
+#ifdef SA_SIGINFO
 void job_handle_signal ( int signal, siginfo_t *info, void *con )
+#else
+void job_handle_signal ( int signal )
+#endif
 {
 
 	int status;
diff --git a/proc.h b/proc.h
index dd46bc0..3618956 100644
--- a/proc.h
+++ b/proc.h
@@ -427,7 +427,9 @@ int job_reap( int interactive );
    Signal handler for SIGCHLD. Mark any processes with relevant
    information.
 */
+#ifdef SA_SIGINFO
 void job_handle_signal( int signal, siginfo_t *info, void *con );
+#endif
 
 /**
    Send the specified signal to all processes in the specified job.
diff --git a/signal.c b/signal.c
index 2ac38aa..3ff1d38 100644
--- a/signal.c
+++ b/signal.c
@@ -29,6 +29,14 @@ The library for various signal related issues
 #include "reader.h"
 #include "proc.h"
 
+#ifdef __HAIKU__
+#ifndef SA_SIGINFO
+#define SA_SIGINFO 0
+typedef struct {
+} siginfo_t;
+#define sa_sigaction sa_handler
+#endif
+#endif
 
 /**
    Struct describing an entry for the lookup table used to convert
