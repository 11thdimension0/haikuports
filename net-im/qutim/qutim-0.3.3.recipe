SUMMARY="Qt4-based multi-protocol instant messenger"
DESCRIPTION="qutIM — is firstly Open source and free multiprotocol Instant \
Messaging client. With qutIM you can send and receive messages, participate \
in group conferences, make video and audio calls (It appears to come in 0.4) \
and write to different microblogs and social networks.

qutIM — Extremely extendible client. The suitable API and good documented \
code makes it easy to write plugins in C++/Qt or Javascript."
HOMEPAGE="http://www.qutim.org"
SOURCE_URI="git+https://github.com/euroelessar/qutim.git#4f4a252"
SOURCE_URI_2="git+https://github.com/euroelessar/k8json.git"
SOURCE_URI_3="git+https://github.com/euroelessar/q-xdg.git"
SOURCE_URI_4="git+https://github.com/euroelessar/jreen.git"
SOURCE_URI_5="git+https://github.com/euroelessar/qutim-translations.git"
SOURCE_URI_6="git+https://github.com/gorthauer/artwork.git"

REVISION="1"
LICENSE="GNU GPL v3"
COPYRIGHT="2008-2015 by qutim.org team"

ARCHITECTURES="!x86_gcc2 ?x86 ?x86_64"
SECONDARY_ARCHITECTURES="x86 !x86_gcc2"

PROVIDES="
	qutim$secondaryArchSuffix = $portVersion
	cmd:qutim$secondaryArchSuffix
	app:qutIM$secondaryArchSuffix
	"
REQUIRES="
	haiku${secondaryArchSuffix}
	libqt4${secondaryArchSuffix} >= 4.8
	lib:libaspell$secondaryArchSuffix
#	lib:libattica$secondaryArchSuffix
	lib:libgsasl$secondaryArchSuffix
#	lib:libpurple$secondaryArchSuffix
	lib:libqca$secondaryArchSuffix
	lib:libz$secondaryArchSuffix
	"
BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel
	libqt4${secondaryArchSuffix}_devel >= 4.8
	devel:libaspell$secondaryArchSuffix
#	devel:libattica$secondaryArchSuffix
	devel:libgsasl$secondaryArchSuffix
#	devel:libpurple$secondaryArchSuffix
	devel:libqca$secondaryArchSuffix
	devel:libz${secondaryArchSuffix}
	"
BUILD_PREREQUIRES="
	cmd:cmake
	cmd:doxygen
	cmd:g++${secondaryArchSuffix}
	cmd:git
	cmd:make
	cmd:pkg_config${secondaryArchSuffix}
	"

PATCHES="qutim_x86-0.3.3.patchset"
PATCHES_3="xdg.patchset"

BUILD()
{
	# prepare the directory structure
	ln -sfn $sourceDir2/* $sourceDir/core/3rdparty/k8json
	ln -sfn $sourceDir3/* $sourceDir/core/3rdparty/q-xdg
	ln -sfn $sourceDir4/* $sourceDir/protocols/jabber/jreen
	ln -sfn $sourceDir5/* $sourceDir/translations
	ln -sfn $sourceDir6/* $sourceDir/artwork

	mkdir -p ../qutim-build
	cd ../qutim-build

	cmake ../qutim-0.3.3 \
		-DVREEN=0 \
		-DVKONTAKTE=0 \
		-DSCREENSHOTER=0 \
		-DDBUSAPI=off \
		-DDBUSNOTIFICATIONS=off \
		-DNOWPLAYING=off \
		-DMOBILEABOUT=off \
		-DMOBILECONTACTINFO=off \
		-DMOBILENOTIFICATIONSSETTINGS=off \
		-DMOBILESETTINGSDIALOG=off \
		-DCMAKE_INSTALL_PREFIX=$appsDir/qutIM \
		-DDATA_INSTALL_DIR=$appsDir/qutIM/data \
		-DQUTIM_SHARE_DIR_DEF=$appsDir/qutIM/data \
		-DQUTIM_SHARE_DIR=$appsDir/qutIM/data

	make $jobArgs
}

INSTALL()
{
	cd ../qutim-build
	make install

	mv $appsDir/qutIM/lib/qutim/plugins $appsDir/qutIM
	mv $appsDir/qutIM/bin/qutim $appsDir/qutIM/qutIM

	rm -rf $appsDir/qutIM/{include,libqutim,share}
	rm -rf $appsDir/qutIM/lib/{pkgconfig,qutim}
	rm -rf $appsDir/qutIM/bin

	addResourcesToBinaries $portDir/additional-files/qutim.rdef $appsDir/qutIM/qutIM
	addAppDeskbarSymlink $appsDir/qutIM/qutIM
}
