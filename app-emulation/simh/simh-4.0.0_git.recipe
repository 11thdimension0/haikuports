SUMMARY="SIMH is a simulator for historical computers such as Vax, PDP-11 etc."
DESCRIPTION="
SIMH is a highly portable, multi-system simulator.

SIMH implements simulators for:
- Data General Nova, Eclipse
- Digital Equipment Corporation PDP-1, PDP-4, PDP-7, PDP-8, PDP-9, PDP-10, PDP-11, PDP-15, VAX
- GRI Corporation GRI-909, GRI-99
- IBM 1401, 1620, 1130,  7090/7094, System 3
- Interdata (Perkin-Elmer) 16b and 32b systems
- Hewlett-Packard 2114, 2115, 2116, 2100, 21MX, 1000
- Honeywell H316/H516
- MITS Altair 8800, with both 8080 and Z80
- Royal-Mcbee LGP-30, LGP-21
- Scientific Data Systems SDS 940
- SWTP 6800 
"
HOMEPAGE="
	http://simh.trailing-edge.com/
	https://github.com/simh/simh
	"
SRC_URI="git+https://github.com/simh/simh.git#4c55f1af0cbbc6940a55514c976f1df93140e14b"
#CHECKSUM_SHA256=""
COPYRIGHT="1993-2008 Robert M Supnik"
LICENSE="MIT"
REVISION="1"
ARCHITECTURES="x86 ?x86_64"
if [ $effectiveTargetArchitecture != x86_gcc2 ]; then
	# x86_gcc2 is fine as primary target architecture as long as we're building
	# for a different secondary architecture.
	ARCHITECTURES="$ARCHITECTURES x86_gcc2"
fi
SECONDARY_ARCHITECTURES="x86"

PROVIDES="
	simh$secondaryArchSuffix = $portVersion
	cmd:altair$secondaryArchSuffix = $portVersion
	cmd:altairz80$secondaryArchSuffix = $portVersion
	cmd:eclipse$secondaryArchSuffix = $portVersion
	cmd:gri$secondaryArchSuffix = $portVersion
	cmd:h316$secondaryArchSuffix = $portVersion
	cmd:hp2100$secondaryArchSuffix = $portVersion
	cmd:i1401$secondaryArchSuffix = $portVersion
	cmd:i1620$secondaryArchSuffix = $portVersion
	cmd:i7094$secondaryArchSuffix = $portVersion
	cmd:ibm1130$secondaryArchSuffix = $portVersion
	cmd:id16$secondaryArchSuffix = $portVersion
	cmd:id32$secondaryArchSuffix = $portVersion
	cmd:lgp$secondaryArchSuffix = $portVersion
	cmd:microvax1$secondaryArchSuffix = $portVersion
	cmd:microvax2$secondaryArchSuffix = $portVersion
	cmd:microvax3900$secondaryArchSuffix = $portVersion
	cmd:nova$secondaryArchSuffix = $portVersion
	cmd:pdp1$secondaryArchSuffix = $portVersion
	cmd:pdp10$secondaryArchSuffix = $portVersion
	cmd:pdp11$secondaryArchSuffix = $portVersion
	cmd:pdp15$secondaryArchSuffix = $portVersion
	cmd:pdp4$secondaryArchSuffix = $portVersion
	cmd:pdp7$secondaryArchSuffix = $portVersion
	cmd:pdp8$secondaryArchSuffix = $portVersion
	cmd:pdp9$secondaryArchSuffix = $portVersion
	cmd:rtvax1000$secondaryArchSuffix = $portVersion
	cmd:s3$secondaryArchSuffix = $portVersion
	cmd:sds$secondaryArchSuffix = $portVersion
	cmd:ssem$secondaryArchSuffix = $portVersion
	cmd:swtp6800mp_a$secondaryArchSuffix = $portVersion
	cmd:swtp6800mp_a2$secondaryArchSuffix = $portVersion
	cmd:tx_0$secondaryArchSuffix = $portVersion
	cmd:vax$secondaryArchSuffix = $portVersion
	cmd:vax730$secondaryArchSuffix = $portVersion
	cmd:vax750$secondaryArchSuffix = $portVersion
	cmd:vax780$secondaryArchSuffix = $portVersion
	cmd:vax8600$secondaryArchSuffix = $portVersion
	"

#XXX: patchset contains CRLF
# for now it must be applied manually in the chroot with git am --keep-cr
PATCHES="simh-$portVersion.patchset"

REQUIRES="
	haiku$secondaryArchSuffix >= $haikuVersion
	#TODO:pcap
	"

BUILD_REQUIRES="
	haiku${secondaryArchSuffix}_devel >= $haikuVersion
	#TODO:pcap
	"

BUILD_PREREQUIRES="
	cmd:awk
	cmd:gcc$secondaryArchSuffix
	cmd:git
	cmd:ld$secondaryArchSuffix
	cmd:make
	cmd:find
	"

BUILD()
{
	make $jobArgs
}

INSTALL()
{
	mkdir -p "$binDir"
	for bin in BIN/*; do
		cp -a "$bin" "$binDir"
	done
}
