Index: gio/gunixmounts.c
===================================================================
--- gio/gunixmounts.c	(revision 6849)
+++ gio/gunixmounts.c	(working copy)
@@ -592,6 +592,16 @@
   
   return g_list_reverse (return_list);
 }
+
+#elif defined(G_OS_BEOS)
+
+static GList *
+_g_get_unix_mounts (void)
+{
+  GList *return_list = NULL;
+  return return_list;
+}
+
 #else
 #error No _g_get_unix_mounts() implementation for system
 #endif
@@ -972,6 +982,16 @@
   
   return g_list_reverse (return_list);
 }
+
+#elif defined(G_OS_BEOS)
+
+static GList *
+_g_get_unix_mount_points (void)
+{
+	GList *return_list = NULL;
+	return return_list;
+}
+
 #else
 #error No g_get_mount_table() implementation for system
 #endif
Index: gio/makegioalias.pl
===================================================================
--- gio/makegioalias.pl	(revision 6849)
+++ gio/makegioalias.pl	(working copy)
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!/boot/home/config/bin/perl -w
 
 my $do_def = 0;
 
Index: gio/gunixinputstream.c
===================================================================
--- gio/gunixinputstream.c	(revision 6849)
+++ gio/gunixinputstream.c	(working copy)
@@ -28,7 +28,9 @@
 #include <errno.h>
 #include <stdio.h>
 #include <fcntl.h>
+#ifdef HAVE_POLL
 #include <poll.h>
+#endif
 
 #include <glib.h>
 #include <glib/gstdio.h>
@@ -172,6 +174,9 @@
 			  GCancellable  *cancellable,
 			  GError       **error)
 {
+#ifdef G_OS_BEOS
+  return -1;
+#else
   GUnixInputStream *unix_stream;
   gssize res;
   struct pollfd poll_fds[2];
@@ -227,6 +232,7 @@
     }
 
   return res;
+#endif
 }
 
 static gboolean
@@ -332,6 +338,7 @@
 				GAsyncReadyCallback  callback,
 				gpointer             user_data)
 {
+#ifndef G_OS_BEOS
   GSource *source;
   GUnixInputStream *unix_stream;
   ReadAsyncData *data;
@@ -354,6 +361,7 @@
   g_source_attach (source, NULL);
  
   g_source_unref (source);
+#endif
 }
 
 static gssize
Index: gio/Makefile.am
===================================================================
--- gio/Makefile.am	(revision 6849)
+++ gio/Makefile.am	(working copy)
@@ -148,7 +148,7 @@
 platform_libadd += -lshlwapi
 endif
 
-SUBDIRS += tests
+#SUBDIRS += tests
 
 libgio_2_0_la_SOURCES =		\
 	gappinfo.c 		\
Index: gio/xdgmime/xdgmimeglob.c
===================================================================
--- gio/xdgmime/xdgmimeglob.c	(revision 6849)
+++ gio/xdgmime/xdgmimeglob.c	(working copy)
@@ -35,7 +35,7 @@
 #include <stdio.h>
 #include <assert.h>
 #include <string.h>
-#include <fnmatch.h>
+//#include <fnmatch.h>
 
 #ifndef	FALSE
 #define	FALSE	(0)
Index: gio/xdgmime/xdgmimealias.c
===================================================================
--- gio/xdgmime/xdgmimealias.c	(revision 6849)
+++ gio/xdgmime/xdgmimealias.c	(working copy)
@@ -35,7 +35,7 @@
 #include <stdio.h>
 #include <assert.h>
 #include <string.h>
-#include <fnmatch.h>
+//#include <fnmatch.h>
 
 #ifndef	FALSE
 #define	FALSE	(0)
Index: gio/xdgmime/xdgmimeparent.c
===================================================================
--- gio/xdgmime/xdgmimeparent.c	(revision 6849)
+++ gio/xdgmime/xdgmimeparent.c	(working copy)
@@ -35,7 +35,7 @@
 #include <stdio.h>
 #include <assert.h>
 #include <string.h>
-#include <fnmatch.h>
+//#include <fnmatch.h>
 
 #ifndef	FALSE
 #define	FALSE	(0)
Index: gio/xdgmime/xdgmimecache.c
===================================================================
--- gio/xdgmime/xdgmimecache.c	(revision 6849)
+++ gio/xdgmime/xdgmimecache.c	(working copy)
@@ -34,7 +34,7 @@
 
 #include <fcntl.h>
 #include <unistd.h>
-#include <fnmatch.h>
+//#include <fnmatch.h>
 #include <assert.h>
 
 #include <netinet/in.h> /* for ntohl/ntohs */
Index: gio/gunixoutputstream.c
===================================================================
--- gio/gunixoutputstream.c	(revision 6849)
+++ gio/gunixoutputstream.c	(working copy)
@@ -28,7 +28,9 @@
 #include <errno.h>
 #include <stdio.h>
 #include <fcntl.h>
+#ifdef HAVE_POLL
 #include <poll.h>
+#endif
 
 #include <glib.h>
 #include <glib/gstdio.h>
@@ -160,6 +162,9 @@
 			    GCancellable   *cancellable,
 			    GError        **error)
 {
+#ifdef G_OS_BEOS
+  return -1;
+#else
   GUnixOutputStream *unix_stream;
   gssize res;
   struct pollfd poll_fds[2];
@@ -216,6 +221,7 @@
     }
   
   return res;
+#endif
 }
 
 static gboolean
@@ -321,6 +327,7 @@
 				  GAsyncReadyCallback  callback,
 				  gpointer             user_data)
 {
+#ifndef G_OS_BEOS
   GSource *source;
   GUnixOutputStream *unix_stream;
   WriteAsyncData *data;
@@ -343,6 +350,7 @@
   g_source_attach (source, NULL);
   
   g_source_unref (source);
+#endif
 }
 
 static gssize
Index: gobject/makegobjectalias.pl
===================================================================
--- gobject/makegobjectalias.pl	(revision 6849)
+++ gobject/makegobjectalias.pl	(working copy)
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!/boot/home/config/bin/perl -w
 
 my $do_def = 0;
 
Index: glib/gutils.c
===================================================================
--- glib/gutils.c	(revision 6849)
+++ glib/gutils.c	(working copy)
@@ -2236,6 +2236,21 @@
 }
 #endif /* G_OS_WIN32 */
 
+#if defined(G_OS_BEOS)
+static void
+load_user_special_dirs (void)
+{
+  g_user_special_dirs[G_USER_DIRECTORY_DESKTOP] = g_strdup("/boot/home/Desktop");
+  g_user_special_dirs[G_USER_DIRECTORY_DOCUMENTS] = g_strdup("/boot/home");
+  g_user_special_dirs[G_USER_DIRECTORY_DOWNLOAD] = g_strdup("/boot/home/Desktop");
+  g_user_special_dirs[G_USER_DIRECTORY_MUSIC] = NULL;
+  g_user_special_dirs[G_USER_DIRECTORY_PICTURES] = NULL;
+  g_user_special_dirs[G_USER_DIRECTORY_PUBLIC_SHARE] = NULL;
+  g_user_special_dirs[G_USER_DIRECTORY_TEMPLATES] = NULL;
+  g_user_special_dirs[G_USER_DIRECTORY_VIDEOS] = NULL;
+}
+#endif /* G_OS_BEOS */
+
 static void g_init_user_config_dir (void);
 
 #if defined(G_OS_UNIX) && !defined(HAVE_CARBON)
Index: glib/gmain.c
===================================================================
--- glib/gmain.c	(revision 6849)
+++ glib/gmain.c	(working copy)
@@ -3876,6 +3876,7 @@
 static void
 g_child_watch_source_init_multi_threaded (void)
 {
+#ifndef G_OS_BEOS
   GError *error = NULL;
   struct sigaction action;
 
@@ -3895,6 +3896,7 @@
   sigemptyset (&action.sa_mask);
   action.sa_flags = SA_RESTART | SA_NOCLDSTOP;
   sigaction (SIGCHLD, &action, NULL);
+#endif
 }
 
 static void
Index: glib/gbacktrace.c
===================================================================
--- glib/gbacktrace.c	(revision 6849)
+++ glib/gbacktrace.c	(working copy)
@@ -193,7 +193,7 @@
 #endif
 }
 
-#ifndef G_OS_WIN32
+#if !defined(G_OS_WIN32) && !defined(G_OS_BEOS)
 
 static gboolean stack_trace_done = FALSE;
 
Index: glib/Makefile.am
===================================================================
--- glib/Makefile.am	(revision 6849)
+++ glib/Makefile.am	(working copy)
@@ -19,7 +19,7 @@
 gregex_h =
 endif
 
-SUBDIRS = libcharset $(PRINTF_SUBDIR) $(MAYBE_PCRE) update-pcre . tests
+SUBDIRS = libcharset $(PRINTF_SUBDIR) $(MAYBE_PCRE) update-pcre .
 
 DIST_SUBDIRS = libcharset gnulib pcre update-pcre tests
 
Index: glib/gslice.c
===================================================================
--- glib/gslice.c	(revision 6849)
+++ glib/gslice.c	(working copy)
@@ -302,6 +302,8 @@
     GetSystemInfo (&system_info);
     sys_page_size = system_info.dwPageSize;
   }
+#elif defined(G_OS_BEOS)
+  sys_page_size = 4096;
 #else
   sys_page_size = sysconf (_SC_PAGESIZE); /* = sysconf (_SC_PAGE_SIZE); = getpagesize(); */
 #endif
Index: glib/gtester.c
===================================================================
--- glib/gtester.c	(revision 6849)
+++ glib/gtester.c	(working copy)
@@ -630,6 +630,7 @@
    * we must fiddle with sigaction() *before* glib is used, otherwise
    * we could revoke signal hanmdler setups from glib initialization code.
    */
+#ifdef SA_RESTART
   if (TRUE)
     {
       struct sigaction sa;
@@ -639,6 +640,7 @@
       sa.sa_flags = SA_RESTART;
       sigaction (SIGCHLD, &sa, &osa);
     }
+#endif
 
   g_set_prgname (argv[0]);
   parse_args (&argc, &argv);
Index: glib/gspawn.c
===================================================================
--- glib/gspawn.c	(revision 6849)
+++ glib/gspawn.c	(working copy)
@@ -230,6 +230,9 @@
               gint                 *exit_status,
               GError              **error)     
 {
+#ifdef G_OS_BEOS
+  return FALSE;
+#else
   gint outpipe = -1;
   gint errpipe = -1;
   GPid pid;
@@ -425,6 +428,7 @@
 
       return TRUE;
     }
+#endif
 }
 
 /**
@@ -896,7 +900,7 @@
   gint fd;
   gint res = 0;
   
-#ifdef HAVE_SYS_RESOURCE_H
+#if defined(HAVE_SYS_RESOURCE_H) && !defined(G_OS_BEOS)
   struct rlimit rl;
 #endif
 
@@ -939,7 +943,7 @@
 
 #endif
   
-#ifdef HAVE_SYS_RESOURCE_H
+#if defined(HAVE_SYS_RESOURCE_H) && !defined(G_OS_BEOS)
       
   if (getrlimit(RLIMIT_NOFILE, &rl) == 0 && rl.rlim_max != RLIM_INFINITY)
       open_max = rl.rlim_max;
Index: glib/makegalias.pl
===================================================================
--- glib/makegalias.pl	(revision 6849)
+++ glib/makegalias.pl	(working copy)
@@ -1,4 +1,4 @@
-#!/usr/bin/perl -w
+#!/boot/home/config/bin/perl -w
 
 my $do_def = 0;
 
