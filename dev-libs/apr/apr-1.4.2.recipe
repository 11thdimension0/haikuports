SUMMARY="Apache Portable Runtime Library"
HOMEPAGE="http://apr.apache.org/"
SRC_URI="http://archive.apache.org/dist/apr/apr-1.4.2.tar.gz"
CHECKSUM_MD5="fc80cb54f158c2674f9eeb47a1f672cd"
LICENSE="Apache v2"
COPYRIGHT="2010 The Apache Software Foundation."
REVISION="5"
ARCHITECTURES="x86_gcc2 ?x86"

PROVIDES="
	apr = $portVersion compat >= 1
	lib:libapr = $portVersion compat >= 1
	lib:libapr_1 = $portVersion compat >= 1
	"
REQUIRES="
	haiku >= $haikuVersion
	"
BUILD_REQUIRES="
	"
BUILD_PREREQUIRES="
	haiku_devel >= $haikuVersion
	cmd:aclocal
	cmd:autoconf
	cmd:gcc
	cmd:ld
	cmd:libtoolize
	cmd:make
	"

SOURCE_DIR="$portVersionedName"

BUILD()
{
	libtoolize --force --copy --install
	touch libtool.m4
	aclocal -I build
	autoconf
	./configure $configureDirArgs
	
	# TODO: fix this hack (by finding out why top_builddir seems to be unset)!
	ln -sfn $sourceDir/libtool /libtool
	
	make
}

INSTALL()
{
	make install

	# prepare develop/lib
	prepareInstalledDevelLibs libapr-1
	fixPkgconfig
}

TEST()
{
	make test
}


# ----- source package -------------------------------------------------------

PROVIDES_source="apr_source = $portVersion compat = $portVersion"


DESCRIPTION="
	The mission of the Apache Portable Runtime (APR) project is to create 
	and maintain software libraries that provide a predictable and consistent 
	interface to underlying platform-specific implementations. The primary 
	goal is to provide an API to which software developers may code and be 
	assured of predictable if not identical behaviour regardless of the 
	platform on which their software is built, relieving them of the need to 
	code special-case conditions to work around or take advantage of 
	platform-specific deficiencies or features.
	
	To give a brief overview, the primary core subsystems of APR 1.x include 
	the following:
	
	- atomic operations
	- dynamic Shared Object loading
	- file I/O
	- locks (mutexes, condition variables, etc)
	- memory management (high performance allocators)
	- memory-mapped files
	- multicast Sockets
	- network I/O
	- shared memory
	- thread and Process management
	- various data structures (tables, hashes, priority queues, etc) 
	"
