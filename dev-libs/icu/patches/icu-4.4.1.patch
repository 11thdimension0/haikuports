diff -urN icu/source/common/normalizer2.cpp icu-haiku/source/common/normalizer2.cpp
--- icu/source/common/normalizer2.cpp	2010-04-28 15:27:38.056098816 +0000
+++ icu-haiku/source/common/normalizer2.cpp	2010-07-14 15:41:18.000000000 +0000
@@ -221,7 +221,7 @@
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.decompose(src, limit, &buffer, errorCode);
     }
-    using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+//    using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        ReorderingBuffer &buffer, UErrorCode &errorCode) const {
@@ -231,7 +231,7 @@
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &errorCode) const {
         return impl.decompose(src, limit, NULL, errorCode);
     }
-    using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+//    using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
     virtual UNormalizationCheckResult getQuickCheck(UChar32 c) const {
         return impl.isDecompYes(impl.getNorm16(c)) ? UNORM_YES : UNORM_NO;
     }
@@ -251,7 +251,7 @@
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.compose(src, limit, onlyContiguous, TRUE, buffer, errorCode);
     }
-    using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+//    using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        ReorderingBuffer &buffer, UErrorCode &errorCode) const {
@@ -293,7 +293,7 @@
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &) const {
         return impl.composeQuickCheck(src, limit, onlyContiguous, NULL);
     }
-    using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+//    using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
     virtual UNormalizationCheckResult getQuickCheck(UChar32 c) const {
         return impl.getCompQuickCheck(impl.getNorm16(c));
     }
@@ -320,7 +320,7 @@
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.makeFCD(src, limit, &buffer, errorCode);
     }
-    using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+//    using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        ReorderingBuffer &buffer, UErrorCode &errorCode) const {
@@ -330,7 +330,7 @@
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &errorCode) const {
         return impl.makeFCD(src, limit, NULL, errorCode);
     }
-    using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+//    using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
     virtual UBool hasBoundaryBefore(UChar32 c) const { return impl.hasFCDBoundaryBefore(c); }
     virtual UBool hasBoundaryAfter(UChar32 c) const { return impl.hasFCDBoundaryAfter(c); }
     virtual UBool isInert(UChar32 c) const { return impl.isFCDInert(c); }
diff -urN icu/source/i18n/currfmt.h icu-haiku/source/i18n/currfmt.h
--- icu/source/i18n/currfmt.h	2010-04-28 15:27:08.035127296 +0000
+++ icu-haiku/source/i18n/currfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -63,7 +63,7 @@
     virtual Format* clone() const;
 
 
-    using MeasureFormat::format;
+    // using MeasureFormat::format;
 
     /**
      * Override Format API.
diff -urN icu/source/i18n/digitlst.cpp icu-haiku/source/i18n/digitlst.cpp
--- icu/source/i18n/digitlst.cpp	2010-04-28 15:27:10.052953088 +0000
+++ icu-haiku/source/i18n/digitlst.cpp	2010-07-14 15:41:18.000000000 +0000
@@ -36,7 +36,7 @@
 #include <limits.h>
 #include <string.h>
 #include <stdio.h>
-#include <limits>
+// #include <limits>
 
 // ***************************************************************************
 // class DigitList
@@ -399,11 +399,13 @@
             nonConstThis->fDouble /= -1;
         }
     } else if (isInfinite()) {
+		/*
         if (std::numeric_limits<double>::has_infinity) {
             nonConstThis->fDouble = std::numeric_limits<double>::infinity();
         } else {
             nonConstThis->fDouble = std::numeric_limits<double>::max();
-        }
+        }*/
+        nonConstThis->fDouble = DBL_MAX;
         if (!isPositive()) {
             nonConstThis->fDouble = -fDouble;
         } 
diff -urN icu/source/i18n/reldtfmt.h icu-haiku/source/i18n/reldtfmt.h
--- icu/source/i18n/reldtfmt.h	2010-04-28 15:27:10.059768832 +0000
+++ icu-haiku/source/i18n/reldtfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -78,7 +78,7 @@
     virtual UBool operator==(const Format& other) const;
 
 
-    using DateFormat::format;
+    // using DateFormat::format;
 
     /**
      * Format a date or time, which is the standard millis since 24:00 GMT, Jan
diff -urN icu/source/i18n/unicode/choicfmt.h icu-haiku/source/i18n/unicode/choicfmt.h
--- icu/source/i18n/unicode/choicfmt.h	2010-04-28 15:27:04.047710208 +0000
+++ icu-haiku/source/i18n/unicode/choicfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -441,7 +441,7 @@
     virtual const UnicodeString* getFormats(int32_t& count) const;
 
 
-    using NumberFormat::format;
+    // using NumberFormat::format;
 
     /**
      * Format a double or long number using this object's choices.
diff -urN icu/source/i18n/unicode/datefmt.h icu-haiku/source/i18n/unicode/datefmt.h
--- icu/source/i18n/unicode/datefmt.h	2010-04-28 15:27:04.046923776 +0000
+++ icu-haiku/source/i18n/unicode/datefmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -212,7 +212,7 @@
     virtual UBool operator==(const Format&) const;
 
 
-    using Format::format;
+    // using Format::format;
 
     /**
      * Format an object to produce a string. This method handles Formattable
diff -urN icu/source/i18n/unicode/decimfmt.h icu-haiku/source/i18n/unicode/decimfmt.h
--- icu/source/i18n/unicode/decimfmt.h	2010-04-28 15:27:04.042205184 +0000
+++ icu-haiku/source/i18n/unicode/decimfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -824,7 +824,7 @@
     virtual UBool operator==(const Format& other) const;
 
 
-    using NumberFormat::format;
+    // using NumberFormat::format;
 
     /**
      * Format a double or long number using base-10 representation.
diff -urN icu/source/i18n/unicode/dtitvfmt.h icu-haiku/source/i18n/unicode/dtitvfmt.h
--- icu/source/i18n/unicode/dtitvfmt.h	2010-04-28 15:27:04.046661632 +0000
+++ icu-haiku/source/i18n/unicode/dtitvfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -363,7 +363,7 @@
     UBool operator!=(const Format& other) const;
 
 
-    using Format::format;
+    // using Format::format;
 
     /**
      * Format an object to produce a string. This method handles Formattable
diff -urN icu/source/i18n/unicode/msgfmt.h icu-haiku/source/i18n/unicode/msgfmt.h
--- icu/source/i18n/unicode/msgfmt.h	2010-04-28 15:27:04.043515904 +0000
+++ icu-haiku/source/i18n/unicode/msgfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -584,7 +584,7 @@
     virtual const Format** getFormats(int32_t& count) const;
 
 
-    using Format::format;
+    // using Format::format;
 
     /**
      * Formats the given array of arguments into a user-readable string.
diff -urN icu/source/i18n/unicode/numfmt.h icu-haiku/source/i18n/unicode/numfmt.h
--- icu/source/i18n/unicode/numfmt.h	2010-04-28 15:27:04.047185920 +0000
+++ icu-haiku/source/i18n/unicode/numfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -235,7 +235,7 @@
     virtual UBool operator==(const Format& other) const;
 
 
-    using Format::format;
+    // using Format::format;
 
     /**
      * Format an object to produce a string.  This method handles
diff -urN icu/source/i18n/unicode/plurfmt.h icu-haiku/source/i18n/unicode/plurfmt.h
--- icu/source/i18n/unicode/plurfmt.h	2010-04-28 15:27:04.041943040 +0000
+++ icu-haiku/source/i18n/unicode/plurfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -308,7 +308,7 @@
     void applyPattern(const UnicodeString& pattern, UErrorCode& status);
 
 
-    using Format::format;
+    // using Format::format;
 
     /**
      * Formats a plural message for a given number.
diff -urN icu/source/i18n/unicode/rbnf.h icu-haiku/source/i18n/unicode/rbnf.h
--- icu/source/i18n/unicode/rbnf.h	2010-04-28 15:27:04.050069504 +0000
+++ icu-haiku/source/i18n/unicode/rbnf.h	2010-07-14 15:41:18.000000000 +0000
@@ -722,7 +722,7 @@
                           const Locale& locale = Locale::getDefault());
 
 
-  using NumberFormat::format;
+  // using NumberFormat::format;
 
   /**
    * Formats the specified 32-bit number using the default ruleset.
diff -urN icu/source/i18n/unicode/selfmt.h icu-haiku/source/i18n/unicode/selfmt.h
--- icu/source/i18n/unicode/selfmt.h	2010-04-28 15:27:04.049807360 +0000
+++ icu-haiku/source/i18n/unicode/selfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -220,7 +220,7 @@
     void applyPattern(const UnicodeString& pattern, UErrorCode& status);
 
 
-    using Format::format;
+    // using Format::format;
 
     /**
      * Selects the phrase for  the given keyword
diff -urN icu/source/i18n/unicode/smpdtfmt.h icu-haiku/source/i18n/unicode/smpdtfmt.h
--- icu/source/i18n/unicode/smpdtfmt.h	2010-04-28 15:27:04.044564480 +0000
+++ icu-haiku/source/i18n/unicode/smpdtfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -368,7 +368,7 @@
     virtual UBool operator==(const Format& other) const;
 
 
-    using DateFormat::format;
+    // using DateFormat::format;
 
     /**
      * Format a date or time, which is the standard millis since 24:00 GMT, Jan
@@ -1021,7 +1021,7 @@
     /**
      * Get the numbering system to be used for a particular field.
      */
-    using DateFormat::getNumberFormat;    // Do not hide visibility of base class function
+    // using DateFormat::getNumberFormat;    // Do not hide visibility of base class function
     NumberFormat * getNumberFormat(UDateFormatField index) const;
 
     /**
diff -urN icu/source/i18n/unicode/tmutfmt.h icu-haiku/source/i18n/unicode/tmutfmt.h
--- icu/source/i18n/unicode/tmutfmt.h	2010-04-28 15:27:04.047448064 +0000
+++ icu-haiku/source/i18n/unicode/tmutfmt.h	2010-07-14 15:41:18.000000000 +0000
@@ -164,7 +164,7 @@
     void setNumberFormat(const NumberFormat& format, UErrorCode& status);
 
 
-    using MeasureFormat::format;
+    // using MeasureFormat::format;
 
     /**
      * Format a TimeUnitAmount.
diff -urN icu/source/i18n/uspoof_conf.cpp icu-haiku/source/i18n/uspoof_conf.cpp
--- icu/source/i18n/uspoof_conf.cpp	2010-04-28 15:27:08.060555264 +0000
+++ icu-haiku/source/i18n/uspoof_conf.cpp	2010-07-14 15:41:18.000000000 +0000
@@ -106,8 +106,8 @@
 // Conforms to the type signature for a USortComparator in uvector.h
 
 static int8_t U_CALLCONV SPUStringCompare(UHashTok left, UHashTok right) {
-    const SPUString *sL = static_cast<const SPUString *>(left.pointer);
-    const SPUString *sR = static_cast<const SPUString *>(right.pointer);
+    const SPUString *sL = reinterpret_cast<const SPUString *>(left.pointer);
+    const SPUString *sR = reinterpret_cast<const SPUString *>(right.pointer);
     int32_t lenL = sL->fStr->length();
     int32_t lenR = sR->fStr->length();
     if (lenL < lenR) {
diff -urN icu/source/io/unicode/ustream.h icu-haiku/source/io/unicode/ustream.h
--- icu/source/io/unicode/ustream.h	2010-04-28 15:27:52.022544384 +0000
+++ icu-haiku/source/io/unicode/ustream.h	2010-07-15 05:27:14.671350784 +0000
@@ -27,8 +27,7 @@
  */
 
 #if U_IOSTREAM_SOURCE >= 199711
-#include <istream>
-#include <ostream>
+#include <iostream>
 
 U_NAMESPACE_BEGIN
 
diff -urN icu/source/tools/gennorm2/n2builder.cpp icu-haiku/source/tools/gennorm2/n2builder.cpp
--- icu/source/tools/gennorm2/n2builder.cpp	2010-04-28 15:27:42.064225280 +0000
+++ icu-haiku/source/tools/gennorm2/n2builder.cpp	2010-07-14 15:50:05.000000000 +0000
@@ -674,7 +674,7 @@
     }
     int32_t length=p->compositions->size();
     for(int32_t i=0; i<length; ++i) {
-        CompositionPair &pair=p->compositions->at(i);
+        CompositionPair &pair=(*p->compositions)[i];
         // 22 bits for the composite character and whether it combines forward.
         UChar32 compositeAndFwd=pair.composite<<1;
         if(getNormRef(pair.composite).compositions!=NULL) {
diff -urN icu/source/tools/pkgdata/pkgdata.cpp icu-haiku/source/tools/pkgdata/pkgdata.cpp
--- icu/source/tools/pkgdata/pkgdata.cpp	2010-04-28 15:27:46.021233664 +0000
+++ icu-haiku/source/tools/pkgdata/pkgdata.cpp	2010-07-14 15:52:11.000000000 +0000
@@ -472,7 +472,7 @@
 }
 
 static int runCommand(const char* command, UBool specialHandling) {
-    char cmd[SMALL_BUFFER_MAX_SIZE];
+    char cmd[64000];
 
     if (!specialHandling) {
 #ifdef USING_CYGWIN
@@ -1154,7 +1154,7 @@
     DATA_PREFIX_LENGTH
 };
 
-const static char DATA_PREFIX[DATA_PREFIX_LENGTH][10] = {
+static const char DATA_PREFIX[DATA_PREFIX_LENGTH][10] = {
         "brkitr",
         "coll",
         "curr",
