From 2f8bd964d8cb7ecedd52c3b9ff90ea5f922d7573 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Mon, 29 Sep 2014 11:19:28 +0200
Subject: gcc2 fixes.


diff --git a/source/acinclude.m4 b/source/acinclude.m4
index 5b2c844..0684cbf 100644
--- a/source/acinclude.m4
+++ b/source/acinclude.m4
@@ -460,6 +460,9 @@ AC_DEFUN([AC_CHECK_STRICT_COMPILE],
             *-*-solaris*)
                 # Don't use -std=c99 option on Solaris/GCC
                 ;;
+            *-*-haiku*)
+                CFLAGS="$CFLAGS -std=c9x"
+                ;;
             *)
                 # Do not use -ansi. It limits us to C90, and it breaks some platforms.
                 # We use -std=c99 to disable the gnu99 defaults and its associated warnings
diff --git a/source/common/normalizer2.cpp b/source/common/normalizer2.cpp
index ed82f2c..e5e1124 100644
--- a/source/common/normalizer2.cpp
+++ b/source/common/normalizer2.cpp
@@ -290,7 +290,9 @@ private:
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.decompose(src, limit, &buffer, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+#endif
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        UnicodeString &safeMiddle,
@@ -301,7 +303,9 @@ private:
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &errorCode) const {
         return impl.decompose(src, limit, NULL, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+#endif
     virtual UNormalizationCheckResult getQuickCheck(UChar32 c) const {
         return impl.isDecompYes(impl.getNorm16(c)) ? UNORM_YES : UNORM_NO;
     }
@@ -324,7 +328,9 @@ private:
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.compose(src, limit, onlyContiguous, TRUE, buffer, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+#endif
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        UnicodeString &safeMiddle,
@@ -367,7 +373,9 @@ private:
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &) const {
         return impl.composeQuickCheck(src, limit, onlyContiguous, NULL);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+#endif
     virtual UNormalizationCheckResult getQuickCheck(UChar32 c) const {
         return impl.getCompQuickCheck(impl.getNorm16(c));
     }
@@ -397,7 +405,9 @@ private:
               ReorderingBuffer &buffer, UErrorCode &errorCode) const {
         impl.makeFCD(src, limit, &buffer, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::normalize;  // Avoid warning about hiding base class function.
+#endif
     virtual void
     normalizeAndAppend(const UChar *src, const UChar *limit, UBool doNormalize,
                        UnicodeString &safeMiddle,
@@ -408,7 +418,9 @@ private:
     spanQuickCheckYes(const UChar *src, const UChar *limit, UErrorCode &errorCode) const {
         return impl.makeFCD(src, limit, NULL, errorCode);
     }
+#if __GNUC__ != 2
     using Normalizer2WithImpl::spanQuickCheckYes;  // Avoid warning about hiding base class function.
+#endif
     virtual UBool hasBoundaryBefore(UChar32 c) const { return impl.hasFCDBoundaryBefore(c); }
     virtual UBool hasBoundaryAfter(UChar32 c) const { return impl.hasFCDBoundaryAfter(c); }
     virtual UBool isInert(UChar32 c) const { return impl.isFCDInert(c); }
diff --git a/source/common/sharedobject.h b/source/common/sharedobject.h
index 671bab1..f72280c 100644
--- a/source/common/sharedobject.h
+++ b/source/common/sharedobject.h
@@ -30,7 +30,7 @@ public:
     SharedObject() : refCount(0) {}
 
     /** Initializes refCount to 0. */
-    SharedObject(const SharedObject &/*other*/) : refCount(0) {}
+    SharedObject(const SharedObject &/*other*/) : UObject(), refCount(0) {}
     virtual ~SharedObject();
 
     /**
diff --git a/source/common/unicode/bytestrie.h b/source/common/unicode/bytestrie.h
index 9c77827..367a0ae 100644
--- a/source/common/unicode/bytestrie.h
+++ b/source/common/unicode/bytestrie.h
@@ -338,6 +338,9 @@ public:
         // but the code looks more confusing that way.)
         UVector32 *stack_;
     };
+#if __GNUC__ == 2
+	friend class Iterator;
+#endif
 
 private:
     friend class BytesTrieBuilder;
diff --git a/source/common/unicode/bytestriebuilder.h b/source/common/unicode/bytestriebuilder.h
index 6bbd8a2..bb016a7 100644
--- a/source/common/unicode/bytestriebuilder.h
+++ b/source/common/unicode/bytestriebuilder.h
@@ -153,6 +153,9 @@ private:
     private:
         const char *s;
     };
+#if __GNUC__ == 2
+	friend class BTLinearMatchNode;
+#endif
 #endif  /* U_HIDE_INTERNAL_API */
 
     virtual Node *createLinearMatchNode(int32_t i, int32_t byteIndex, int32_t length,
diff --git a/source/common/unicode/platform.h b/source/common/unicode/platform.h
index 1b2ab30..1717348 100644
--- a/source/common/unicode/platform.h
+++ b/source/common/unicode/platform.h
@@ -702,7 +702,7 @@
     /* Use the predefined value. */
 #elif defined(U_STATIC_IMPLEMENTATION)
 #   define U_EXPORT
-#elif defined(__GNUC__)
+#elif defined(__GNUC__) && __GNUC__ > 2
 #   define U_EXPORT __attribute__((visibility("default")))
 #elif (defined(__SUNPRO_CC) && __SUNPRO_CC >= 0x550) \
    || (defined(__SUNPRO_C) && __SUNPRO_C >= 0x550) 
diff --git a/source/common/unicode/stringtriebuilder.h b/source/common/unicode/stringtriebuilder.h
index 04447e5..b0ad961 100644
--- a/source/common/unicode/stringtriebuilder.h
+++ b/source/common/unicode/stringtriebuilder.h
@@ -258,6 +258,9 @@ protected:
     protected:
         int32_t value;
     };
+#if __GNUC__ == 2
+	friend class FinalValueNode;
+#endif
 
     /**
      * @internal 
@@ -289,6 +292,9 @@ protected:
     protected:
         Node *next;
     };
+#if __GNUC__ == 2
+	friend class IntermediateValueNode;
+#endif
 
     /**
      * @internal 
@@ -346,6 +352,9 @@ protected:
         int32_t values[kMaxBranchLinearSubNodeLength];
         UChar units[kMaxBranchLinearSubNodeLength];
     };
+#if __GNUC__ == 2
+	friend class ListBranchNode;
+#endif
 
     /**
      * @internal 
@@ -364,6 +373,9 @@ protected:
         Node *lessThan;
         Node *greaterOrEqual;
     };
+#if __GNUC__ == 2
+	friend class SplitBranchNode;
+#endif
 
     // Branch head node, for writing the actual node lead unit.
     /** @internal */
@@ -379,6 +391,9 @@ protected:
         int32_t length;
         Node *next;  // A branch sub-node.
     };
+#if __GNUC__ == 2
+	friend class BranchHeadNode;
+#endif
 #endif  /* U_HIDE_INTERNAL_API */
 
     /** @internal */
diff --git a/source/common/unicode/ucharstrie.h b/source/common/unicode/ucharstrie.h
index 0575a97..ec54589 100644
--- a/source/common/unicode/ucharstrie.h
+++ b/source/common/unicode/ucharstrie.h
@@ -356,9 +356,12 @@ public:
         // but the code looks more confusing that way.)
         UVector32 *stack_;
     };
+#if __GNUC__ == 2
+	friend class Iterator;
+#endif
 
-private:
     friend class UCharsTrieBuilder;
+private:
 
     /**
      * Constructs a UCharsTrie reader instance.
diff --git a/source/common/unicode/ucharstriebuilder.h b/source/common/unicode/ucharstriebuilder.h
index ccfb86e..8686a27 100644
--- a/source/common/unicode/ucharstriebuilder.h
+++ b/source/common/unicode/ucharstriebuilder.h
@@ -157,6 +157,9 @@ private:
     private:
         const UChar *s;
     };
+#if __GNUC__ == 2
+    friend class UCTLinearMatchNode;
+#endif
 #endif
 
     virtual Node *createLinearMatchNode(int32_t i, int32_t unitIndex, int32_t length,
diff --git a/source/config/mh-haiku b/source/config/mh-haiku
index ccf956e..55a3ed2 100644
--- a/source/config/mh-haiku
+++ b/source/config/mh-haiku
@@ -18,7 +18,7 @@ LIBCPPFLAGS =
 THREADSCPPFLAGS =
 
 #
-CPPFLAGS += -D__STDC_ISO_10646__ -DU_CHARSET_IS_UTF8=1
+CPPFLAGS += -DU_CHARSET_IS_UTF8=1
 
 ## Compiler switch to embed a runtime search path
 LD_RPATH=
diff --git a/source/configure b/source/configure
index dd98833..24e3455 100755
--- a/source/configure
+++ b/source/configure
@@ -4086,6 +4086,9 @@ $as_echo "$ac_use_strict_options" >&6; }
             *-*-solaris*)
                 # Don't use -std=c99 option on Solaris/GCC
                 ;;
+            *-*-haiku*)
+                CFLAGS="$CFLAGS -std=c9x"
+                ;;
             *)
                 # Do not use -ansi. It limits us to C90, and it breaks some platforms.
                 # We use -std=c99 to disable the gnu99 defaults and its associated warnings
diff --git a/source/i18n/alphaindex.cpp b/source/i18n/alphaindex.cpp
index 19fc92f..68c2861 100644
--- a/source/i18n/alphaindex.cpp
+++ b/source/i18n/alphaindex.cpp
@@ -956,8 +956,8 @@ static int32_t U_CALLCONV
 collatorComparator(const void *context, const void *left, const void *right) {
     const UElement *leftElement = static_cast<const UElement *>(left);
     const UElement *rightElement = static_cast<const UElement *>(right);
-    const UnicodeString *leftString  = static_cast<const UnicodeString *>(leftElement->pointer);
-    const UnicodeString *rightString = static_cast<const UnicodeString *>(rightElement->pointer);
+    const UnicodeString *leftString  = (const UnicodeString *)(leftElement->pointer);
+    const UnicodeString *rightString = (const UnicodeString *)(rightElement->pointer);
 
     if (leftString == rightString) {
         // Catches case where both are NULL
@@ -981,8 +981,8 @@ static int32_t U_CALLCONV
 recordCompareFn(const void *context, const void *left, const void *right) {
     const UElement *leftElement = static_cast<const UElement *>(left);
     const UElement *rightElement = static_cast<const UElement *>(right);
-    const AlphabeticIndex::Record *leftRec  = static_cast<const AlphabeticIndex::Record *>(leftElement->pointer);
-    const AlphabeticIndex::Record *rightRec = static_cast<const AlphabeticIndex::Record *>(rightElement->pointer);
+    const AlphabeticIndex::Record *leftRec  = (const AlphabeticIndex::Record *)(leftElement->pointer);
+    const AlphabeticIndex::Record *rightRec = (const AlphabeticIndex::Record *)(rightElement->pointer);
     const Collator *col = static_cast<const Collator *>(context);
     UErrorCode errorCode = U_ZERO_ERROR;
     return col->compare(leftRec->name_, rightRec->name_, errorCode);
diff --git a/source/i18n/collationdatabuilder.cpp b/source/i18n/collationdatabuilder.cpp
index 8d275b7..a17f68f 100644
--- a/source/i18n/collationdatabuilder.cpp
+++ b/source/i18n/collationdatabuilder.cpp
@@ -794,7 +794,7 @@ CollationDataBuilder::copyFromBaseCE32(UChar32 c, uint32_t ce32, UBool withConte
         if(!withContext) {
             return copyFromBaseCE32(c, ce32, FALSE, errorCode);
         }
-        ConditionalCE32 head(UnicodeString(), 0);
+        ConditionalCE32 head = ConditionalCE32(UnicodeString(), 0);
         UnicodeString context((UChar)0);
         int32_t index;
         if(Collation::isContractionCE32(ce32)) {
@@ -830,7 +830,7 @@ CollationDataBuilder::copyFromBaseCE32(UChar32 c, uint32_t ce32, UBool withConte
             ce32 = CollationData::readCE32(p);  // Default if no suffix match.
             return copyFromBaseCE32(c, ce32, FALSE, errorCode);
         }
-        ConditionalCE32 head(UnicodeString(), 0);
+        ConditionalCE32 head = ConditionalCE32(UnicodeString(), 0);
         UnicodeString context((UChar)0);
         copyContractionsFromBaseCE32(context, c, ce32, &head, errorCode);
         ce32 = makeBuilderContextCE32(head.next);
diff --git a/source/i18n/currfmt.h b/source/i18n/currfmt.h
index b3f23e5..7763215 100644
--- a/source/i18n/currfmt.h
+++ b/source/i18n/currfmt.h
@@ -58,7 +58,9 @@ class CurrencyFormat : public MeasureFormat {
     virtual Format* clone() const;
 
 
+#if __GNUC__ != 2
     using MeasureFormat::format;
+#endif
 
     /**
      * Override Format API.
diff --git a/source/i18n/digitlst.cpp b/source/i18n/digitlst.cpp
index b0e6010..d10a976 100644
--- a/source/i18n/digitlst.cpp
+++ b/source/i18n/digitlst.cpp
@@ -38,7 +38,9 @@
 #include <limits.h>
 #include <string.h>
 #include <stdio.h>
+#if __GNUC__ != 2
 #include <limits>
+#endif
 
 // ***************************************************************************
 // class DigitList
@@ -437,11 +439,15 @@ DigitList::getDouble() const
             tDouble /= -1;
         }
     } else if (isInfinite()) {
+#if __GNUC__ == 2
+        tDouble = DBL_MAX;
+#else
         if (std::numeric_limits<double>::has_infinity) {
             tDouble = std::numeric_limits<double>::infinity();
         } else {
             tDouble = std::numeric_limits<double>::max();
         }
+#endif
         if (!isPositive()) {
             tDouble = -tDouble; //this was incorrectly "-fDouble" originally.
         } 
diff --git a/source/i18n/digitlst.h b/source/i18n/digitlst.h
index 7e98d2b..2698367 100644
--- a/source/i18n/digitlst.h
+++ b/source/i18n/digitlst.h
@@ -413,7 +413,7 @@ private:
 
  public:
 
-#if U_OVERRIDE_CXX_ALLOCATION
+#if U_OVERRIDE_CXX_ALLOCATION && __GNUC__ != 2
     using UMemory::operator new;
     using UMemory::operator delete;
 #else
diff --git a/source/i18n/reldtfmt.h b/source/i18n/reldtfmt.h
index 67539e0..2227096 100644
--- a/source/i18n/reldtfmt.h
+++ b/source/i18n/reldtfmt.h
@@ -81,7 +81,9 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ != 2
     using DateFormat::format;
+#endif
 
     /**
      * Format a date or time, which is the standard millis since 24:00 GMT, Jan
diff --git a/source/i18n/sortkey.cpp b/source/i18n/sortkey.cpp
index baf3254..838ea82 100644
--- a/source/i18n/sortkey.cpp
+++ b/source/i18n/sortkey.cpp
@@ -172,7 +172,7 @@ Collator::EComparisonResult
 CollationKey::compareTo(const CollationKey& target) const
 {
     UErrorCode errorCode = U_ZERO_ERROR;
-    return static_cast<Collator::EComparisonResult>(compareTo(target, errorCode));
+    return (Collator::EComparisonResult)(compareTo(target, errorCode));
 }
 
 // Bitwise comparison for the collation keys.
diff --git a/source/i18n/unicode/choicfmt.h b/source/i18n/unicode/choicfmt.h
index cfd5206..d2b7f66 100644
--- a/source/i18n/unicode/choicfmt.h
+++ b/source/i18n/unicode/choicfmt.h
@@ -355,7 +355,22 @@ public:
     virtual const UnicodeString* getFormats(int32_t& count) const;
 
 
+#if __GNUC__ == 2
+    virtual UnicodeString& format (double number,
+                                   icu::UnicodeString& appendTo) const {
+        return NumberFormat::format(number, appendTo);
+    }
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPosition& p, UErrorCode& e) const {
+		return NumberFormat::format(f, s, p, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		UErrorCode& e) const {
+		return NumberFormat::format(f, s, e);
+	}
+#else
     using NumberFormat::format;
+#endif
 
     /**
      * Formats a double number using this object's choices.
@@ -421,7 +436,13 @@ public:
                                   FieldPosition& pos,
                                   UErrorCode& success) const;
 
+#if __GNUC__ == 2
+	void parse(UnicodeString& s, Formattable& f, UErrorCode& e) const {
+		NumberFormat::parse(s, f, e);
+	}
+#else
    using NumberFormat::parse;
+#endif
 
    /**
     * Looks for the longest match of any message string on the input text and,
diff --git a/source/i18n/unicode/compactdecimalformat.h b/source/i18n/unicode/compactdecimalformat.h
index bd8fdba..be2e580 100644
--- a/source/i18n/unicode/compactdecimalformat.h
+++ b/source/i18n/unicode/compactdecimalformat.h
@@ -104,7 +104,13 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(double n, UnicodeString& s) const {
+		return DecimalFormat::format(n, s);
+	}
+#else
     using DecimalFormat::format;
+#endif
 
     /**
      * Format a double or long number using base-10 representation.
diff --git a/source/i18n/unicode/datefmt.h b/source/i18n/unicode/datefmt.h
index ce967a5..59d735d 100644
--- a/source/i18n/unicode/datefmt.h
+++ b/source/i18n/unicode/datefmt.h
@@ -221,7 +221,13 @@ public:
     virtual UBool operator==(const Format&) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e) const {
+		return Format::format(f, s, e);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Format an object to produce a string. This method handles Formattable
diff --git a/source/i18n/unicode/decimfmt.h b/source/i18n/unicode/decimfmt.h
index 3701cb6..2c26449 100644
--- a/source/i18n/unicode/decimfmt.h
+++ b/source/i18n/unicode/decimfmt.h
@@ -919,7 +919,35 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ == 2
+    virtual UnicodeString& format (double number,
+                                   icu::UnicodeString& appendTo) const {
+        return NumberFormat::format(number, appendTo);
+    }
+
+    virtual UnicodeString& format (double number,
+                                   icu::UnicodeString& appendTo,
+                                   UErrorCode& status) const {
+        return NumberFormat::format(number, appendTo, status);
+    }
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+			FieldPositionIterator* i, UErrorCode& e) const {
+		return NumberFormat::format(f, s, i, e);
+	}
+	
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+			FieldPosition& p, UErrorCode& e) const {
+		return NumberFormat::format(f, s, p, e);
+	}
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e)
+		const {
+		return NumberFormat::format(f, s, e);
+	}
+#else
     using NumberFormat::format;
+#endif
 
     /**
      * Format a double or long number using base-10 representation.
@@ -1132,7 +1160,15 @@ public:
                                   FieldPosition& pos,
                                   UErrorCode& status) const;
 
+#if __GNUC__ == 2
+    void parse(const UnicodeString& text,
+                       Formattable& result,
+                       UErrorCode& status) const {
+        NumberFormat::parse(text, result, status);
+    }
+#else
    using NumberFormat::parse;
+#endif
 
    /**
     * Parse the given string using this object's choices. The method
diff --git a/source/i18n/unicode/dtitvfmt.h b/source/i18n/unicode/dtitvfmt.h
index fb27eec..07ae7cd 100644
--- a/source/i18n/unicode/dtitvfmt.h
+++ b/source/i18n/unicode/dtitvfmt.h
@@ -373,7 +373,9 @@ public:
     UBool operator!=(const Format& other) const;
 
 
+#if __GNUC__ != 2
     using Format::format;
+#endif
 
     /**
      * Format an object to produce a string. This method handles Formattable
diff --git a/source/i18n/unicode/measfmt.h b/source/i18n/unicode/measfmt.h
index 2a93b6e..c4fd947 100644
--- a/source/i18n/unicode/measfmt.h
+++ b/source/i18n/unicode/measfmt.h
@@ -91,8 +91,25 @@ class DateFormat;
  */
 class U_I18N_API MeasureFormat : public Format {
  public:
+#if __GNUC__ == 2
+	void parseObject (const UnicodeString& s, Formattable& f, UErrorCode& e) 
+		const {
+		Format::parseObject(s, f, e);
+	}
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return Format::format(f, s, i, e);
+	}
+
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		UErrorCode& e) const {
+		return Format::format(f, s, e);
+	}
+#else
     using Format::parseObject;
     using Format::format;
+#endif
 
 #ifndef U_HIDE_DRAFT_API
     /**
diff --git a/source/i18n/unicode/msgfmt.h b/source/i18n/unicode/msgfmt.h
index 5de91e4..8f9f995 100644
--- a/source/i18n/unicode/msgfmt.h
+++ b/source/i18n/unicode/msgfmt.h
@@ -622,7 +622,17 @@ public:
     virtual const Format** getFormats(int32_t& count) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return Format::format(f, s, i, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e) {
+		return Format::format(f, s, e);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Formats the given array of arguments into a user-readable string.
@@ -884,6 +894,9 @@ private:
         PluralRules* rules;
         UPluralType type;
     };
+#if __GNUC__ == 2
+	friend class PluralSelectorProvider;
+#endif
 
     /**
      * A MessageFormat formats an array of arguments.  Each argument
diff --git a/source/i18n/unicode/numfmt.h b/source/i18n/unicode/numfmt.h
index c252af0..fdbab5a 100644
--- a/source/i18n/unicode/numfmt.h
+++ b/source/i18n/unicode/numfmt.h
@@ -235,7 +235,15 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ == 2
+    virtual UnicodeString& format (const Formattable& obj,
+                                   UnicodeString& appendTo,
+                                   UErrorCode & status) const {
+        return Format::format(obj, appendTo, status);
+    }
+#else
     using Format::format;
+#endif
 
     /**
      * Format an object to produce a string.  This method handles
diff --git a/source/i18n/unicode/plurfmt.h b/source/i18n/unicode/plurfmt.h
index bc5aff0..f113c51 100644
--- a/source/i18n/unicode/plurfmt.h
+++ b/source/i18n/unicode/plurfmt.h
@@ -312,7 +312,14 @@ public:
     void applyPattern(const UnicodeString& pattern, UErrorCode& status);
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return Format::format(f, s, i, e);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Formats a plural message for a given number.
diff --git a/source/i18n/unicode/rbnf.h b/source/i18n/unicode/rbnf.h
index 5e4f3b3..cedf2bc 100644
--- a/source/i18n/unicode/rbnf.h
+++ b/source/i18n/unicode/rbnf.h
@@ -719,7 +719,23 @@ public:
                           const Locale& locale = Locale::getDefault());
 
 
+#if __GNUC__ == 2
+  UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e)
+	const {
+		return NumberFormat::format(f, s, e);
+  }
+
+  UnicodeString& format(double n, UnicodeString& s) const {
+	return NumberFormat::format(n, s);
+  }
+
+  UnicodeString& format(int64_t n, UnicodeString& s, FieldPosition& p,
+	UErrorCode& e) const {
+	return NumberFormat::format(n, s, p, e);
+  }
+#else
   using NumberFormat::format;
+#endif
 
   /**
    * Formats the specified 32-bit number using the default ruleset.
@@ -805,7 +821,13 @@ public:
                                 FieldPosition& pos,
                                 UErrorCode& status) const;
 
+#if __GNUC__ == 2
+  void parse(const UnicodeString& s, Formattable& f, UErrorCode& e) const {
+	return NumberFormat::parse(s, f, e);
+  }
+#else
   using NumberFormat::parse;
+#endif
 
   /**
    * Parses the specfied string, beginning at the specified position, according
diff --git a/source/i18n/unicode/selfmt.h b/source/i18n/unicode/selfmt.h
index 635144b..fbc89f6 100755
--- a/source/i18n/unicode/selfmt.h
+++ b/source/i18n/unicode/selfmt.h
@@ -219,7 +219,9 @@ public:
     void applyPattern(const UnicodeString& pattern, UErrorCode& status);
 
 
+#if __GNUC__ != 2
     using Format::format;
+#endif
 
     /**
      * Selects the phrase for  the given keyword
diff --git a/source/i18n/unicode/smpdtfmt.h b/source/i18n/unicode/smpdtfmt.h
index 1e54dc3..474abc0 100644
--- a/source/i18n/unicode/smpdtfmt.h
+++ b/source/i18n/unicode/smpdtfmt.h
@@ -860,7 +860,27 @@ public:
     virtual UBool operator==(const Format& other) const;
 
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& f, UnicodeString& s,
+		FieldPositionIterator* i, UErrorCode& e) const {
+		return DateFormat::format(f, s, i, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s, FieldPosition& p,
+		UErrorCode& e) const {
+		return DateFormat::format(f, s, p, e);
+	}
+	UnicodeString& format(const Formattable& f, UnicodeString& s, UErrorCode& e) const {
+		return Format::format(f, s, e);
+	}
+	UnicodeString& format(const UDate& d, UnicodeString& s, FieldPosition& f) const {
+		return DateFormat::format(d, s, f);
+	}
+	UnicodeString& format(const UDate& d, UnicodeString& s) const {
+		return DateFormat::format(d, s);
+	}
+#else
     using DateFormat::format;
+#endif
 
     /**
      * Format a date or time, which is the standard millis since 24:00 GMT, Jan
@@ -905,7 +925,16 @@ public:
                                     FieldPositionIterator* posIter,
                                     UErrorCode& status) const;
 
+#if __GNUC__ == 2
+	UDate parse(const UnicodeString& s, UErrorCode& e) const {
+		return DateFormat::parse(s, e);
+	}
+	UDate parse (const UnicodeString& s, ParsePosition& p) const {
+		return DateFormat::parse(s, p);
+	}
+#else
     using DateFormat::parse;
+#endif
 
     /**
      * Parse a date/time string beginning at the given parse position. For
diff --git a/source/i18n/unicode/tblcoll.h b/source/i18n/unicode/tblcoll.h
index 00ab863..9426c85 100644
--- a/source/i18n/unicode/tblcoll.h
+++ b/source/i18n/unicode/tblcoll.h
@@ -258,7 +258,22 @@ public:
                                          const CharacterIterator& source) const;
 
     // Make deprecated versions of Collator::compare() visible.
+#if __GNUC__ == 2
+	EComparisonResult compare(const UChar* source, int sourceLength,
+		const UChar* target, int targetLength) const {
+		return Collator::compare(source, sourceLength, target, targetLength);
+	}
+	EComparisonResult compare(const UnicodeString& s1, const UnicodeString& s2,
+		int i) const {
+		return Collator::compare(s1, s2, i);
+	}
+	EComparisonResult compare(const UnicodeString& s1, const UnicodeString& s2)
+		const {
+		return Collator::compare(s1, s2);
+	}
+#else
     using Collator::compare;
+#endif
 
     /**
     * The comparison function compares the character data stored in two
diff --git a/source/i18n/unicode/tzfmt.h b/source/i18n/unicode/tzfmt.h
index 9551f85..91baa02 100644
--- a/source/i18n/unicode/tzfmt.h
+++ b/source/i18n/unicode/tzfmt.h
@@ -508,7 +508,14 @@ public:
      */
     UnicodeString& formatOffsetShortLocalizedGMT(int32_t offset, UnicodeString& result, UErrorCode& status) const;
 
+#if __GNUC__ == 2
+	UnicodeString& format(const Formattable& data, UnicodeString& string,
+		FieldPositionIterator* iterator, UErrorCode& error) const {
+		return Format::format(data, string, iterator, error);
+	}
+#else
     using Format::format;
+#endif
 
     /**
      * Returns the display name of the time zone at the given date for the style.
diff --git a/source/layout/LETableReference.h b/source/layout/LETableReference.h
index f7eb79b..8ea8700 100644
--- a/source/layout/LETableReference.h
+++ b/source/layout/LETableReference.h
@@ -304,7 +304,11 @@ LE_TRACE_TR("INFO: new RTAO")
 
   le_uint32 getCount() const { return fCount; }
 
+#if __GNUC__ == 2
+  const T *getAlias() const { return LETableReference::getAlias(); }
+#else
   using LETableReference::getAlias;
+#endif
 
   const T *getAlias(le_uint32 i, LEErrorCode &success) const {
     return ((const T*)(((const char*)getAlias())+getOffsetFor(i, success)));
diff --git a/source/test/intltest/apicoll.cpp b/source/test/intltest/apicoll.cpp
index 716fbd9..3879a0c 100644
--- a/source/test/intltest/apicoll.cpp
+++ b/source/test/intltest/apicoll.cpp
@@ -1977,7 +1977,22 @@ class TestCollator  : public Collator
 public:
     virtual Collator* clone(void) const;
 
+#if __GNUC__ == 2
+	EComparisonResult compare (const UnicodeString& s1, const UnicodeString& s2)
+		const {
+		return Collator::compare(s1, s2);
+	}
+	EComparisonResult compare (const UnicodeString& s1, const UnicodeString& s2,
+			int32_t i) const {
+		return Collator::compare(s1, s2, i);
+	}
+	EComparisonResult compare (const UChar* s1, int32_t l1, const UChar* s2,
+		int32_t l2) const {
+		return Collator::compare(s1, l1, s2, l2);
+	}
+#else
     using Collator::compare;
+#endif
 
     virtual UCollationResult compare(const UnicodeString& source, 
                                       const UnicodeString& target,
diff --git a/source/test/iotest/stream.cpp b/source/test/iotest/stream.cpp
index a821636..083b4ab 100644
--- a/source/test/iotest/stream.cpp
+++ b/source/test/iotest/stream.cpp
@@ -131,7 +131,7 @@ static void U_CALLCONV TestStream(void)
 #endif
     UnicodeString ustr("string");
 
-    outFormatStream << "1234567890" << setw(10) << left << ustr << " " << "0123456789";
+    outFormatStream << "1234567890" << setw(10) << ios::left << ustr << " " << "0123456789";
 
 #ifdef USE_SSTREAM
     tempStr = outFormatStream.str();
diff --git a/source/tools/toolutil/udbgutil.cpp b/source/tools/toolutil/udbgutil.cpp
index efad363..5676e6d 100644
--- a/source/tools/toolutil/udbgutil.cpp
+++ b/source/tools/toolutil/udbgutil.cpp
@@ -639,7 +639,9 @@ U_CAPI void udbg_knownIssue_close(void *ptr) {
 #include <set>
 #include <map>
 #include <string>
+#if __GNUC__ != 2
 #include <ostream>
+#endif
 #include <iostream>
 
 class KnownIssues {
-- 
1.8.3.4


From 38f27f32552e50fef69be35a5310bb0e7f39df46 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Thu, 2 Oct 2014 14:54:39 +0200
Subject: Force definition of U_DISABLE_RENAMING

We build ICU with this flag disabled, but somehow this isn't added tothe
header, and later on trying to build haiku without the flag would fail.
So we just change the default value to keep things simpler.

diff --git a/source/common/unicode/uconfig.h b/source/common/unicode/uconfig.h
index c22c211..57b8347 100644
--- a/source/common/unicode/uconfig.h
+++ b/source/common/unicode/uconfig.h
@@ -87,7 +87,7 @@
  * @internal
  */
 #ifndef U_DISABLE_RENAMING
-#define U_DISABLE_RENAMING 0
+#define U_DISABLE_RENAMING 1
 #endif
 
 /**
-- 
1.8.3.4


From f4f4e5f0cc785ca73cd1d40d5faf52e60850139c Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@gmail.com>
Date: Fri, 3 Oct 2014 11:07:01 +0200
Subject: Don't call tzset and tzname on Haiku

While they exist, they are implemented using ICU, and trying to use them
within ICU results in a deadlock.

diff --git a/source/common/putilimp.h b/source/common/putilimp.h
index beaf647..37e3e62 100644
--- a/source/common/putilimp.h
+++ b/source/common/putilimp.h
@@ -105,7 +105,7 @@ typedef size_t uintptr_t;
     /* Use the predefined value. */
 #elif U_PLATFORM_USES_ONLY_WIN32_API
 #   define U_TZSET _tzset
-#elif U_PLATFORM == U_PF_OS400
+#elif U_PLATFORM == U_PF_OS400 || defined(__HAIKU__)
    /* not defined */
 #else
 #   define U_TZSET tzset
@@ -136,7 +136,7 @@ typedef size_t uintptr_t;
     /* Use the predefined value. */
 #elif U_PLATFORM_USES_ONLY_WIN32_API
 #   define U_TZNAME _tzname
-#elif U_PLATFORM == U_PF_OS400
+#elif U_PLATFORM == U_PF_OS400 || defined(__HAIKU__)
    /* not defined */
 #else
 #   define U_TZNAME tzname
diff --git a/source/configure.ac b/source/configure.ac
index d52b1e6..a772836 100644
--- a/source/configure.ac
+++ b/source/configure.ac
@@ -788,50 +788,26 @@ else
 fi
 AC_SUBST(U_HAVE_POPEN)
 
-AC_CHECK_FUNC(tzset)
+#AC_CHECK_FUNC(tzset)
 U_HAVE_TZSET=0
-if test x$ac_cv_func_tzset = xyes
-then
-    U_TZSET=tzset
-    U_HAVE_TZSET=1
-else
-    AC_CHECK_FUNC(_tzset)
-    if test x$ac_cv_func__tzset = xyes
-    then
-        U_TZSET=_tzset
-        U_HAVE_TZSET=1
-    else
-      CONFIG_CPPFLAGS="${CONFIG_CPPFLAGS} -DU_HAVE_TZSET=0"
-    fi
-fi
+#if test x$ac_cv_func_tzset = xyes
+#then
+#    U_TZSET=tzset
+#    U_HAVE_TZSET=1
+#else
+#    AC_CHECK_FUNC(_tzset)
+#    if test x$ac_cv_func__tzset = xyes
+#    then
+#        U_TZSET=_tzset
+#        U_HAVE_TZSET=1
+#    else
+#      CONFIG_CPPFLAGS="${CONFIG_CPPFLAGS} -DU_HAVE_TZSET=0"
+#    fi
+#fi
 AC_SUBST(U_HAVE_TZSET)
 AC_SUBST(U_TZSET)
 
 U_HAVE_TZNAME=0
-AC_CACHE_CHECK(for tzname,ac_cv_var_tzname,
-[AC_LINK_IFELSE([AC_LANG_PROGRAM([[#ifndef __USE_POSIX
-#define __USE_POSIX
-#endif
-#include <stdlib.h>
-#include <time.h>
-#ifndef tzname /* For SGI.  */
-extern char *tzname[]; /* RS6000 and others reject char **tzname.  */
-#endif]], [atoi(*tzname);])],[ac_cv_var_tzname=yes],[ac_cv_var_tzname=no])])
-if test $ac_cv_var_tzname = yes; then
-  U_TZNAME=tzname
-  U_HAVE_TZNAME=1
-else
-  AC_CACHE_CHECK(for _tzname,ac_cv_var__tzname,
-  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>
-  #include <time.h>
-  extern char *_tzname[];]], [atoi(*_tzname);])],[ac_cv_var__tzname=yes],[ac_cv_var__tzname=no])])
-    if test $ac_cv_var__tzname = yes; then
-      U_TZNAME=_tzname
-      U_HAVE_TZNAME=1
-    else
-     CONFIG_CPPFLAGS="${CONFIG_CPPFLAGS} -DU_HAVE_TZNAME=0"
-    fi
-fi
 AC_SUBST(U_HAVE_TZNAME)
 AC_SUBST(U_TZNAME)
 
-- 
1.8.3.4

