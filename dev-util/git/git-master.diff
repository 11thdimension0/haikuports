diff --git a/Makefile b/Makefile
index 9d84c8d..a4ac815 100644
--- a/Makefile
+++ b/Makefile
@@ -992,7 +992,7 @@ help.o: help.c common-cmds.h GIT-CFLAGS
 		'-DGIT_INFO_PATH="$(infodir_SQ)"' $<
 
 $(BUILT_INS): git$X
-	$(QUIET_BUILT_IN)$(RM) $@ && ln git$X $@
+	$(QUIET_BUILT_IN)$(RM) $@ && ln -s git$X $@
 
 common-cmds.h: ./generate-cmdlist.sh command-list.txt
 
@@ -1234,7 +1234,7 @@ endif
 		cp '$(DESTDIR_SQ)$(bindir_SQ)/git$X' \
 			'$(DESTDIR_SQ)$(gitexecdir_SQ)/git$X'; \
 	fi
-	$(foreach p,$(BUILT_INS), $(RM) '$(DESTDIR_SQ)$(gitexecdir_SQ)/$p' && ln '$(DESTDIR_SQ)$(gitexecdir_SQ)/git$X' '$(DESTDIR_SQ)$(gitexecdir_SQ)/$p' ;)
+	$(foreach p,$(BUILT_INS), $(RM) '$(DESTDIR_SQ)$(gitexecdir_SQ)/$p' && ln -s '$(DESTDIR_SQ)$(gitexecdir_SQ)/git$X' '$(DESTDIR_SQ)$(gitexecdir_SQ)/$p' ;)
 ifneq (,$X)
 	$(foreach p,$(patsubst %$X,%,$(filter %$X,$(ALL_PROGRAMS) $(BUILT_INS) git$X)), $(RM) '$(DESTDIR_SQ)$(gitexecdir_SQ)/$p';)
 endif
diff --git a/builtin-count-objects.c b/builtin-count-objects.c
index f00306f..f8a3068 100644
--- a/builtin-count-objects.c
+++ b/builtin-count-objects.c
@@ -43,7 +43,11 @@ static void count_objects(DIR *d, char *path, int len, int verbose,
 			if (lstat(path, &st) || !S_ISREG(st.st_mode))
 				bad = 1;
 			else
+#ifdef __HAIKU__
+				(*loose_size) += ceil(st.st_size / 512.0);
+#else
 				(*loose_size) += xsize_t(st.st_blocks);
+#endif
 		}
 		if (bad) {
 			if (verbose) {
diff --git a/git-compat-util.h b/git-compat-util.h
index 167c3fe..def08dc 100644
--- a/git-compat-util.h
+++ b/git-compat-util.h
@@ -469,4 +469,8 @@ void git_qsort(void *base, size_t nmemb, size_t size,
 # define FORCE_DIR_SET_GID 0
 #endif
 
+#ifndef INET_ADDRSTRLEN
+#define INET_ADDRSTRLEN 16
+#endif
+
 #endif
diff --git a/templates/Makefile b/templates/Makefile
index bda9d13..e56682f 100644
--- a/templates/Makefile
+++ b/templates/Makefile
@@ -23,7 +23,7 @@ all: boilerplates.made custom
 
 bpsrc = $(filter-out %~,$(wildcard *--*))
 boilerplates.made : $(bpsrc)
-	$(QUIET)ls *--* 2>/dev/null | \
+	$(QUIET)ls -1 *--* 2>/dev/null | \
 	while read boilerplate; \
 	do \
 		case "$$boilerplate" in *~) continue ;; esac && \
