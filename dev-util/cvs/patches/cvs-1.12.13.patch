diff -up cvs-1.12.13/configure.in.orig cvs-1.12.13/configure.in
--- cvs-1.12.13/configure.in.orig	2010-04-28 23:59:18.202637312 -0600
+++ cvs-1.12.13/configure.in	2010-04-29 00:01:51.938999808 -0600
@@ -515,12 +515,12 @@ CVS_FUNC_PRINTF_PTR
 
 # Try to find connect and gethostbyname.
 AC_CHECK_LIB(nsl, main)
-AC_SEARCH_LIBS(connect, xnet socket inet,
+AC_SEARCH_LIBS(connect, xnet socket inet network,
   AC_DEFINE(HAVE_CONNECT, 1,
 [Define if you have the connect function.]))
 dnl no need to search nsl for gethostbyname here since we should have
 dnl just added libnsl above if we found it.
-AC_SEARCH_LIBS(gethostbyname, netinet)
+AC_SEARCH_LIBS(gethostbyname, netinet network)
 
 AC_SUBST(cvs_client_objects)
 
diff -up cvs-1.12.13/lib/getpass.c.orig cvs-1.12.13/lib/getpass.c
--- cvs-1.12.13/lib/getpass.c.orig	2005-09-19 15:12:21.001835008 -0600
+++ cvs-1.12.13/lib/getpass.c	2010-04-28 23:55:13.523239424 -0600
@@ -104,7 +104,7 @@ getpass (const char *prompt)
   else
     {
       /* We do the locking ourselves.  */
-      __fsetlocking (tty, FSETLOCKING_BYCALLER);
+//      __fsetlocking (tty, FSETLOCKING_BYCALLER);
 
       out = in = tty;
     }
diff -up cvs-1.12.13/lib/stdbool_.h.orig cvs-1.12.13/lib/stdbool_.h
--- cvs-1.12.13/lib/stdbool_.h.orig	2005-05-23 11:44:32.015204352 -0600
+++ cvs-1.12.13/lib/stdbool_.h	2010-04-28 23:55:13.506724352 -0600
@@ -55,7 +55,7 @@
 
 /* BeOS <sys/socket.h> already #defines false 0, true 1.  We use the same
    definitions below, but temporarily we have to #undef them.  */
-#ifdef __BEOS__
+#if defined(__BEOS__) && !defined(__HAIKU__)
 # include <OS.h> /* defines bool but not _Bool */
 # undef false
 # undef true
@@ -70,7 +70,7 @@
    (see ISO C 99 6.7.2.2.(4)); however, '_Bool' must promote to 'int'
    (see ISO C 99 6.3.1.1.(2)).  So we add a negative value to the
    enum; this ensures that '_Bool' promotes to 'int'.  */
-#if !(defined __cplusplus || defined __BEOS__)
+#if !(defined __cplusplus || (defined __BEOS__ && !defined __HAIKU__))
 # if !@HAVE__BOOL@
 #  if defined __SUNPRO_C && (__SUNPRO_C < 0x550 || __STDC__ == 1)
     /* Avoid stupid "warning: _Bool is a keyword in ISO C99".  */
diff -up cvs-1.12.13/m4/getaddrinfo.m4.orig cvs-1.12.13/m4/getaddrinfo.m4
--- cvs-1.12.13/m4/getaddrinfo.m4.orig	2010-04-29 00:00:46.542638080 -0600
+++ cvs-1.12.13/m4/getaddrinfo.m4	2010-04-29 00:00:53.830996480 -0600
@@ -6,7 +6,7 @@ dnl with or without modifications, as lo
 
 AC_DEFUN([gl_GETADDRINFO],
 [
-  AC_SEARCH_LIBS(getaddrinfo, nsl socket)
+  AC_SEARCH_LIBS(getaddrinfo, nsl socket network)
   AC_REPLACE_FUNCS(getaddrinfo gai_strerror)
   gl_PREREQ_GETADDRINFO
 ])
diff -up cvs-1.12.13/src/buffer.c.orig cvs-1.12.13/src/buffer.c
--- cvs-1.12.13/src/buffer.c.orig	2005-10-02 09:17:20.017563648 -0600
+++ cvs-1.12.13/src/buffer.c	2010-04-28 23:55:13.536084480 -0600
@@ -2019,7 +2019,7 @@ fd_buffer_block (void *closure, bool blo
 			 && sb.st_uid == devnull.st_uid
 			 && sb.st_gid == devnull.st_gid
 			 && sb.st_size == devnull.st_size
-			 && sb.st_blocks == devnull.st_blocks
+//			 && sb.st_blocks == devnull.st_blocks
 			 && sb.st_blksize == devnull.st_blksize);
 	if (isdevnull)
 	    errno = 0;
