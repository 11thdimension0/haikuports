SUMMARY="A set of C subroutines that is useful for indexing a set of key/value \
pairs."
DESCRIPTION="
AVLDupTree is a set of C subroutines (not C++, so you can use it in drivers) \
that is useful for indexing a set of key/value pairs, using the key to find \
a matching value. The standard AVL balanced binary tree algorithm is \
enhanced to support multiple values for the same key.  It is designed for \
future use in a file system to support fast attribute indexing and queries, \
but you can use it for other things. This package also includes the \
AGMSAVLTest GUI App. It tests the operations on the tree, provided by \
libavlduptree.
"
LICENSE="GNU LGPL v2.1"
COPYRIGHT="2001 Alexander G. M. Smith"
# This is the original homepage, but the domain is up for sale at the time
# of writing this recipe.
# HOMEPAGE="http://achilles.net/~agsmith/"
HOMEPAGE="https://github.com/HaikuArchives/AVLDupTree"
SRC_URI="git+https://github.com/HaikuArchives/AVLDupTree.git#5969ca7e26e65857a9ade8ed6abee2fda7f1e9d9"
REVISION="1"
ARCHITECTURES="x86_gcc2 ?x86 ?x86_64"
SECONDARY_ARCHITECTURES="x86_gcc2 ?x86"

PATCHES="libavlduptree-${portVersion}.patch"

PROVIDES="
	libavlduptree$secondaryArchSuffix = $portVersion
	lib:libavlduptree$secondaryArchSuffix = 1.0.0 compat >= 1
	cmd:AGMSAVLTest$secondaryArchSuffix
	app:AGMSAVLTest
	"

REQUIRES="
	haiku$secondaryArchSuffix
	cmd:autoconf
	cmd:make
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:ar
	cmd:ranlib
	cmd:install
	"

BUILD_PREREQUIRES="
	haiku${secondaryArchSuffix}_devel
	cmd:autoconf
	cmd:make
	cmd:gcc$secondaryArchSuffix
	cmd:ld$secondaryArchSuffix
	cmd:install
	cmd:mkdir
	"

BUILD()
{
	autoconf
	runConfigure ./configure
	make $jobArgs
}

INSTALL()
{
	mkdir -p $libDir
	mkdir -p $binDir
	make install PREFIX=$libDir BINDIR=$binDir
	addAppDeskbarSymlink $binDir/AGMSAVLTest

	# set up the develop directory correctly
	prepareInstalledDevelLibs libavlduptree

	# devel package
	packageEntries devel $developDir
}

# ----- devel package -------------------------------------------------------

PROVIDES_devel="
	libavlduptree${secondaryArchSuffix}_devel = $portVersion
	devel:libavlduptree$secondaryArchSuffix = 1.0.0 compat >= 1
	"

REQUIRES_devel="
	libavlduptree${secondaryArchSuffix} == $portVersion base
	"
