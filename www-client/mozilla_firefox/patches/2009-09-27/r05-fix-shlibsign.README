<mmadia> does this look odd for gcc2
<mmadia> #define NUM_ELEM(array) (sizeof(array)/sizeof(array[0])) CK_BBOOL true = CK_TRUE; CK_BBOOL false = CK_FALSE; static PRBool verbose = PR_FALSE;
<mmadia>  #define NUM_ELEM(array) (sizeof(array)/sizeof(array[0]))
<mmadia>  CK_BBOOL true = CK_TRUE;
<mmadia>  CK_BBOOL false = CK_FALSE;
<mmadia>  static PRBool verbose = PR_FALSE;
<mmadia> ignore the first line... bad paste :)
<DeadYak> looks fine to me
<mmadia> here's the error  http://haiku.pastebin.com/d3cf782e4
<mmadia> and the full file http://haiku.pastebin.com/d4125cc53
<mmu_man> anyone wanna try ?
<mmu_man> http://revolf.free.fr/beos/patches/oss-haiku-pci-reservation.diff
<DeadYak> might have some macro issues there, it's using a ton of macro defines
<DeadYak> mozilla-specific
<mmadia> any ideas what the error is indicating?
<DeadYak> as I said, something's wrong with one of the macros, looking at the output of gcc -E for that line might be helpful
<mmlr> Disreali: does this uid/gid fix also fix the read-only files btw?
<DeadYak> I think it was -E let me check
<DeadYak> yep
<mmadia> -E with -o too ?
<DeadYak> yes
<DeadYak> it'll write the source after preprocessing to the output file
<DeadYak> so you can see what all those macros actually evaluated to
<DeadYak> unless that highlights something obvious you'd probably need to enlist tqh though, I know nothing about nspr
<mmlr> mmadia: it indicates that someone defines true/false to 1/0
<mmlr> so it ends up doing CK_BBOOL 1 = CK_TRUE
<mmlr> which is a syntax error
<DeadYak> ah oops
<DeadYak> totally overlooked that
<mmlr> most likely you one of the Be/Haiku headers is indirectly included
<mmlr> BeBuild.h I think does define them
<mmlr> you could #undef true and #undef false before those lines to make sure
<DeadYak> cpp/stl_config.h:#   define true 1
<DeadYak> that should only be if __STL_NO_BOOL is defined though
<mmlr> and since it's a cpp header it shouldn't be used there right?
<DeadYak> not seeing any others in the headers offhand
<DeadYak> right
<DeadYak> only other one I see is build/gcc-2.95.3/stdbool.h:     #define true 1
<DeadYak> which definitely isn't involved
<mmlr> it's included from SupportDefs
<mmlr>  /* Grandfathering */
<mmlr>  #ifndef __cplusplus
<mmlr>  #include <stdbool.h>
<mmlr>  #endif 
<DeadYak> yes but that's headers/build
<mmlr> also in headers/os
<mmlr> it's quite likely that you end up including SupportDefs.h one way or another
<mmlr> as it defines our native int types it's included indirectly by most Be/Haiku headers
<DeadYak> hm, grep didn't find one in headers/os
<DeadYak> at least not one doing that define
<mmadia> the #undef seems to have worked for now.
<mmlr> nah, it includes stdbool.h in haiku
<DeadYak> that one presumably comes from the toolchain?
<mmlr> in beos it did define it at that place as far as I remember
<DeadYak> stdbool.h that is
<mmlr> likely
<mmlr> it should be in the gcc headers
<DeadYak> that explains that
<mmlr> not that I could find it off hand
<mmlr> ah, it's in the libgcc headers






