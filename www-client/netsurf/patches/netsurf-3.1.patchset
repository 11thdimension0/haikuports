From 7ff4f37e1263fd99dda14fda5d358d5c1974a684 Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sun, 8 Jun 2014 16:32:07 +0200
Subject: Fix various paths for Haiku.


diff --git a/Makefile b/Makefile
index ecb46b9..c5a8a5c 100644
--- a/Makefile
+++ b/Makefile
@@ -31,10 +31,10 @@ endef
 build: $(TMP_PREFIX)/build-stamp
 
 $(TMP_PREFIX)/build-stamp:
-	mkdir -p $(TMP_PREFIX)/include
+	mkdir -p $(TMP_PREFIX)/develop/headers
 	mkdir -p $(TMP_PREFIX)/lib
 	$(foreach L,$(NSLIBTARG),$(call do_prefix_install,$(L)))
-	$(MAKE) --directory=$(NETSURF_TARG) PREFIX=$(PREFIX) TARGET=$(TARGET)
+	$(MAKE) --directory=$(NETSURF_TARG) PREFIX=$(PREFIX) TARGET=$(TARGET) TMP_PREFIX=$(TMP_PREFIX)
 	touch $@
 
 install: $(TMP_PREFIX)/build-stamp
diff --git a/libcss/Makefile b/libcss/Makefile
index d80178c..f2819cd 100644
--- a/libcss/Makefile
+++ b/libcss/Makefile
@@ -44,7 +44,7 @@ endif
 include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
-I := /include/libcss
+I := /develop/headers/libcss
 
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libcss/computed.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libcss/errors.h
diff --git a/libdom/Makefile b/libdom/Makefile
index c6bc2bd..d047cef 100644
--- a/libdom/Makefile
+++ b/libdom/Makefile
@@ -38,7 +38,7 @@ ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
     LDFLAGS := $(LDFLAGS) $(shell $(PKGCONFIG) libparserutils --libs)
     LDFLAGS := $(LDFLAGS) $(shell $(PKGCONFIG) libwapcaplet --libs)
   else
-    CFLAGS := $(CFLAGS) -I$(PREFIX)/include
+    CFLAGS := $(CFLAGS) -I$(PREFIX)/system/develop/headers
     LDFLAGS := $(LDFLAGS) -lparserutils -lwapcaplet
   endif
 endif
@@ -47,11 +47,11 @@ include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
 Is := include/dom
-I := /include/dom
+I := /develop/headers/dom
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/dom.h;$(Is)/functypes.h
 
 Is := include/dom/core
-I := /include/dom/core
+I := /develop/headers/dom/core
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/attr.h;$(Is)/characterdata.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/cdatasection.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/comment.h
@@ -66,7 +66,7 @@ INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/pi.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/text.h;$(Is)/typeinfo.h
 
 Is := include/dom/events
-I := /include/dom/events
+I := /develop/headers/dom/events
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/event.h;$(Is)/ui_event.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/custom_event.h;$(Is)/mouse_event.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/keyboard_event.h;$(Is)/text_event.h
@@ -78,7 +78,7 @@ INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/event_listener.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/document_event.h
 
 Is := include/dom/html
-I := /include/dom/html
+I := /develop/headers/dom/html
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/html_document.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/html_collection.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/html_element.h
diff --git a/libdom/bindings/hubbub/Makefile b/libdom/bindings/hubbub/Makefile
index 946219d..04511a6 100644
--- a/libdom/bindings/hubbub/Makefile
+++ b/libdom/bindings/hubbub/Makefile
@@ -1,7 +1,7 @@
 ifeq ($(WITH_HUBBUB_BINDING),yes)
   DIR_SOURCES := parser.c
 
-  DIR_INSTALL_ITEMS := /include/dom/bindings/hubbub:errors.h;parser.h
+  DIR_INSTALL_ITEMS := /develop/headers/dom/bindings/hubbub:errors.h;parser.h
 
   # Hubbub
   ifneq ($(PKGCONFIG),)
diff --git a/libdom/bindings/xml/Makefile b/libdom/bindings/xml/Makefile
index ea7653c..0e4c1a2 100644
--- a/libdom/bindings/xml/Makefile
+++ b/libdom/bindings/xml/Makefile
@@ -26,7 +26,7 @@ ifeq ($(WITH_EXPAT_BINDING),yes)
 endif
 
 ifeq ($(DO_XML_INSTALL),yes)
-  DIR_INSTALL_ITEMS := /include/dom/bindings/xml:xmlerror.h;xmlparser.h
+  DIR_INSTALL_ITEMS := /develop/headers/dom/bindings/xml:xmlerror.h;xmlparser.h
 endif
 
 include $(NSBUILD)/Makefile.subdir
diff --git a/libhubbub/Makefile b/libhubbub/Makefile
index 4ec03f3..6b2e8c1 100644
--- a/libhubbub/Makefile
+++ b/libhubbub/Makefile
@@ -36,7 +36,7 @@ ifneq ($(findstring clean,$(MAKECMDGOALS)),clean)
     CFLAGS := $(CFLAGS) $(shell $(PKGCONFIG) libparserutils --cflags)
     LDFLAGS := $(LDFLAGS) $(shell $(PKGCONFIG) libparserutils --libs)
   else
-    CFLAGS := $(CFLAGS) -I$(PREFIX)/include
+    CFLAGS := $(CFLAGS) -I$(PREFIX)/develop/headers
     LDFLAGS := $(LDFLAGS) -lparserutils
   endif
 endif
@@ -51,7 +51,7 @@ ifeq ($(WANT_TEST),yes)
     TESTLDFLAGS := $(TESTLDFLAGS) \
 		$(shell $(PKGCONFIG) $(PKGCONFIGFLAGS) --libs json)
   else
-    TESTCFLAGS := $(TESTCFLAGS) -I$(PREFIX)/include/json
+    TESTCFLAGS := $(TESTCFLAGS) -I$(PREFIX)/system/develop/headers/json
     TESTLDFLAGS := $(TESTLDFLAGS) -ljson
   endif
 
@@ -61,7 +61,7 @@ ifeq ($(WANT_TEST),yes)
 endif
 
 # Extra installation rules
-I := /include/hubbub
+I := /develop/headers/hubbub
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/hubbub/errors.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/hubbub/functypes.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/hubbub/hubbub.h
diff --git a/libnsbmp/Makefile b/libnsbmp/Makefile
index aad7a6e..87ab341 100644
--- a/libnsbmp/Makefile
+++ b/libnsbmp/Makefile
@@ -29,7 +29,7 @@ endif
 include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
-I := /include/
+I := /develop/headers/
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libnsbmp.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR)/pkgconfig:lib$(COMPONENT).pc.in
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR):$(OUTPUT)
diff --git a/libnsfb/Makefile b/libnsfb/Makefile
index 14f359e..ceea738 100644
--- a/libnsfb/Makefile
+++ b/libnsfb/Makefile
@@ -13,14 +13,14 @@ include $(NSSHARED)/makefiles/Makefile.tools
 TESTRUNNER = test/runtest.sh $(BUILDDIR) $(EXEEXT)
 
 # Toolchain flags
-WARNFLAGS := -Wall -Wextra -Wundef -Wpointer-arith -Wcast-align \
+WARNFLAGS := -Wall -Wundef -Wpointer-arith -Wcast-align \
 	-Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes \
 	-Wmissing-declarations -Wnested-externs -Werror
 
 # would like these flags but gcc earlier than 4.4 fail
 #-pedantic -Wno-overlength-strings # For nsglobe.c
 
-CFLAGS := -g -std=c99 -D_BSD_SOURCE -D_POSIX_C_SOURCE=200112L \
+CFLAGS := -g -std=gnu9x -D_BSD_SOURCE -D_POSIX_C_SOURCE=200112L \
 	-I$(CURDIR)/include/ -I$(CURDIR)/src $(WARNFLAGS) $(CFLAGS) -Wno-error
 
 NSFB_XCB_PKG_NAMES := xcb xcb-icccm xcb-image xcb-keysyms xcb-atom
@@ -104,7 +104,7 @@ TESTLDFLAGS := -lm -Wl,--whole-archive -l$(COMPONENT) -Wl,--no-whole-archive $(T
 include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
-I := /include
+I := /develop/headers/
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libnsfb.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libnsfb_plot.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libnsfb_plot_util.h
diff --git a/libnsgif/Makefile b/libnsgif/Makefile
index 099477d..7f43e5c 100644
--- a/libnsgif/Makefile
+++ b/libnsgif/Makefile
@@ -29,7 +29,7 @@ endif
 include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
-I := /include
+I := /develop/headers
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libnsgif.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR)/pkgconfig:lib$(COMPONENT).pc.in
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR):$(OUTPUT)
diff --git a/libparserutils/Makefile b/libparserutils/Makefile
index 5acdc36..fa45c42 100644
--- a/libparserutils/Makefile
+++ b/libparserutils/Makefile
@@ -33,19 +33,19 @@ include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
 Is := include/parserutils
-I := /include/parserutils
+I := /develop/headers/parserutils
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/errors.h;$(Is)/functypes.h;$(Is)/parserutils.h;$(Is)/types.h
 
 Is := include/parserutils/charset
-I := /include/parserutils/charset
+I := /develop/headers/parserutils/charset
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/codec.h;$(Is)/mibenum.h;$(Is)/utf16.h;$(Is)/utf8.h
 
 Is := include/parserutils/input
-I := /include/parserutils/input
+I := /develop/headers/parserutils/input
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/inputstream.h
 
 Is := include/parserutils/utils
-I := /include/parserutils/utils
+I := /develop/headers/parserutils/utils
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):$(Is)/buffer.h;$(Is)/stack.h;$(Is)/vector.h
 
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR)/pkgconfig:lib$(COMPONENT).pc.in
diff --git a/libparserutils/libparserutils.pc.in b/libparserutils/libparserutils.pc.in
index 307e909..ea1af0c 100644
--- a/libparserutils/libparserutils.pc.in
+++ b/libparserutils/libparserutils.pc.in
@@ -1,7 +1,7 @@
 prefix=PREFIX
 exec_prefix=${prefix}
 libdir=${exec_prefix}/LIBDIR
-includedir=${prefix}/include
+includedir=${prefix}/develop/headers
 
 Name: libparserutils
 Description: Utility library for facilitating parser development
diff --git a/librosprite/Makefile b/librosprite/Makefile
index 4682a87..1f40c06 100644
--- a/librosprite/Makefile
+++ b/librosprite/Makefile
@@ -14,11 +14,11 @@ NSSHARED ?= $(PREFIX)/share/netsurf-buildsystem
 include $(NSSHARED)/makefiles/Makefile.tools
 
 # Toolchain flags
-WARNFLAGS := -Wall -Wextra -Wundef -Wpointer-arith -Wcast-align \
+WARNFLAGS := -Wall -Wundef -Wpointer-arith -Wcast-align \
 	-Wwrite-strings -Wstrict-prototypes \
-	-Wnested-externs -pedantic -std=c99 \
-	-Wno-format-zero-length -Wformat-security -Wstrict-aliasing=2 \
-	-Wmissing-format-attribute -Wunused \
+	-Wnested-externs -std=gnu9x \
+	-Wno-format-zero-length -Wformat-security \
+	-Wunused \
 	-Wformat=2 -Werror-implicit-function-declaration \
 	-Wmissing-declarations -Wmissing-prototypes
 
@@ -39,7 +39,7 @@ endif
 include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
-I := /include
+I := /develop/headers
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/librosprite.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR)/pkgconfig:lib$(COMPONENT).pc.in
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR):$(OUTPUT)
diff --git a/libsvgtiny/Makefile b/libsvgtiny/Makefile
index 392d9da..43458f7 100644
--- a/libsvgtiny/Makefile
+++ b/libsvgtiny/Makefile
@@ -45,7 +45,7 @@ endif
 include $(NSBUILD)/Makefile.top
 
 # Extra installation rules
-I := /include
+I := /develop/headers
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/svgtiny.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR)/pkgconfig:lib$(COMPONENT).pc.in
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR):$(OUTPUT)
diff --git a/libwapcaplet/Makefile b/libwapcaplet/Makefile
index f40842d..fd117a4 100644
--- a/libwapcaplet/Makefile
+++ b/libwapcaplet/Makefile
@@ -41,7 +41,7 @@ ifeq ($(WANT_TEST),yes)
 endif
 
 # Extra installation rules
-I := /include/libwapcaplet
+I := /develop/headers/libwapcaplet
 INSTALL_ITEMS := $(INSTALL_ITEMS) $(I):include/libwapcaplet/libwapcaplet.h
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR)/pkgconfig:lib$(COMPONENT).pc.in
 INSTALL_ITEMS := $(INSTALL_ITEMS) /$(LIBDIR):$(OUTPUT)
diff --git a/libwapcaplet/libwapcaplet.pc.in b/libwapcaplet/libwapcaplet.pc.in
index 9bdfdf5..91cb6b4 100644
--- a/libwapcaplet/libwapcaplet.pc.in
+++ b/libwapcaplet/libwapcaplet.pc.in
@@ -1,7 +1,7 @@
 prefix=PREFIX
 exec_prefix=${prefix}
 libdir=${exec_prefix}/LIBDIR
-includedir=${prefix}/include
+includedir=${prefix}/develop/headers
 
 Name: libwapcaplet
 Description: String internalisation dictionary
diff --git a/netsurf/beos/Makefile.defaults b/netsurf/beos/Makefile.defaults
index 303414d..a0cff73 100644
--- a/netsurf/beos/Makefile.defaults
+++ b/netsurf/beos/Makefile.defaults
@@ -3,12 +3,12 @@
 # ----------------------------------------------------------------------------
 
 # Where to install the netsurf binary
-NETSURF_BEOS_BIN := /boot/apps/netsurf/
+NETSURF_BEOS_BIN := $(PREFIX)/apps/netsurf/
 
 # TODO:HAIKU -- not sure if ~/.netsurf applies in beos
 # Where to search for NetSurf's resources after looking in ~/.netsurf and
 # $NETSURFRES.  It must have a trailing /
-NETSURF_BEOS_RESOURCES := /boot/apps/netsurf/res/
+NETSURF_BEOS_RESOURCES := $(PREFIX)/apps/netsurf/res/
 
 # Enable NetSurf's use of libsvgtiny for displaying SVGs
 # Valid options: YES, NO, AUTO
diff --git a/netsurf/beos/Makefile.target b/netsurf/beos/Makefile.target
index ed7532d..cc8cb1c 100644
--- a/netsurf/beos/Makefile.target
+++ b/netsurf/beos/Makefile.target
@@ -7,7 +7,7 @@ $(eval $(call feature_enabled,PNG,-DWITH_PNG,-lpng,PNG (libpng)  ))
 
 LDFLAGS += -L/boot/home/config/lib
 # for Haiku
-LDFLAGS += -L/boot/common/lib
+LDFLAGS += -L/boot/system/lib
 # some people do *not* have libm...
 LDFLAGS += -lssl -lcrypto -lcss
 $(eval $(call feature_enabled,NSSVG,-DWITH_NS_SVG,-lsvgtiny,SVG (libsvgtiny)))
@@ -38,13 +38,14 @@ ifeq ($(HOST),beos)
     ifneq ($(wildcard /boot/develop/lib/*/libzeta.so),)
       LDFLAGS += -lzeta
     endif
-    ifneq ($(wildcard /boot/develop/lib/*/libnetwork.so),)
+    ifneq ($(wildcard /system/develop/lib/libnetwork.so),)
       # Haiku
-      CFLAGS += -I/boot/common/include		\
-		-I/boot/common/include/hubbub	\
-		-I/boot/common/include/libcss	\
-		-I/boot/common/include/parserutils
+      CFLAGS += -I$(TMP_PREFIX)/develop/headers		\
+		-I$(TMP_PREFIX)/develop/headers/hubbub	\
+		-I$(TMP_PREFIX)/develop/headers/libcss	\
+		-I$(TMP_PREFIX)/develop/headers/parserutils
       NETLDFLAGS := -lnetwork
+	  LDFLAGS += -L$(TMP_PREFIX)/lib
     else
       ifneq ($(wildcard /boot/develop/lib/*/libbind.so),)
         # BONE
diff --git a/netsurf/beos/about.cpp b/netsurf/beos/about.cpp
index cd8070e..2483a22 100644
--- a/netsurf/beos/about.cpp
+++ b/netsurf/beos/about.cpp
@@ -23,7 +23,7 @@
 extern "C" {
 #include "desktop/netsurf.h"
 #include "utils/log.h"
-#include "utils/testament.h"
+#include "testament.h"
 #include "utils/useragent.h"
 #include "curl/curlver.h"
 }
diff --git a/netsurf/beos/gui.cpp b/netsurf/beos/gui.cpp
index 365a356..44d1977 100644
--- a/netsurf/beos/gui.cpp
+++ b/netsurf/beos/gui.cpp
@@ -80,7 +80,7 @@ extern "C" {
 static void *myrealloc(void *ptr, size_t len, void *pw);
 
 /* Where to search for shared resources.  Must have trailing / */
-#define RESPATH "/boot/apps/netsurf/res/"
+#define RESPATH "/boot/system/apps/netsurf/res/"
 
 //TODO: use resources
 // enable using resources instead of files
@@ -488,7 +488,7 @@ static bool nslog_stream_configure(FILE *fptr)
 
 static BPath get_messages_path()
 {
-	BPath p("/boot/apps/netsurf/res");
+	BPath p(RESPATH);
 	// TODO: use Haiku's BLocale stuff
 	BString lang(getenv("LC_MESSAGES"));
 	lang.Truncate(2);
-- 
1.8.3.4


From b699cee3d63a0d494c0107e612075d1a0936ecdf Mon Sep 17 00:00:00 2001
From: Adrien Destugues <pulkomandy@pulkomandy.tk>
Date: Sun, 8 Jun 2014 16:33:09 +0200
Subject: Gcc2 doesn't allow varag macros to not have extra args

Make sure there is always at least one.

diff --git a/nsgenbind/src/jsapi-libdom-const.c b/nsgenbind/src/jsapi-libdom-const.c
index ac728c7..bd4f19a 100644
--- a/nsgenbind/src/jsapi-libdom-const.c
+++ b/nsgenbind/src/jsapi-libdom-const.c
@@ -85,7 +85,7 @@ static int output_cast_literal(struct binding *binding,
 	case WEBIDL_TYPE_VOID:
 	case WEBIDL_TYPE_USER:
 	default:
-		WARN(WARNING_UNIMPLEMENTED, "types not allowed as literal");
+		WARN(WARNING_UNIMPLEMENTED, "%s", "types not allowed as literal");
 		break; /* @todo these types are not allowed here */
 	}
 
diff --git a/nsgenbind/src/jsapi-libdom-operator.c b/nsgenbind/src/jsapi-libdom-operator.c
index 1d16afe..7486178 100644
--- a/nsgenbind/src/jsapi-libdom-operator.c
+++ b/nsgenbind/src/jsapi-libdom-operator.c
@@ -171,11 +171,11 @@ static int output_return(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_BYTE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_BYTE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_BYTE");
 		break;
 
 	case WEBIDL_TYPE_OCTET:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_OCTET");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_OCTET");
 		break;
 
 	case WEBIDL_TYPE_FLOAT:
@@ -187,12 +187,12 @@ static int output_return(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_SHORT:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_SHORT");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_SHORT");
 		break;
 
 	case WEBIDL_TYPE_LONGLONG:
 		WARN(WARNING_UNIMPLEMENTED,
-		     "Unhandled type WEBIDL_TYPE_LONGLONG");
+		     "Unhandled type %s", "WEBIDL_TYPE_LONGLONG");
 		break;
 
 	case WEBIDL_TYPE_LONG:
@@ -211,7 +211,7 @@ static int output_return(struct binding *binding,
 
 	case WEBIDL_TYPE_SEQUENCE:
 		WARN(WARNING_UNIMPLEMENTED,
-		     "Unhandled type WEBIDL_TYPE_SEQUENCE");
+		     "Unhandled type %s", "WEBIDL_TYPE_SEQUENCE");
 		break;
 
 	case WEBIDL_TYPE_OBJECT:
@@ -223,7 +223,7 @@ static int output_return(struct binding *binding,
 
 	case WEBIDL_TYPE_DATE:
 		WARN(WARNING_UNIMPLEMENTED,
-		     "Unhandled type WEBIDL_TYPE_DATE");
+		     "Unhandled type %s", "WEBIDL_TYPE_DATE");
 		break;
 
 	case WEBIDL_TYPE_VOID:
@@ -289,11 +289,11 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_BYTE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_BYTE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_BYTE");
 		break;
 
 	case WEBIDL_TYPE_OCTET:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_OCTET");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_OCTET");
 		break;
 
 	case WEBIDL_TYPE_FLOAT:
@@ -303,12 +303,12 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_SHORT:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_SHORT");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_SHORT");
 		break;
 
 	case WEBIDL_TYPE_LONGLONG:
 		WARN(WARNING_UNIMPLEMENTED, 
-		     "Unhandled type WEBIDL_TYPE_LONGLONG");
+		     "Unhandled type %s", "WEBIDL_TYPE_LONGLONG");
 		break;
 
 	case WEBIDL_TYPE_LONG:
@@ -333,7 +333,7 @@ static int output_return_declaration(struct binding *binding,
 
 	case WEBIDL_TYPE_SEQUENCE:
 		WARN(WARNING_UNIMPLEMENTED, 
-		     "Unhandled type WEBIDL_TYPE_SEQUENCE");
+		     "Unhandled type %s", "WEBIDL_TYPE_SEQUENCE");
 		break;
 
 	case WEBIDL_TYPE_OBJECT:
@@ -342,7 +342,7 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_DATE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_DATE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_DATE");
 		break;
 
 	case WEBIDL_TYPE_VOID:
diff --git a/nsgenbind/src/jsapi-libdom-property.c b/nsgenbind/src/jsapi-libdom-property.c
index 2bd3068..2a74df8 100644
--- a/nsgenbind/src/jsapi-libdom-property.c
+++ b/nsgenbind/src/jsapi-libdom-property.c
@@ -558,11 +558,11 @@ static int output_return(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_BYTE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_BYTE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_BYTE");
 		break;
 
 	case WEBIDL_TYPE_OCTET:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_OCTET");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_OCTET");
 		break;
 
 	case WEBIDL_TYPE_FLOAT:
@@ -581,7 +581,7 @@ static int output_return(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_LONGLONG:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_LONGLONG");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_LONGLONG");
 		break;
 
 	case WEBIDL_TYPE_LONG:
@@ -607,7 +607,7 @@ static int output_return(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_SEQUENCE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_SEQUENCE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_SEQUENCE");
 		break;
 
 	case WEBIDL_TYPE_OBJECT:
@@ -618,7 +618,7 @@ static int output_return(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_DATE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_DATE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_DATE");
 		break;
 
 	case WEBIDL_TYPE_VOID:
@@ -675,11 +675,11 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_BYTE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_BYTE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_BYTE");
 		break;
 
 	case WEBIDL_TYPE_OCTET:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_OCTET");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_OCTET");
 		break;
 
 	case WEBIDL_TYPE_FLOAT:
@@ -707,7 +707,7 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_LONGLONG:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_LONGLONG");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_LONGLONG");
 		break;
 
 	case WEBIDL_TYPE_LONG:
@@ -736,7 +736,7 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_SEQUENCE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_SEQUENCE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_SEQUENCE");
 		break;
 
 	case WEBIDL_TYPE_OBJECT:
@@ -745,7 +745,7 @@ static int output_return_declaration(struct binding *binding,
 		break;
 
 	case WEBIDL_TYPE_DATE:
-		WARN(WARNING_UNIMPLEMENTED, "Unhandled type WEBIDL_TYPE_DATE");
+		WARN(WARNING_UNIMPLEMENTED, "Unhandled type %s", "WEBIDL_TYPE_DATE");
 		break;
 
 	case WEBIDL_TYPE_VOID:
-- 
1.8.3.4

